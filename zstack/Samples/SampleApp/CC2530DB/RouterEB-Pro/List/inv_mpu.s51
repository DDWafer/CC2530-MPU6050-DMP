///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        25/Dec/2018  16:53:09 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\Source\MPU6050_DMP\inv_mpu.c                 /
//    Command line       =  -f F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã– /
//                          Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wRoute /
//                          r.cfg (-DCPU32MHZ -DROOT=__near_func              /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK        /
//                          -DBLINK_LEDS) -f F:\key_pro\AAAAAgraduation_proje /
//                          ct\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zst /
//                          ack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2 /
//                          530DB\f8wConfig.cfg (-DSECURE=0                   /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\key_pro\AAAAAgraduation /
//                          _project\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projec /
//                          ts\zstack\Samples\SampleApp\Source\MPU6050_DMP\in /
//                          v_mpu.c -D ZIGBEEPRO -D ZTOOL_P1 -D MT_TASK -D    /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -D STM32F10X_MD -D            /
//                          USE_STDPERIPH_DRIVER -lC                          /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\RouterEB-Pro\List\ -lA              /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\RouterEB-Pro\List\ --diag_suppress  /
//                          Pe001,Pa010 -o F:\key_pro\AAAAAgraduation_project /
//                          \Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstac /
//                          k\Samples\SampleApp\CC2530DB\RouterEB-Pro\Obj\    /
//                          -e --debug --core=plain --dptr=16,1               /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã– /
//                          Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2530DB\ -I F:\key_pro\AAAAAgraduation_p /
//                          roject\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects /
//                          \zstack\Samples\SampleApp\CC2530DB\..\SOURCE\ -I  /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I         /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I    /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLU /
//                          DE\ -I F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ /
//                          ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HA /
//                          L\TARGET\CC2530EB\ -I F:\key_pro\AAAAAgraduation_ /
//                          project\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\COMPONENTS\OSAL\MCU\CCSOC\ -I                   /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCL /
//                          UDE\ -I F:\key_pro\AAAAAgraduation_project\Ωªª•œµ /
//                          Õ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\AF\ -I F:\key_pro\AAAAAgraduation_project\Ωª /
//                          ª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\STACK\NWK\ -I F:\key_pro\AAAAAgraduation_proje /
//                          ct\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zst /
//                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM /
//                          PONENTS\STACK\SEC\ -I F:\key_pro\AAAAAgraduation_ /
//                          project\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\COMPONENTS\STACK\SAPI\ -I                       /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS /
//                          \ -I F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥ /
//                          Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\ /
//                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STAC /
//                          K\ZDO\ -I F:\key_pro\AAAAAgraduation_project\Ωªª• /
//                          œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \ZMAC\F8W\ -I F:\key_pro\AAAAAgraduation_project\ /
//                          Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack /
//                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON /
//                          ENTS\ZMAC\ -I F:\key_pro\AAAAAgraduation_project\ /
//                          Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack /
//                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON /
//                          ENTS\SERVICES\SADDR\ -I                           /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\ /
//                          SDATA\ -I F:\key_pro\AAAAAgraduation_project\Ωªª• /
//                          œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \MAC\INCLUDE\ -I F:\key_pro\AAAAAgraduation_proje /
//                          ct\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zst /
//                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM /
//                          PONENTS\MAC\HIGH_LEVEL\ -I                        /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_L /
//                          EVEL\srf04\ -I F:\key_pro\AAAAAgraduation_project /
//                          \Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstac /
//                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPO /
//                          NENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I         /
//                          F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\..\..\..\ -Ohz       /
//    List file          =  F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\  /
//                          ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\RouterEB-Pro\List\inv_mpu.s51       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME inv_mpu

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_EQ
        EXTERN ?FLT_GE
        EXTERN ?FLT_LT
        EXTERN ?FLT_MUL
        EXTERN ?FLT_SUB
        EXTERN ?FLT_TO_L
        EXTERN ?L_ADD_TO_X
        EXTERN ?L_ADD_X
        EXTERN ?L_DIV_MOD
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_MUL
        EXTERN ?L_SHL
        EXTERN ?L_SUB_X
        EXTERN ?L_TO_FLT
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?SS_SHR
        EXTERN ?S_DIV_MOD
        EXTERN ?S_SHL
        EXTERN ?UL_TO_FLT
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SHR
        EXTERN ?US_SWITCH_SPARSE
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_I

        FUNCTION ??accel_self_test?relay,0203H
        FUNCTION ??get_accel_prod_shift?relay,0203H
        PUBLIC ??get_ms?relay
        FUNCTION ??get_ms?relay,0203H
        FUNCTION ??get_st_biases?relay,0203H
        FUNCTION ??gyro_self_test?relay,0203H
        PUBLIC ??inv_orientation_matrix_to_scalar?relay
        FUNCTION ??inv_orientation_matrix_to_scalar?relay,0203H
        PUBLIC ??inv_row_2_scale?relay
        FUNCTION ??inv_row_2_scale?relay,0203H
        PUBLIC ??mpu_configure_fifo?relay
        FUNCTION ??mpu_configure_fifo?relay,0203H
        PUBLIC ??mpu_get_accel_fsr?relay
        FUNCTION ??mpu_get_accel_fsr?relay,0203H
        PUBLIC ??mpu_get_accel_reg?relay
        FUNCTION ??mpu_get_accel_reg?relay,0203H
        PUBLIC ??mpu_get_accel_sens?relay
        FUNCTION ??mpu_get_accel_sens?relay,0203H
        PUBLIC ??mpu_get_compass_fsr?relay
        FUNCTION ??mpu_get_compass_fsr?relay,0203H
        PUBLIC ??mpu_get_compass_reg?relay
        FUNCTION ??mpu_get_compass_reg?relay,0203H
        PUBLIC ??mpu_get_compass_sample_rate?relay
        FUNCTION ??mpu_get_compass_sample_rate?relay,0203H
        PUBLIC ??mpu_get_dmp_state?relay
        FUNCTION ??mpu_get_dmp_state?relay,0203H
        PUBLIC ??mpu_get_fifo_config?relay
        FUNCTION ??mpu_get_fifo_config?relay,0203H
        PUBLIC ??mpu_get_gyro_fsr?relay
        FUNCTION ??mpu_get_gyro_fsr?relay,0203H
        PUBLIC ??mpu_get_gyro_reg?relay
        FUNCTION ??mpu_get_gyro_reg?relay,0203H
        PUBLIC ??mpu_get_gyro_sens?relay
        FUNCTION ??mpu_get_gyro_sens?relay,0203H
        PUBLIC ??mpu_get_int_status?relay
        FUNCTION ??mpu_get_int_status?relay,0203H
        PUBLIC ??mpu_get_lpf?relay
        FUNCTION ??mpu_get_lpf?relay,0203H
        PUBLIC ??mpu_get_power_state?relay
        FUNCTION ??mpu_get_power_state?relay,0203H
        PUBLIC ??mpu_get_sample_rate?relay
        FUNCTION ??mpu_get_sample_rate?relay,0203H
        PUBLIC ??mpu_get_temperature?relay
        FUNCTION ??mpu_get_temperature?relay,0203H
        PUBLIC ??mpu_init?relay
        FUNCTION ??mpu_init?relay,0203H
        PUBLIC ??mpu_load_firmware?relay
        FUNCTION ??mpu_load_firmware?relay,0203H
        PUBLIC ??mpu_lp_accel_mode?relay
        FUNCTION ??mpu_lp_accel_mode?relay,0203H
        PUBLIC ??mpu_lp_motion_interrupt?relay
        FUNCTION ??mpu_lp_motion_interrupt?relay,0203H
        PUBLIC ??mpu_read_fifo?relay
        FUNCTION ??mpu_read_fifo?relay,0203H
        PUBLIC ??mpu_read_fifo_stream?relay
        FUNCTION ??mpu_read_fifo_stream?relay,0203H
        PUBLIC ??mpu_read_mem?relay
        FUNCTION ??mpu_read_mem?relay,0203H
        PUBLIC ??mpu_read_reg?relay
        FUNCTION ??mpu_read_reg?relay,0203H
        PUBLIC ??mpu_reg_dump?relay
        FUNCTION ??mpu_reg_dump?relay,0203H
        PUBLIC ??mpu_reset_fifo?relay
        FUNCTION ??mpu_reset_fifo?relay,0203H
        PUBLIC ??mpu_run_self_test?relay
        FUNCTION ??mpu_run_self_test?relay,0203H
        PUBLIC ??mpu_set_accel_bias?relay
        FUNCTION ??mpu_set_accel_bias?relay,0203H
        PUBLIC ??mpu_set_accel_fsr?relay
        FUNCTION ??mpu_set_accel_fsr?relay,0203H
        PUBLIC ??mpu_set_bypass?relay
        FUNCTION ??mpu_set_bypass?relay,0203H
        PUBLIC ??mpu_set_compass_sample_rate?relay
        FUNCTION ??mpu_set_compass_sample_rate?relay,0203H
        PUBLIC ??mpu_set_dmp_state?relay
        FUNCTION ??mpu_set_dmp_state?relay,0203H
        PUBLIC ??mpu_set_gyro_fsr?relay
        FUNCTION ??mpu_set_gyro_fsr?relay,0203H
        PUBLIC ??mpu_set_int_latched?relay
        FUNCTION ??mpu_set_int_latched?relay,0203H
        PUBLIC ??mpu_set_int_level?relay
        FUNCTION ??mpu_set_int_level?relay,0203H
        PUBLIC ??mpu_set_lpf?relay
        FUNCTION ??mpu_set_lpf?relay,0203H
        PUBLIC ??mpu_set_sample_rate?relay
        FUNCTION ??mpu_set_sample_rate?relay,0203H
        PUBLIC ??mpu_set_sensors?relay
        FUNCTION ??mpu_set_sensors?relay,0203H
        PUBLIC ??mpu_write_mem?relay
        FUNCTION ??mpu_write_mem?relay,0203H
        PUBLIC ??run_self_test?relay
        FUNCTION ??run_self_test?relay,0203H
        FUNCTION ??set_int_enable?relay,0203H
        PUBWEAK __Constant_0
        PUBWEAK __Constant_1
        PUBWEAK __Constant_37800000
        PUBWEAK __Constant_3e0f5c2a
        PUBWEAK __Constant_3e99999a
        PUBWEAK __Constant_3eae147b
        PUBWEAK __Constant_3f733334
        PUBWEAK __Constant_3f845a1d
        PUBWEAK __Constant_3f85e354
        PUBWEAK __Constant_41200000
        PUBWEAK __Constant_41833333
        PUBWEAK __Constant_41c80000
        PUBWEAK __Constant_42033333
        PUBWEAK __Constant_420c0000
        PUBWEAK __Constant_42830000
        PUBWEAK __Constant_42d20001
        PUBWEAK __Constant_43030000
        PUBWEAK __Constant_45000000
        PUBWEAK __Constant_47800000
        PUBWEAK __Constant_bf800000
        PUBWEAK __Constant_ffff0000
        FUNCTION accel_self_test,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 38, STACK
        FUNCTION get_accel_prod_shift,021203H
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC get_ms
        FUNCTION get_ms,0203H
        ARGFRAME XSTACK, 0, STACK
        FUNCTION get_st_biases,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 55, STACK
        FUNCTION gyro_self_test,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 29, STACK
        PUBLIC hw
        PUBLIC inv_orientation_matrix_to_scalar
        FUNCTION inv_orientation_matrix_to_scalar,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC inv_row_2_scale
        FUNCTION inv_row_2_scale,0203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_configure_fifo
        FUNCTION mpu_configure_fifo,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC mpu_get_accel_fsr
        FUNCTION mpu_get_accel_fsr,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_accel_reg
        FUNCTION mpu_get_accel_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC mpu_get_accel_sens
        FUNCTION mpu_get_accel_sens,0203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_compass_fsr
        FUNCTION mpu_get_compass_fsr,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_get_compass_reg
        FUNCTION mpu_get_compass_reg,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_get_compass_sample_rate
        FUNCTION mpu_get_compass_sample_rate,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_dmp_state
        FUNCTION mpu_get_dmp_state,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_fifo_config
        FUNCTION mpu_get_fifo_config,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 3, STACK
        PUBLIC mpu_get_gyro_fsr
        FUNCTION mpu_get_gyro_fsr,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_gyro_reg
        FUNCTION mpu_get_gyro_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC mpu_get_gyro_sens
        FUNCTION mpu_get_gyro_sens,0203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC mpu_get_int_status
        FUNCTION mpu_get_int_status,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC mpu_get_lpf
        FUNCTION mpu_get_lpf,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_power_state
        FUNCTION mpu_get_power_state,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_sample_rate
        FUNCTION mpu_get_sample_rate,0203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_get_temperature
        FUNCTION mpu_get_temperature,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC mpu_init
        FUNCTION mpu_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC mpu_load_firmware
        FUNCTION mpu_load_firmware,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC mpu_lp_accel_mode
        FUNCTION mpu_lp_accel_mode,021203H
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC mpu_lp_motion_interrupt
        FUNCTION mpu_lp_motion_interrupt,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        PUBLIC mpu_read_fifo
        FUNCTION mpu_read_fifo,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC mpu_read_fifo_stream
        FUNCTION mpu_read_fifo_stream,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC mpu_read_mem
        FUNCTION mpu_read_mem,021203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC mpu_read_reg
        FUNCTION mpu_read_reg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC mpu_reg_dump
        FUNCTION mpu_reg_dump,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_reset_fifo
        FUNCTION mpu_reset_fifo,021203H
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_run_self_test
        FUNCTION mpu_run_self_test,021203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 48, STACK
        PUBLIC mpu_set_accel_bias
        FUNCTION mpu_set_accel_bias,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 44, STACK
        PUBLIC mpu_set_accel_fsr
        FUNCTION mpu_set_accel_fsr,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_bypass
        FUNCTION mpu_set_bypass,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_compass_sample_rate
        FUNCTION mpu_set_compass_sample_rate,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC mpu_set_dmp_state
        FUNCTION mpu_set_dmp_state,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC mpu_set_gyro_fsr
        FUNCTION mpu_set_gyro_fsr,0a1203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_int_latched
        FUNCTION mpu_set_int_latched,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_int_level
        FUNCTION mpu_set_int_level,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC mpu_set_lpf
        FUNCTION mpu_set_lpf,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_sample_rate
        FUNCTION mpu_set_sample_rate,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_set_sensors
        FUNCTION mpu_set_sensors,021203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC mpu_write_mem
        FUNCTION mpu_write_mem,021203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC reg
        PUBLIC run_self_test
        FUNCTION run_self_test,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        FUNCTION set_int_enable,021203H
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC test
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
dmp_set_gyro_bias   SYMBOL "dmp_set_gyro_bias"
dmp_set_accel_bias  SYMBOL "dmp_set_accel_bias"
I2C_Write           SYMBOL "I2C_Write"
I2C_Read            SYMBOL "I2C_Read"
delay_ms            SYMBOL "delay_ms"
memset              SYMBOL "memset"
labs                SYMBOL "labs"
memcmp              SYMBOL "memcmp"
??I2C_Read?relay    SYMBOL "?relay", I2C_Read
??I2C_Write?relay   SYMBOL "?relay", I2C_Write
??delay_ms?relay    SYMBOL "?relay", delay_ms
??dmp_set_accel_bias?relay SYMBOL "?relay", dmp_set_accel_bias
??dmp_set_gyro_bias?relay SYMBOL "?relay", dmp_set_gyro_bias
??labs?relay        SYMBOL "?relay", labs
??memcmp?relay      SYMBOL "?relay", memcmp
??memset?relay      SYMBOL "?relay", memset
get_ms              SYMBOL "get_ms"
??get_ms?relay      SYMBOL "?relay", get_ms
inv_orientation_matrix_to_scalar SYMBOL "inv_orientation_matrix_to_scalar"
??inv_orientation_matrix_to_scalar?relay SYMBOL "?relay", inv_orientation_matrix_to_scalar
inv_row_2_scale     SYMBOL "inv_row_2_scale"
??inv_row_2_scale?relay SYMBOL "?relay", inv_row_2_scale
mpu_configure_fifo  SYMBOL "mpu_configure_fifo"
??mpu_configure_fifo?relay SYMBOL "?relay", mpu_configure_fifo
mpu_get_accel_fsr   SYMBOL "mpu_get_accel_fsr"
??mpu_get_accel_fsr?relay SYMBOL "?relay", mpu_get_accel_fsr
mpu_get_accel_reg   SYMBOL "mpu_get_accel_reg"
??mpu_get_accel_reg?relay SYMBOL "?relay", mpu_get_accel_reg
mpu_get_accel_sens  SYMBOL "mpu_get_accel_sens"
??mpu_get_accel_sens?relay SYMBOL "?relay", mpu_get_accel_sens
mpu_get_compass_fsr SYMBOL "mpu_get_compass_fsr"
??mpu_get_compass_fsr?relay SYMBOL "?relay", mpu_get_compass_fsr
mpu_get_compass_reg SYMBOL "mpu_get_compass_reg"
??mpu_get_compass_reg?relay SYMBOL "?relay", mpu_get_compass_reg
mpu_get_compass_sample_rate SYMBOL "mpu_get_compass_sample_rate"
??mpu_get_compass_sample_rate?relay SYMBOL "?relay", mpu_get_compass_sample_rate
mpu_get_dmp_state   SYMBOL "mpu_get_dmp_state"
??mpu_get_dmp_state?relay SYMBOL "?relay", mpu_get_dmp_state
mpu_get_fifo_config SYMBOL "mpu_get_fifo_config"
??mpu_get_fifo_config?relay SYMBOL "?relay", mpu_get_fifo_config
mpu_get_gyro_fsr    SYMBOL "mpu_get_gyro_fsr"
??mpu_get_gyro_fsr?relay SYMBOL "?relay", mpu_get_gyro_fsr
mpu_get_gyro_reg    SYMBOL "mpu_get_gyro_reg"
??mpu_get_gyro_reg?relay SYMBOL "?relay", mpu_get_gyro_reg
mpu_get_gyro_sens   SYMBOL "mpu_get_gyro_sens"
??mpu_get_gyro_sens?relay SYMBOL "?relay", mpu_get_gyro_sens
mpu_get_int_status  SYMBOL "mpu_get_int_status"
??mpu_get_int_status?relay SYMBOL "?relay", mpu_get_int_status
mpu_get_lpf         SYMBOL "mpu_get_lpf"
??mpu_get_lpf?relay SYMBOL "?relay", mpu_get_lpf
mpu_get_power_state SYMBOL "mpu_get_power_state"
??mpu_get_power_state?relay SYMBOL "?relay", mpu_get_power_state
mpu_get_sample_rate SYMBOL "mpu_get_sample_rate"
??mpu_get_sample_rate?relay SYMBOL "?relay", mpu_get_sample_rate
mpu_get_temperature SYMBOL "mpu_get_temperature"
??mpu_get_temperature?relay SYMBOL "?relay", mpu_get_temperature
mpu_init            SYMBOL "mpu_init"
??mpu_init?relay    SYMBOL "?relay", mpu_init
mpu_load_firmware   SYMBOL "mpu_load_firmware"
??mpu_load_firmware?relay SYMBOL "?relay", mpu_load_firmware
mpu_lp_accel_mode   SYMBOL "mpu_lp_accel_mode"
??mpu_lp_accel_mode?relay SYMBOL "?relay", mpu_lp_accel_mode
mpu_lp_motion_interrupt SYMBOL "mpu_lp_motion_interrupt"
??mpu_lp_motion_interrupt?relay SYMBOL "?relay", mpu_lp_motion_interrupt
mpu_read_fifo       SYMBOL "mpu_read_fifo"
??mpu_read_fifo?relay SYMBOL "?relay", mpu_read_fifo
mpu_read_fifo_stream SYMBOL "mpu_read_fifo_stream"
??mpu_read_fifo_stream?relay SYMBOL "?relay", mpu_read_fifo_stream
mpu_read_mem        SYMBOL "mpu_read_mem"
??mpu_read_mem?relay SYMBOL "?relay", mpu_read_mem
mpu_read_reg        SYMBOL "mpu_read_reg"
??mpu_read_reg?relay SYMBOL "?relay", mpu_read_reg
mpu_reg_dump        SYMBOL "mpu_reg_dump"
??mpu_reg_dump?relay SYMBOL "?relay", mpu_reg_dump
mpu_reset_fifo      SYMBOL "mpu_reset_fifo"
??mpu_reset_fifo?relay SYMBOL "?relay", mpu_reset_fifo
mpu_run_self_test   SYMBOL "mpu_run_self_test"
??mpu_run_self_test?relay SYMBOL "?relay", mpu_run_self_test
mpu_set_accel_bias  SYMBOL "mpu_set_accel_bias"
??mpu_set_accel_bias?relay SYMBOL "?relay", mpu_set_accel_bias
mpu_set_accel_fsr   SYMBOL "mpu_set_accel_fsr"
??mpu_set_accel_fsr?relay SYMBOL "?relay", mpu_set_accel_fsr
mpu_set_bypass      SYMBOL "mpu_set_bypass"
??mpu_set_bypass?relay SYMBOL "?relay", mpu_set_bypass
mpu_set_compass_sample_rate SYMBOL "mpu_set_compass_sample_rate"
??mpu_set_compass_sample_rate?relay SYMBOL "?relay", mpu_set_compass_sample_rate
mpu_set_dmp_state   SYMBOL "mpu_set_dmp_state"
??mpu_set_dmp_state?relay SYMBOL "?relay", mpu_set_dmp_state
mpu_set_gyro_fsr    SYMBOL "mpu_set_gyro_fsr"
??mpu_set_gyro_fsr?relay SYMBOL "?relay", mpu_set_gyro_fsr
mpu_set_int_latched SYMBOL "mpu_set_int_latched"
??mpu_set_int_latched?relay SYMBOL "?relay", mpu_set_int_latched
mpu_set_int_level   SYMBOL "mpu_set_int_level"
??mpu_set_int_level?relay SYMBOL "?relay", mpu_set_int_level
mpu_set_lpf         SYMBOL "mpu_set_lpf"
??mpu_set_lpf?relay SYMBOL "?relay", mpu_set_lpf
mpu_set_sample_rate SYMBOL "mpu_set_sample_rate"
??mpu_set_sample_rate?relay SYMBOL "?relay", mpu_set_sample_rate
mpu_set_sensors     SYMBOL "mpu_set_sensors"
??mpu_set_sensors?relay SYMBOL "?relay", mpu_set_sensors
mpu_write_mem       SYMBOL "mpu_write_mem"
??mpu_write_mem?relay SYMBOL "?relay", mpu_write_mem
run_self_test       SYMBOL "run_self_test"
??run_self_test?relay SYMBOL "?relay", run_self_test

        EXTERN dmp_set_gyro_bias
        FUNCTION dmp_set_gyro_bias,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN dmp_set_accel_bias
        FUNCTION dmp_set_accel_bias,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN I2C_Write
        FUNCTION I2C_Write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN I2C_Read
        FUNCTION I2C_Read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN delay_ms
        FUNCTION delay_ms,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN labs
        FUNCTION labs,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcmp
        FUNCTION memcmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??I2C_Read?relay
        FUNCTION ??I2C_Read?relay,00H
        EXTERN ??I2C_Write?relay
        FUNCTION ??I2C_Write?relay,00H
        EXTERN ??delay_ms?relay
        FUNCTION ??delay_ms?relay,00H
        EXTERN ??dmp_set_accel_bias?relay
        FUNCTION ??dmp_set_accel_bias?relay,00H
        EXTERN ??dmp_set_gyro_bias?relay
        FUNCTION ??dmp_set_gyro_bias?relay,00H
        EXTERN ??labs?relay
        FUNCTION ??labs?relay,00H
        EXTERN ??memcmp?relay
        FUNCTION ??memcmp?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H

// F:\key_pro\AAAAAgraduation_project\Ωªª•œµÕ≥≥Ã–Ú\ ÷ª∑\ ÷ª∑\÷ª∑¢ÀÕ ˝æ›\Projects\zstack\Samples\SampleApp\Source\MPU6050_DMP\inv_mpu.c
//    1 /*
//    2  $License:
//    3     Copyright (C) 2011-2012 InvenSense Corporation, All Rights Reserved.
//    4     See included License.txt for License information.
//    5  $
//    6  */
//    7 /**
//    8  *  @addtogroup  DRIVERS Sensor Driver Layer
//    9  *  @brief       Hardware drivers to communicate with sensors via I2C.
//   10  *
//   11  *  @{
//   12  *      @file       inv_mpu.c
//   13  *      @brief      An I2C-based driver for Invensense gyroscopes.
//   14  *      @details    This driver currently works for the following devices:
//   15  *                  MPU6050
//   16  *                  MPU6500
//   17  *                  MPU9150 (or MPU6050 w/ AK8975 on the auxiliary bus)
//   18  *                  MPU9250 (or MPU6500 w/ AK8963 on the auxiliary bus)
//   19  *
//   20  */
//   21 
//   22 
//   23 //”≥…‰’‚Àƒ∏ˆ∫Ø ˝
//   24 //#define i2c_write   I2C_Write
//   25 //#define i2c_read    I2C_Read
//   26 //#define delay_ms    delay_ms
//   27 //#define get_ms      get_ms
//   28 
//   29 #include <stdio.h>
//   30 #include <stdint.h>
//   31 #include <stdlib.h>
//   32 #include <string.h>
//   33 #include <math.h>
//   34 
//   35 #include "inv_mpu.h"
//   36 #include "iic.h"
//   37 //#include "mpu6050.h"
//   38 #include "delay.h"
//   39 
//   40 extern int I2C_Write(unsigned char addr, unsigned char reg, unsigned char len, unsigned char* data);
//   41 extern int I2C_Read(unsigned char addr, unsigned char reg, unsigned char len, unsigned char *buf);
//   42 int dmp_set_gyro_bias(long *bias) ;
//   43 int dmp_set_accel_bias(long *bias);
//   44 
//   45 /* The following functions must be defined for this platform:
//   46  * i2c_write(unsigned char slave_addr, unsigned char reg_addr,
//   47  *      unsigned char length, unsigned char const *data)
//   48  * i2c_read(unsigned char slave_addr, unsigned char reg_addr,
//   49  *      unsigned char length, unsigned char *data)
//   50  * delay_ms(unsigned long num_ms)
//   51  * get_ms(unsigned long *count)
//   52  * reg_int_cb(void (*cb)(void), unsigned char port, unsigned char pin)
//   53  * labs(long x)
//   54  * fabsf(float x)
//   55  * min(int a, int b)
//   56  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   57 void run_self_test(void)
run_self_test:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function run_self_test
        CODE
//   58 {
        FUNCALL run_self_test, mpu_run_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, mpu_get_gyro_sens
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, dmp_set_gyro_bias
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, mpu_get_accel_sens
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL run_self_test, dmp_set_accel_bias
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 30
        MOV     A,#-0x1e
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
//   59     int result;
//   60 //    char test_packet[4] = {0};
//   61     long gyro[3], accel[3];
//   62 
//   63     result = mpu_run_self_test(gyro, accel);
//   64     if (result == 0x7) {
        ; Setup parameters for call to function mpu_run_self_test
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_run_self_test?relay
        MOV     ?V0 + 0,R2
        MOV     A,#0x7
        XRL     A,?V0 + 0
        JNZ     ??run_self_test_0
        MOV     A,R3
??run_self_test_0:
        JZ      $+5
        LJMP    ??run_self_test_1 & 0xFFFF
//   65         /* Test passed. We can trust the gyro data here, so let's push it down
//   66          * to the DMP.
//   67          */
//   68         float sens;
//   69         unsigned short accel_sens;
//   70         mpu_get_gyro_sens(&sens);
        ; Setup parameters for call to function mpu_get_gyro_sens
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_gyro_sens?relay
//   71         gyro[0] = (long)(gyro[0] * sens);
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//   72         gyro[1] = (long)(gyro[1] * sens);
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//   73         gyro[2] = (long)(gyro[2] * sens);
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0x1a
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//   74         dmp_set_gyro_bias(gyro);
        ; Setup parameters for call to function dmp_set_gyro_bias
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??dmp_set_gyro_bias?relay
//   75         mpu_get_accel_sens(&accel_sens);
        ; Setup parameters for call to function mpu_get_accel_sens
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_accel_sens?relay
//   76         accel[0] *= accel_sens;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_60:
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//   77         accel[1] *= accel_sens;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//   78         accel[2] *= accel_sens;
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?L_MUL
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//   79         dmp_set_accel_bias(accel);
        ; Setup parameters for call to function dmp_set_accel_bias
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??dmp_set_accel_bias?relay
//   80     }
//   81 }
??run_self_test_1:
        MOV     A,#0x1e
        SJMP    ??Subroutine104_0
        CFI EndBlock cfiBlock0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
hw:
        DB 104
        DATA16
        DW 1024
        DATA8
        DB 118
        DATA16
        DW 340
        DW -521
        DW 256

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
reg:
        DB 117
        DB 25
        DB 26
        DB 12
        DB 106
        DB 35
        DB 27
        DB 28
        DB 31
        DB 32
        DB 114
        DB 116
        DB 67
        DB 59
        DB 65
        DB 56
        DB 57
        DB 58
        DB 107
        DB 108
        DB 55
        DB 111
        DB 6
        DB 36
        DB 109
        DB 110
        DB 112

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
test:
        DATA32
        DD 131
        DD 2048
        DATA8
        DB 0
        DB 1
        DB 0
        DB 24
        DATA16
        DW 50
        DATA8
        DB 5
        DATA32
        DD 41200000H
        DD 42D20000H
        DD 3E0F5C29H
        DD 3E99999AH
        DD 3F733333H
        DD 3E0F5C29H

        RSEG XDATA_I:XDATA:NOROOT(0)
st:
        DATA8
        DS 35
        REQUIRE `?<Initializer for st>`
        REQUIRE __INIT_XDATA_I

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        CFI EndBlock cfiBlock1
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine104_0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Valid
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//   82 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   83  unsigned short inv_orientation_matrix_to_scalar(
inv_orientation_matrix_to_scalar:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function inv_orientation_matrix_to_scalar
        CODE
//   84     const signed char *mtx)
//   85 {
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL inv_orientation_matrix_to_scalar, inv_row_2_scale
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   86     unsigned short scalar;
//   87 
//   88     /*
//   89        XYZ  010_001_000 Identity Matrix
//   90        XZY  001_010_000
//   91        YXZ  010_000_001
//   92        YZX  000_010_001
//   93        ZXY  001_000_010
//   94        ZYX  000_001_010
//   95      */
//   96 
//   97     scalar  = inv_row_2_scale(mtx);
        ; Setup parameters for call to function inv_row_2_scale
        LCALL   ??inv_row_2_scale?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//   98     scalar |= inv_row_2_scale(mtx + 3) << 3;
        ; Setup parameters for call to function inv_row_2_scale
        MOV     A,R6
        ADD     A,#0x3
        LCALL   ?Subroutine55 & 0xFFFF
//   99     scalar |= inv_row_2_scale(mtx + 6) << 6;
//  100 
//  101 
//  102     return scalar;
??CrossCallReturnLabel_87:
        MOV     A,#0x3
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ORL     A,?V0 + 2
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 3
        MOV     ?V0 + 1,A
        ; Setup parameters for call to function inv_row_2_scale
        MOV     A,R6
        ADD     A,#0x6
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_88:
        MOV     A,#0x6
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ORL     A,?V0 + 2
        MOV     R2,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 3
        MOV     R3,A
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//  103 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_87
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_88
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker6 Using cfiCommon1
        CFI (cfiPicker6) NoFunction
        CFI (cfiPicker6) Picker
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??inv_row_2_scale?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiPicker6

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  104  unsigned short inv_row_2_scale(const signed char *row)
inv_row_2_scale:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function inv_row_2_scale
        CODE
//  105 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  106     unsigned short b;
//  107 
//  108     if (row[0] > 0)
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_153:
        JC      ??inv_row_2_scale_0
//  109         b = 0;
        MOV     R2,#0x0
        SJMP    ??inv_row_2_scale_1
//  110     else if (row[0] < 0)
??inv_row_2_scale_0:
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_89:
        JNC     ??inv_row_2_scale_2
//  111         b = 4;
        MOV     R2,#0x4
        SJMP    ??inv_row_2_scale_1
//  112     else if (row[1] > 0)
??inv_row_2_scale_2:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_154:
        JC      ??inv_row_2_scale_3
//  113         b = 1;
        MOV     R2,#0x1
        SJMP    ??inv_row_2_scale_1
//  114     else if (row[1] < 0)
??inv_row_2_scale_3:
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_90:
        JNC     ??inv_row_2_scale_4
//  115         b = 5;
        MOV     R2,#0x5
        SJMP    ??inv_row_2_scale_1
//  116     else if (row[2] > 0)
??inv_row_2_scale_4:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_155:
        JC      ??inv_row_2_scale_5
//  117         b = 2;
        MOV     R2,#0x2
        SJMP    ??inv_row_2_scale_1
//  118     else if (row[2] < 0)
??inv_row_2_scale_5:
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_91:
        JNC     ??inv_row_2_scale_6
//  119         b = 6;
        MOV     R2,#0x6
        SJMP    ??inv_row_2_scale_1
//  120     else
//  121         b = 7;      // error
??inv_row_2_scale_6:
        MOV     R2,#0x7
??inv_row_2_scale_1:
        LJMP    ??Subroutine112_0 & 0xFFFF
        CFI EndBlock cfiBlock7
//  122     return b;
//  123 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
        CFI Block cfiCond8 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_89
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_90
        CFI (cfiCond9) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond9) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond9) CFA_SP SP+-5
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_91
        CFI (cfiCond10) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond10) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond10) CFA_SP SP+-5
        CFI Block cfiPicker11 Using cfiCommon1
        CFI (cfiPicker11) NoFunction
        CFI (cfiPicker11) Picker
        MOV     A,R0
        CLR     C
        LCALL   ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_244:
        RET
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiPicker11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond12 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_154
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond13 Using cfiCommon0
        CFI (cfiCond13) NoFunction
        CFI (cfiCond13) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond13) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond13) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond13) CFA_SP SP+-5
        CFI Block cfiPicker14 Using cfiCommon1
        CFI (cfiPicker14) NoFunction
        CFI (cfiPicker14) Picker
        INC     DPTR
        CFI EndBlock cfiCond12
        CFI EndBlock cfiCond13
        CFI EndBlock cfiPicker14
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine105_0:
        CFI Block cfiCond15 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_153
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_154
        CFI (cfiCond16) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond16) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond16) CFA_SP SP+-5
        CFI Block cfiCond17 Using cfiCommon0
        CFI (cfiCond17) NoFunction
        CFI (cfiCond17) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond17) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond17) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond17) CFA_SP SP+-5
        CFI Block cfiPicker18 Using cfiCommon1
        CFI (cfiPicker18) NoFunction
        CFI (cfiPicker18) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     C
        SUBB    A,#0x1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiCond17
        CFI EndBlock cfiPicker18
//  124 
//  125 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  126 void get_ms(unsigned long *time)
get_ms:
        CFI Block cfiBlock19 Using cfiCommon0
        CFI Function get_ms
        CODE
//  127 {
        ; Saved register size: 0
        ; Auto size: 0
//  128 
//  129 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock19
//  130 
//  131 #define MPU6050
//  132 #define MOTION_DRIVER_TARGET_MSP430
//  133 
//  134 #if defined MOTION_DRIVER_TARGET_MSP430
//  135 /*#include "msp430.h"
//  136 #include "msp430_i2c.h"
//  137 #include "msp430_clock.h"
//  138 #include "msp430_interrupt.h" */
//  139 
//  140 #define i2c_write   I2C_Write
//  141 #define i2c_read    I2C_Read
//  142 #define delay_ms    delay_ms
//  143 #define get_ms      get_ms
//  144 
//  145 //static int reg_int_cb(struct int_param_s *int_param)
//  146 //{
//  147 //    /*return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
//  148 //        int_param->active_low);*/
//  149 //		return 0;
//  150 //}	  
//  151 //#define log_i(...)     do {} while (0)
//  152 //#define log_e(...)     do {} while (0)
//  153 //#define log_e    PrintChar
//  154 //#define log_i    PrintChar
//  155 /* labs is already defined by TI's toolchain. */
//  156 /* fabs is for doubles. fabsf is for floats. */
//  157 ///////∂Œ–°—Û///////////////
//  158 #define fabs(x)     (((x)>0)?(x):-(x))
//  159 /////////////////////////////////
//  160 //#define fabs        fabsf
//  161 #define min(a,b) ((a<b)?a:b)
//  162 
//  163 #elif defined EMPL_TARGET_MSP430
//  164 //#include "msp430.h"
//  165 //#include "msp430_i2c.h"
//  166 //#include "msp430_clock.h"
//  167 //#include "msp430_interrupt.h"
//  168 #include "log.h"
//  169 #define i2c_write   msp430_i2c_write
//  170 #define i2c_read    msp430_i2c_read
//  171 #define delay_ms    msp430_delay_ms
//  172 #define get_ms      msp430_get_clock_ms
//  173 static inline int reg_int_cb(struct int_param_s *int_param)
//  174 {
//  175     return msp430_reg_int_cb(int_param->cb, int_param->pin, int_param->lp_exit,
//  176         int_param->active_low);
//  177 }
//  178 #define log_i       MPL_LOGI
//  179 #define log_e       MPL_LOGE
//  180 /* labs is already defined by TI's toolchain. */
//  181 /* fabs is for doubles. fabsf is for floats. */
//  182 #define fabs        fabsf
//  183 #define min(a,b) ((a<b)?a:b)
//  184 #elif defined EMPL_TARGET_UC3L0
//  185 /* Instead of using the standard TWI driver from the ASF library, we're using
//  186  * a TWI driver that follows the slave address + register address convention.
//  187  */
//  188 #include "twi.h"
//  189 #include "delay.h"
//  190 #include "sysclk.h"
//  191 #include "log.h"
//  192 #include "sensors_xplained.h"
//  193 #include "uc3l0_clock.h"
//  194 #define i2c_write(a, b, c, d)   twi_write(a, b, d, c)
//  195 #define i2c_read(a, b, c, d)    twi_read(a, b, d, c)
//  196 /* delay_ms is a function already defined in ASF. */
//  197 #define get_ms  uc3l0_get_clock_ms
//  198 
//  199 static inline int reg_int_cb(struct int_param_s *int_param)
//  200 {
//  201     sensor_board_irq_connect(int_param->pin, int_param->cb, int_param->arg);
//  202     return 0;
//  203 }
//  204 #define log_i       MPL_LOGI
//  205 #define log_e       MPL_LOGE
//  206 /* UC3 is a 32-bit processor, so abs and labs are equivalent. */
//  207 #define labs        abs
//  208 #define fabs(x)     (((x)>0)?(x):-(x))
//  209 #else
//  210 //#error  Gyro driver is missing the system layer implementations.
//  211 #endif
//  212 
//  213 #if !defined MPU6050 && !defined MPU9150 && !defined MPU6500 && !defined MPU9250
//  214 //#error  Which gyro are you using? Define MPUxxxx in your compiler options.
//  215 #endif
//  216 
//  217 /* Time for some messy macro work. =]
//  218  * #define MPU9150
//  219  * is equivalent to..
//  220  * #define MPU6050
//  221  * #define AK8975_SECONDARY
//  222  *
//  223  * #define MPU9250
//  224  * is equivalent to..
//  225  * #define MPU6500
//  226  * #define AK8963_SECONDARY
//  227  */
//  228 #if defined MPU9150
//  229 #ifndef MPU6050
//  230 #define MPU6050
//  231 #endif                          /* #ifndef MPU6050 */
//  232 #if defined AK8963_SECONDARY
//  233 #error "MPU9150 and AK8963_SECONDARY cannot both be defined."
//  234 #elif !defined AK8975_SECONDARY /* #if defined AK8963_SECONDARY */
//  235 #define AK8975_SECONDARY
//  236 #endif                          /* #if defined AK8963_SECONDARY */
//  237 #elif defined MPU9250           /* #if defined MPU9150 */
//  238 #ifndef MPU6500
//  239 #define MPU6500
//  240 #endif                          /* #ifndef MPU6500 */
//  241 #if defined AK8975_SECONDARY
//  242 #error "MPU9250 and AK8975_SECONDARY cannot both be defined."
//  243 #elif !defined AK8963_SECONDARY /* #if defined AK8975_SECONDARY */
//  244 #define AK8963_SECONDARY
//  245 #endif                          /* #if defined AK8975_SECONDARY */
//  246 #endif                          /* #if defined MPU9150 */
//  247 
//  248 #if defined AK8975_SECONDARY || defined AK8963_SECONDARY
//  249 #define AK89xx_SECONDARY
//  250 #else
//  251 /* #warning "No compass = less profit for Invensense. Lame." */
//  252 #endif
//  253 
//  254 static int set_int_enable(unsigned char enable);
//  255 
//  256 /* Hardware registers needed by driver. */
//  257 struct gyro_reg_s {
//  258     unsigned char who_am_i;
//  259     unsigned char rate_div;
//  260     unsigned char lpf;
//  261     unsigned char prod_id;
//  262     unsigned char user_ctrl;
//  263     unsigned char fifo_en;
//  264     unsigned char gyro_cfg;
//  265     unsigned char accel_cfg;
//  266 
//  267     //unsigned char accel_cfg2;
//  268 
//  269     //unsigned char lp_accel_odr;
//  270 
//  271     unsigned char motion_thr;
//  272     unsigned char motion_dur;
//  273     unsigned char fifo_count_h;
//  274     unsigned char fifo_r_w;
//  275     unsigned char raw_gyro;
//  276     unsigned char raw_accel;
//  277     unsigned char temp;
//  278     unsigned char int_enable;
//  279     unsigned char dmp_int_status;
//  280     unsigned char int_status;
//  281 
//  282     //unsigned char accel_intel;
//  283 
//  284     unsigned char pwr_mgmt_1;
//  285     unsigned char pwr_mgmt_2;
//  286     unsigned char int_pin_cfg;
//  287     unsigned char mem_r_w;
//  288     unsigned char accel_offs;
//  289     unsigned char i2c_mst;
//  290     unsigned char bank_sel;
//  291     unsigned char mem_start_addr;
//  292     unsigned char prgm_start_h;
//  293 #if defined AK89xx_SECONDARY
//  294     unsigned char s0_addr;
//  295     unsigned char s0_reg;
//  296     unsigned char s0_ctrl;
//  297     unsigned char s1_addr;
//  298     unsigned char s1_reg;
//  299     unsigned char s1_ctrl;
//  300     unsigned char s4_ctrl;
//  301     unsigned char s0_do;
//  302     unsigned char s1_do;
//  303     unsigned char i2c_delay_ctrl;
//  304     unsigned char raw_compass;
//  305     /* The I2C_MST_VDDIO bit is in this register. */
//  306     unsigned char yg_offs_tc;
//  307 #endif
//  308 };
//  309 
//  310 /* Information specific to a particular device. */
//  311 struct hw_s {
//  312     unsigned char addr;
//  313     unsigned short max_fifo;
//  314     unsigned char num_reg;
//  315     unsigned short temp_sens;
//  316     short temp_offset;
//  317     unsigned short bank_size;
//  318 #if defined AK89xx_SECONDARY
//  319     unsigned short compass_fsr;
//  320 #endif
//  321 };
//  322 
//  323 /* When entering motion interrupt mode, the driver keeps track of the
//  324  * previous state so that it can be restored at a later time.
//  325  * TODO: This is tacky. Fix it.
//  326  */
//  327 struct motion_int_cache_s {
//  328     unsigned short gyro_fsr;
//  329     unsigned char accel_fsr;
//  330     unsigned short lpf;
//  331     unsigned short sample_rate;
//  332     unsigned char sensors_on;
//  333     unsigned char fifo_sensors;
//  334     unsigned char dmp_on;
//  335 };
//  336 
//  337 /* Cached chip configuration data.
//  338  * TODO: A lot of these can be handled with a bitmask.
//  339  */
//  340 struct chip_cfg_s {
//  341     /* Matches gyro_cfg >> 3 & 0x03 */
//  342     unsigned char gyro_fsr;
//  343     /* Matches accel_cfg >> 3 & 0x03 */
//  344     unsigned char accel_fsr;
//  345     /* Enabled sensors. Uses same masks as fifo_en, NOT pwr_mgmt_2. */
//  346     unsigned char sensors;
//  347     /* Matches config register. */
//  348     unsigned char lpf;
//  349     unsigned char clk_src;
//  350     /* Sample rate, NOT rate divider. */
//  351     unsigned short sample_rate;
//  352     /* Matches fifo_en register. */
//  353     unsigned char fifo_enable;
//  354     /* Matches int enable register. */
//  355     unsigned char int_enable;
//  356     /* 1 if devices on auxiliary I2C bus appear on the primary. */
//  357     unsigned char bypass_mode;
//  358     /* 1 if half-sensitivity.
//  359      * NOTE: This doesn't belong here, but everything else in hw_s is const,
//  360      * and this allows us to save some precious RAM.
//  361      */
//  362     unsigned char accel_half;
//  363     /* 1 if device in low-power accel-only mode. */
//  364     unsigned char lp_accel_mode;
//  365     /* 1 if interrupts are only triggered on motion events. */
//  366     unsigned char int_motion_only;
//  367     struct motion_int_cache_s cache;
//  368     /* 1 for active low interrupts. */
//  369     unsigned char active_low_int;
//  370     /* 1 for latched interrupts. */
//  371     unsigned char latched_int;
//  372     /* 1 if DMP is enabled. */
//  373     unsigned char dmp_on;
//  374     /* Ensures that DMP will only be loaded once. */
//  375     unsigned char dmp_loaded;
//  376     /* Sampling rate used when DMP is enabled. */
//  377     unsigned short dmp_sample_rate;
//  378 #ifdef AK89xx_SECONDARY
//  379     /* Compass sample rate. */
//  380     unsigned short compass_sample_rate;
//  381     unsigned char compass_addr;
//  382     short mag_sens_adj[3];
//  383 #endif
//  384 };
//  385 
//  386 /* Information for self-test. */
//  387 struct test_s {
//  388     unsigned long gyro_sens;
//  389     unsigned long accel_sens;
//  390     unsigned char reg_rate_div;
//  391     unsigned char reg_lpf;
//  392     unsigned char reg_gyro_fsr;
//  393     unsigned char reg_accel_fsr;
//  394     unsigned short wait_ms;
//  395     unsigned char packet_thresh;
//  396     float min_dps;
//  397     float max_dps;
//  398     float max_gyro_var;
//  399     float min_g;
//  400     float max_g;
//  401     float max_accel_var;
//  402 };
//  403 
//  404 /* Gyro driver state variables. */
//  405 struct gyro_state_s {
//  406     const struct gyro_reg_s *reg;
//  407     const struct hw_s *hw;
//  408     struct chip_cfg_s chip_cfg;
//  409     const struct test_s *test;
//  410 };
//  411 
//  412 /* Filter configurations. */
//  413 enum lpf_e {
//  414     INV_FILTER_256HZ_NOLPF2 = 0,
//  415     INV_FILTER_188HZ,
//  416     INV_FILTER_98HZ,
//  417     INV_FILTER_42HZ,
//  418     INV_FILTER_20HZ,
//  419     INV_FILTER_10HZ,
//  420     INV_FILTER_5HZ,
//  421     INV_FILTER_2100HZ_NOLPF,
//  422     NUM_FILTER
//  423 };
//  424 
//  425 /* Full scale ranges. */
//  426 enum gyro_fsr_e {
//  427     INV_FSR_250DPS = 0,
//  428     INV_FSR_500DPS,
//  429     INV_FSR_1000DPS,
//  430     INV_FSR_2000DPS,
//  431     NUM_GYRO_FSR
//  432 };
//  433 
//  434 /* Full scale ranges. */
//  435 enum accel_fsr_e {
//  436     INV_FSR_2G = 0,
//  437     INV_FSR_4G,
//  438     INV_FSR_8G,
//  439     INV_FSR_16G,
//  440     NUM_ACCEL_FSR
//  441 };
//  442 
//  443 /* Clock sources. */
//  444 enum clock_sel_e {
//  445     INV_CLK_INTERNAL = 0,
//  446     INV_CLK_PLL,
//  447     NUM_CLK
//  448 };
//  449 
//  450 /* Low-power accel wakeup rates. */
//  451 enum lp_accel_rate_e {
//  452 #if defined MPU6050
//  453     INV_LPA_1_25HZ,
//  454     INV_LPA_5HZ,
//  455     INV_LPA_20HZ,
//  456     INV_LPA_40HZ
//  457 #elif defined MPU6500
//  458     INV_LPA_0_3125HZ,
//  459     INV_LPA_0_625HZ,
//  460     INV_LPA_1_25HZ,
//  461     INV_LPA_2_5HZ,
//  462     INV_LPA_5HZ,
//  463     INV_LPA_10HZ,
//  464     INV_LPA_20HZ,
//  465     INV_LPA_40HZ,
//  466     INV_LPA_80HZ,
//  467     INV_LPA_160HZ,
//  468     INV_LPA_320HZ,
//  469     INV_LPA_640HZ
//  470 #endif
//  471 };
//  472 
//  473 #define BIT_I2C_MST_VDDIO   (0x80)
//  474 #define BIT_FIFO_EN         (0x40)
//  475 #define BIT_DMP_EN          (0x80)
//  476 #define BIT_FIFO_RST        (0x04)
//  477 #define BIT_DMP_RST         (0x08)
//  478 #define BIT_FIFO_OVERFLOW   (0x10)
//  479 #define BIT_DATA_RDY_EN     (0x01)
//  480 #define BIT_DMP_INT_EN      (0x02)
//  481 #define BIT_MOT_INT_EN      (0x40)
//  482 #define BITS_FSR            (0x18)
//  483 #define BITS_LPF            (0x07)
//  484 #define BITS_HPF            (0x07)
//  485 #define BITS_CLK            (0x07)
//  486 #define BIT_FIFO_SIZE_1024  (0x40)
//  487 #define BIT_FIFO_SIZE_2048  (0x80)
//  488 #define BIT_FIFO_SIZE_4096  (0xC0)
//  489 #define BIT_RESET           (0x80)
//  490 #define BIT_SLEEP           (0x40)
//  491 #define BIT_S0_DELAY_EN     (0x01)
//  492 #define BIT_S2_DELAY_EN     (0x04)
//  493 #define BITS_SLAVE_LENGTH   (0x0F)
//  494 #define BIT_SLAVE_BYTE_SW   (0x40)
//  495 #define BIT_SLAVE_GROUP     (0x10)
//  496 #define BIT_SLAVE_EN        (0x80)
//  497 #define BIT_I2C_READ        (0x80)
//  498 #define BITS_I2C_MASTER_DLY (0x1F)
//  499 #define BIT_AUX_IF_EN       (0x20)
//  500 #define BIT_ACTL            (0x80)
//  501 #define BIT_LATCH_EN        (0x20)
//  502 #define BIT_ANY_RD_CLR      (0x10)
//  503 #define BIT_BYPASS_EN       (0x02)
//  504 #define BITS_WOM_EN         (0xC0)
//  505 #define BIT_LPA_CYCLE       (0x20)
//  506 #define BIT_STBY_XA         (0x20)
//  507 #define BIT_STBY_YA         (0x10)
//  508 #define BIT_STBY_ZA         (0x08)
//  509 #define BIT_STBY_XG         (0x04)
//  510 #define BIT_STBY_YG         (0x02)
//  511 #define BIT_STBY_ZG         (0x01)
//  512 #define BIT_STBY_XYZA       (BIT_STBY_XA | BIT_STBY_YA | BIT_STBY_ZA)
//  513 #define BIT_STBY_XYZG       (BIT_STBY_XG | BIT_STBY_YG | BIT_STBY_ZG)
//  514 
//  515 #if defined AK8975_SECONDARY
//  516 #define SUPPORTS_AK89xx_HIGH_SENS   (0x00)
//  517 #define AK89xx_FSR                  (9830)
//  518 #elif defined AK8963_SECONDARY
//  519 #define SUPPORTS_AK89xx_HIGH_SENS   (0x10)
//  520 #define AK89xx_FSR                  (4915)
//  521 #endif
//  522 
//  523 #ifdef AK89xx_SECONDARY
//  524 #define AKM_REG_WHOAMI      (0x00)
//  525 
//  526 #define AKM_REG_ST1         (0x02)
//  527 #define AKM_REG_HXL         (0x03)
//  528 #define AKM_REG_ST2         (0x09)
//  529 
//  530 #define AKM_REG_CNTL        (0x0A)
//  531 #define AKM_REG_ASTC        (0x0C)
//  532 #define AKM_REG_ASAX        (0x10)
//  533 #define AKM_REG_ASAY        (0x11)
//  534 #define AKM_REG_ASAZ        (0x12)
//  535 
//  536 #define AKM_DATA_READY      (0x01)
//  537 #define AKM_DATA_OVERRUN    (0x02)
//  538 #define AKM_OVERFLOW        (0x80)
//  539 #define AKM_DATA_ERROR      (0x40)
//  540 
//  541 #define AKM_BIT_SELF_TEST   (0x40)
//  542 
//  543 #define AKM_POWER_DOWN          (0x00 | SUPPORTS_AK89xx_HIGH_SENS)
//  544 #define AKM_SINGLE_MEASUREMENT  (0x01 | SUPPORTS_AK89xx_HIGH_SENS)
//  545 #define AKM_FUSE_ROM_ACCESS     (0x0F | SUPPORTS_AK89xx_HIGH_SENS)
//  546 #define AKM_MODE_SELF_TEST      (0x08 | SUPPORTS_AK89xx_HIGH_SENS)
//  547 
//  548 #define AKM_WHOAMI      (0x48)
//  549 #endif
//  550 
//  551 #if defined MPU6050
//  552 /*
//  553 const struct gyro_reg_s reg = {
//  554    .who_am_i       = 0x75,
//  555     .rate_div       = 0x19,
//  556     .lpf            = 0x1A,
//  557     .prod_id        = 0x0C,
//  558     .user_ctrl      = 0x6A,
//  559     .fifo_en        = 0x23,
//  560     .gyro_cfg       = 0x1B,
//  561     .accel_cfg      = 0x1C,
//  562     .motion_thr     = 0x1F,
//  563     .motion_dur     = 0x20,
//  564     .fifo_count_h   = 0x72,
//  565     .fifo_r_w       = 0x74,
//  566     .raw_gyro       = 0x43,
//  567     .raw_accel      = 0x3B,
//  568     .temp           = 0x41,
//  569     .int_enable     = 0x38,
//  570     .dmp_int_status = 0x39,
//  571     .int_status     = 0x3A,
//  572     .pwr_mgmt_1     = 0x6B,
//  573     .pwr_mgmt_2     = 0x6C,
//  574     .int_pin_cfg    = 0x37,
//  575     .mem_r_w        = 0x6F,
//  576     .accel_offs     = 0x06,
//  577     .i2c_mst        = 0x24,
//  578     .bank_sel       = 0x6D,
//  579     .mem_start_addr = 0x6E,
//  580     .prgm_start_h   = 0x70
//  581 #ifdef AK89xx_SECONDARY
//  582     ,.raw_compass   = 0x49,
//  583     .yg_offs_tc     = 0x01,
//  584     .s0_addr        = 0x25,
//  585     .s0_reg         = 0x26,
//  586     .s0_ctrl        = 0x27,
//  587     .s1_addr        = 0x28,
//  588     .s1_reg         = 0x29,
//  589     .s1_ctrl        = 0x2A,
//  590     .s4_ctrl        = 0x34,
//  591     .s0_do          = 0x63,
//  592     .s1_do          = 0x64,
//  593     .i2c_delay_ctrl = 0x67
//  594 #endif
//  595 };
//  596 const struct hw_s hw = {
//  597     .addr           = 0x68,
//  598     .max_fifo       = 1024,
//  599     .num_reg        = 118,
//  600     .temp_sens      = 340,
//  601     .temp_offset    = -521,
//  602     .bank_size      = 256
//  603 #if defined AK89xx_SECONDARY
//  604     ,.compass_fsr    = AK89xx_FSR
//  605 #endif
//  606 };
//  607 */
//  608 const struct hw_s hw={
//  609   0x68,	 //addr
//  610   1024,	 //max_fifo
//  611   118,	 //num_reg
//  612   340,	 //temp_sens
//  613   -521,	 //temp_offset
//  614   256	 //bank_size
//  615 };
//  616 const struct gyro_reg_s reg = {
//  617 0x75,  //who_am_i
//  618 0x19,  //rate_div
//  619 0x1A,  //lpf
//  620 0x0C,  //prod_id
//  621 0x6A,  //user_ctrl
//  622 0x23,  //fifo_en
//  623 0x1B,  //gyro_cfg
//  624 0x1C,  //accel_cfg
//  625 0x1F,  // motion_thr
//  626 0x20,  // motion_dur
//  627 0x72,  // fifo_count_h
//  628 0x74,  // fifo_r_w
//  629 0x43,  // raw_gyro
//  630 0x3B,  // raw_accel
//  631 0x41,  // temp
//  632 0x38,  // int_enable
//  633 0x39,  //  dmp_int_status
//  634 0x3A,  //  int_status
//  635 0x6B,  // pwr_mgmt_1
//  636 0x6C,  // pwr_mgmt_2
//  637 0x37,  // int_pin_cfg
//  638 0x6F,  // mem_r_w
//  639 0x06,  // accel_offs
//  640 0x24,  // i2c_mst
//  641 0x6D,  // bank_sel
//  642 0x6E,  // mem_start_addr
//  643 0x70   // prgm_start_h
//  644 };
//  645 
//  646 //const struct test_s test = {
//  647 //    .gyro_sens      = 32768/250,
//  648 //    .accel_sens     = 32768/16,	  
//  649 //    .reg_rate_div   = 0,    /* 1kHz. */
//  650 //    .reg_lpf        = 1,    /* 188Hz. */
//  651 //    .reg_gyro_fsr   = 0,    /* 250dps. */
//  652 //    .reg_accel_fsr  = 0x18, /* 16g. */
//  653 //    .wait_ms        = 50,
//  654 //    .packet_thresh  = 5,    /* 5% */
//  655 //    .min_dps        = 10.f,
//  656 //    .max_dps        = 105.f,
//  657 //    .max_gyro_var   = 0.14f,
//  658 //    .min_g          = 0.3f,
//  659 //    .max_g          = 0.95f,
//  660 //    .max_accel_var  = 0.14f
//  661 //};
//  662 const struct test_s test={
//  663 32768/250,		 //gyro_sens
//  664 32768/16,		 //	accel_sens
//  665 0,				 //	reg_rate_div
//  666 1,				//	reg_lpf
//  667 0,				 //	reg_gyro_fsr
//  668 0x18,			//	reg_accel_fsr
//  669 50,				//	wait_ms
//  670 5,				//	packet_thresh
//  671 10.0f,			 //	min_dps
//  672 105.0f,			 //	max_dps
//  673 0.14f,			//	max_gyro_var
//  674 0.3f,		   //	min_g
//  675 0.95f,		   //	max_g
//  676 0.14f		   //	max_accel_var
//  677 };
//  678 /*
//  679 static struct gyro_state_s st = {
//  680     .reg = &reg,
//  681     .hw = &hw,
//  682     .test = &test
//  683 };	*/
//  684 static struct gyro_state_s st={
//  685   &reg,
//  686   &hw,
//  687   {0},
//  688   &test
//  689 };
//  690 //st.chip_cfg.dmp_on = 1;
//  691 //st.dhip_cfg.fifo_enabel = 1;
//  692 /*
//  693 #elif defined MPU6500
//  694 const struct gyro_reg_s reg = {
//  695     .who_am_i       = 0x75,
//  696     .rate_div       = 0x19,
//  697     .lpf            = 0x1A,
//  698     .prod_id        = 0x0C,
//  699     .user_ctrl      = 0x6A,
//  700     .fifo_en        = 0x23,
//  701     .gyro_cfg       = 0x1B,
//  702     .accel_cfg      = 0x1C,
//  703     .accel_cfg2     = 0x1D,
//  704     .lp_accel_odr   = 0x1E,
//  705     .motion_thr     = 0x1F,
//  706     .motion_dur     = 0x20,
//  707     .fifo_count_h   = 0x72,
//  708     .fifo_r_w       = 0x74,
//  709     .raw_gyro       = 0x43,
//  710     .raw_accel      = 0x3B,
//  711     .temp           = 0x41,
//  712     .int_enable     = 0x38,
//  713     .dmp_int_status = 0x39,
//  714     .int_status     = 0x3A,
//  715     .accel_intel    = 0x69,
//  716     .pwr_mgmt_1     = 0x6B,
//  717     .pwr_mgmt_2     = 0x6C,
//  718     .int_pin_cfg    = 0x37,
//  719     .mem_r_w        = 0x6F,
//  720     .accel_offs     = 0x77,
//  721     .i2c_mst        = 0x24,
//  722     .bank_sel       = 0x6D,
//  723     .mem_start_addr = 0x6E,
//  724     .prgm_start_h   = 0x70
//  725 #ifdef AK89xx_SECONDARY
//  726     ,.raw_compass   = 0x49,
//  727     .s0_addr        = 0x25,
//  728     .s0_reg         = 0x26,
//  729     .s0_ctrl        = 0x27,
//  730     .s1_addr        = 0x28,
//  731     .s1_reg         = 0x29,
//  732     .s1_ctrl        = 0x2A,
//  733     .s4_ctrl        = 0x34,
//  734     .s0_do          = 0x63,
//  735     .s1_do          = 0x64,
//  736     .i2c_delay_ctrl = 0x67
//  737 #endif
//  738 };
//  739 const struct hw_s hw = {
//  740     .addr           = 0x68,
//  741     .max_fifo       = 1024,
//  742     .num_reg        = 128,
//  743     .temp_sens      = 321,
//  744     .temp_offset    = 0,
//  745     .bank_size      = 256
//  746 #if defined AK89xx_SECONDARY
//  747     ,.compass_fsr    = AK89xx_FSR
//  748 #endif
//  749 };
//  750 */
//  751 //const struct test_s test = {
//  752 //    .gyro_sens      = 32768/250,
//  753 //    .accel_sens     = 32768/16,
//  754 //    .reg_rate_div   = 0,    /* 1kHz. */
//  755 //    .reg_lpf        = 1,    /* 188Hz. */
//  756 //    .reg_gyro_fsr   = 0,    /* 250dps. */
//  757 //    .reg_accel_fsr  = 0x18, /* 16g. */
//  758 //    .wait_ms        = 50,
//  759 //    .packet_thresh  = 5,    /* 5% */
//  760 //    .min_dps        = 10.f,
//  761 //    .max_dps        = 105.f,
//  762 //    .max_gyro_var   = 0.14f,
//  763 //    .min_g          = 0.3f,
//  764 //    .max_g          = 0.95f,
//  765 //    .max_accel_var  = 0.14f
//  766 //};
//  767 //
//  768 //static struct gyro_state_s st = {
//  769 //    .reg = &reg,
//  770 //    .hw = &hw,
//  771 //    .test = &test
//  772 //};
//  773 #endif
//  774 
//  775 #define MAX_PACKET_LENGTH (12)
//  776 
//  777 #ifdef AK89xx_SECONDARY
//  778 static int setup_compass(void);
//  779 #define MAX_COMPASS_SAMPLE_RATE (100)
//  780 #endif
//  781 
//  782 /**
//  783  *  @brief      Enable/disable data ready interrupt.
//  784  *  If the DMP is on, the DMP interrupt is enabled. Otherwise, the data ready
//  785  *  interrupt is used.
//  786  *  @param[in]  enable      1 to enable interrupt.
//  787  *  @return     0 if successful.
//  788  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  789 static int set_int_enable(unsigned char enable)
set_int_enable:
        CFI Block cfiBlock20 Using cfiCommon0
        CFI Function set_int_enable
        CODE
//  790 {
        FUNCALL set_int_enable, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL set_int_enable, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
//  791     unsigned char tmp;
//  792 
//  793     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??set_int_enable_0
//  794         if (enable)
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??set_int_enable_1
//  795             tmp = BIT_DMP_INT_EN;
        MOV     A,#0x2
        SJMP    ??set_int_enable_2
//  796         else
//  797             tmp = 0x00;
??set_int_enable_1:
        CLR     A
??set_int_enable_2:
        LCALL   ??Subroutine132_0 & 0xFFFF
//  798         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
??CrossCallReturnLabel_254:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_280:
        JZ      ??set_int_enable_3
//  799             return -1;
??set_int_enable_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
??set_int_enable_5:
        LJMP    ?Subroutine3 & 0xFFFF
//  800         st.chip_cfg.int_enable = tmp;
//  801     } else {
//  802         if (!st.chip_cfg.sensors)
??set_int_enable_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??set_int_enable_4
//  803             return -1;
//  804         if (enable && st.chip_cfg.int_enable)
        MOV     A,R6
        JZ      ??set_int_enable_6
        MOV     DPTR,#st + 12
        MOVX    A,@DPTR
        JZ      ??set_int_enable_7
//  805             return 0;
??set_int_enable_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??set_int_enable_5
//  806         if (enable)
//  807             tmp = BIT_DATA_RDY_EN;
??set_int_enable_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??set_int_enable_9
//  808         else
//  809             tmp = 0x00;
??set_int_enable_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
//  810         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &tmp))
//  811             return -1;
//  812         st.chip_cfg.int_enable = tmp;
//  813     }
??set_int_enable_9:
        LCALL   ??Subroutine132_0 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_281:
        JNZ     ??set_int_enable_4
??set_int_enable_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     DPTR,#st + 12
        MOVX    @DPTR,A
        SJMP    ??set_int_enable_8
        CFI EndBlock cfiBlock20
//  814     return 0;
//  815 }
//  816 
//  817 /**
//  818  *  @brief      Register dump for testing.
//  819  *  @return     0 if successful.
//  820  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  821 int mpu_reg_dump(void)
mpu_reg_dump:
        CFI Block cfiBlock21 Using cfiCommon0
        CFI Function mpu_reg_dump
        CODE
//  822 {
        FUNCALL mpu_reg_dump, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
//  823     unsigned char ii;
//  824     unsigned char data;
//  825 
//  826     for (ii = 0; ii < st.hw->num_reg; ii++) {
        MOV     R6,#0x0
        SJMP    ??mpu_reg_dump_0
??mpu_reg_dump_1:
        INC     R6
??mpu_reg_dump_0:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_24:
        JNC     ??mpu_reg_dump_2
//  827         if (ii == st.reg->fifo_r_w || ii == st.reg->mem_r_w)
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_65:
        JZ      ??mpu_reg_dump_1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_66:
        JZ      ??mpu_reg_dump_1
//  828             continue;
//  829         if (i2c_read(st.hw->addr, ii, 1, &data))
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_106:
        JZ      ??mpu_reg_dump_1
//  830             return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_reg_dump_3
//  831         //log_i("%#5x: %#5x\r\n", ii, data);
//  832     }
//  833     return 0;
??mpu_reg_dump_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_reg_dump_3:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock21
//  834 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
        CFI Block cfiCond22 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_65
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond23 Using cfiCommon0
        CFI (cfiCond23) NoFunction
        CFI (cfiCond23) Conditional ??CrossCallReturnLabel_66
        CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond23) CFA_SP SP+0
        CFI (cfiCond23) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker24 Using cfiCommon1
        CFI (cfiPicker24) NoFunction
        CFI (cfiPicker24) Picker
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,R6
        RET
        CFI EndBlock cfiCond22
        CFI EndBlock cfiCond23
        CFI EndBlock cfiPicker24
//  835 
//  836 /**
//  837  *  @brief      Read from a single register.
//  838  *  NOTE: The memory and FIFO read/write registers cannot be accessed.
//  839  *  @param[in]  reg     Register address.
//  840  *  @param[out] data    Register data.
//  841  *  @return     0 if successful.
//  842  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  843 int mpu_read_reg(unsigned char reg, unsigned char *data)
mpu_read_reg:
        CFI Block cfiBlock25 Using cfiCommon0
        CFI Function mpu_read_reg
        CODE
//  844 {
        FUNCALL mpu_read_reg, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
//  845     if (reg == st.reg->fifo_r_w || reg == st.reg->mem_r_w)
        MOV     DPTR,#st
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_38:
        XRL     A,R6
        JZ      ??mpu_read_reg_0
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_81:
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??mpu_read_reg_1
//  846         return -1;
??mpu_read_reg_0:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_read_reg_2
//  847     if (reg >= st.hw->num_reg)
??mpu_read_reg_1:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_25:
        JNC     ??mpu_read_reg_0
//  848         return -1;
//  849     return i2c_read(st.hw->addr, reg, 1, data);
        ; Setup parameters for call to function I2C_Read
        MOV     R3,#0x1
        MOV     A,R6
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??I2C_Read?relay
        CFI EndBlock cfiBlock25
??mpu_read_reg_2:
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  850 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock26

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond27 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_24
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond28 Using cfiCommon0
        CFI (cfiCond28) NoFunction
        CFI (cfiCond28) Conditional ??CrossCallReturnLabel_25
        CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond28) CFA_SP SP+0
        CFI (cfiCond28) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker29 Using cfiCommon1
        CFI (cfiPicker29) NoFunction
        CFI (cfiPicker29) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_124:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        CLR     C
        SUBB    A,R2
        RET
        CFI EndBlock cfiCond27
        CFI EndBlock cfiCond28
        CFI EndBlock cfiPicker29
//  851 
//  852 /**
//  853  *  @brief      Initialize hardware.
//  854  *  Initial configuration:\n
//  855  *  Gyro FSR: +/- 2000DPS\n
//  856  *  Accel FSR +/- 2G\n
//  857  *  DLPF: 42Hz\n
//  858  *  FIFO rate: 50Hz\n
//  859  *  Clock source: Gyro PLL\n
//  860  *  FIFO: Disabled.\n
//  861  *  Data ready interrupt: Disabled, active low, unlatched.
//  862  *  @param[in]  int_param   Platform-specific parameters to interrupt API.
//  863  *  @return     0 if successful.
//  864  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  865 int mpu_init(void)
mpu_init:
        CFI Block cfiBlock30 Using cfiCommon0
        CFI Function mpu_init
        CODE
//  866 {
        FUNCALL mpu_init, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_bypass
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_init, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
//  867     unsigned char data[6], rev;
//  868 
//  869     /* Reset device. */
//  870     data[0] = 0x80;//BIT_RESET;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        LCALL   ?Subroutine63 & 0xFFFF
//  871     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
??CrossCallReturnLabel_100:
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_276:
        JZ      ??mpu_init_0
//  872         return -1;
??mpu_init_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_init_2 & 0xFFFF
//  873     delay_ms(100);
??mpu_init_0:
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x64
        LCALL   ?Subroutine66 & 0xFFFF
//  874 
//  875     /* Wake up chip. */
//  876     data[0] = 0x00;
??CrossCallReturnLabel_103:
        CLR     A
        LCALL   ?Subroutine63 & 0xFFFF
//  877     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &(data[0])))
??CrossCallReturnLabel_101:
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_277:
        JNZ     ??mpu_init_1
//  878         return -1;
//  879  
//  880 #if defined MPU6050
//  881     /* Check product revision. */
//  882     if (i2c_read(st.hw->addr, st.reg->accel_offs, 6, data))
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x16
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_229:
        JNZ     ??mpu_init_1
//  883         return -1;
//  884     rev = ((data[5] & 0x01) << 2) | ((data[3] & 0x01) << 1) |
//  885         (data[1] & 0x01);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        RLC     A
        MOV     R0,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        CLR     A
        RLC     A
        RLC     A
        RLC     A
        ORL     A,R0
        ORL     A,R1
        MOV     R0,A
//  886 		
//  887     if (rev) {
        JNZ     $+5
        LJMP    ??mpu_init_3 & 0xFFFF
//  888         /* Congrats, these parts are better. */
//  889         if (rev == 1)
        MOV     A,#0x1
        XRL     A,R0
        JZ      $+5
        LJMP    ??mpu_init_4 & 0xFFFF
//  890             st.chip_cfg.accel_half = 1;
??mpu_init_5:
        MOV     DPTR,#st + 14
        MOV     A,#0x1
??mpu_init_6:
        MOVX    @DPTR,A
//  891         else if (rev == 2)
//  892             st.chip_cfg.accel_half = 0;
//  893         else {
//  894             //log_e("Unsupported software product rev %d.\n");
//  895             return -1;
//  896         }
//  897     } else {
//  898         if (i2c_read(st.hw->addr, st.reg->prod_id, 1, &(data[0])))
//  899             return -1;
//  900         rev = data[0] & 0x0F;
//  901         if (!rev) {
//  902            // log_e("Product ID read as 0 indicates device is either "
//  903                 //"incompatible or an MPU3050.\n");
//  904             return -1;
//  905         } else if (rev == 4) {
//  906             //log_i("Half sensitivity part found.\n");
//  907             st.chip_cfg.accel_half = 1;
//  908         } else
//  909             st.chip_cfg.accel_half = 0;
//  910     }
//  911 ////////////////////////////Œ¥÷¥––//////////////////////////////
//  912 #elif defined MPU6500
//  913 #define MPU6500_MEM_REV_ADDR    (0x17)
//  914     if (mpu_read_mem(MPU6500_MEM_REV_ADDR, 1, &rev))
//  915         return -1;
//  916     if (rev == 0x1)
//  917         st.chip_cfg.accel_half = 0;
//  918     else {
//  919         //log_e("Unsupported software product rev %d.\n", rev);
//  920         return -1;
//  921     }
//  922 
//  923     /* MPU6500 shares 4kB of memory between the DMP and the FIFO. Since the
//  924      * first 3kB are needed by the DMP, we'll use the last 1kB for the FIFO.
//  925      */
//  926     data[0] = BIT_FIFO_SIZE_1024 | 0x8;
//  927     if (i2c_write(st.hw->addr, st.reg->accel_cfg2, 1, data))
//  928         return -1;
//  929 #endif
//  930 /////////////////////////////////////////////////////////
//  931     /* Set to invalid values to ensure no I2C writes are skipped. */
//  932     st.chip_cfg.sensors = 0xFF;
        MOV     DPTR,#st + 6
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  933     st.chip_cfg.gyro_fsr = 0xFF;
        MOV     DPTR,#st + 4
        LCALL   ?Subroutine92 & 0xFFFF
//  934     st.chip_cfg.accel_fsr = 0xFF;
//  935     st.chip_cfg.lpf = 0xFF;
//  936     st.chip_cfg.sample_rate = 0xFFFF;
//  937     st.chip_cfg.fifo_enable = 0xFF;
??CrossCallReturnLabel_145:
        INC     DPTR
        MOVX    @DPTR,A
//  938     st.chip_cfg.bypass_mode = 0xFF;
        MOV     DPTR,#st + 13
        MOVX    @DPTR,A
//  939 //////////////////////////////////Œ¥÷¥––//////////////////////////////
//  940 #ifdef AK89xx_SECONDARY
//  941     st.chip_cfg.compass_sample_rate = 0xFFFF;
//  942 #endif
//  943 //////////////////////////////////////////////////////////////////////
//  944     /* mpu_set_sensors always preserves this setting. */
//  945     st.chip_cfg.clk_src = INV_CLK_PLL;
        MOV     DPTR,#st + 8
        MOV     A,#0x1
        MOVX    @DPTR,A
//  946     /* Handled in next call to mpu_set_bypass. */
//  947     st.chip_cfg.active_low_int = 1;
        MOV     DPTR,#st + 27
        MOVX    @DPTR,A
//  948     st.chip_cfg.latched_int = 0;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  949     st.chip_cfg.int_motion_only = 0;
        MOV     DPTR,#st + 16
        MOVX    @DPTR,A
//  950     st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        MOVX    @DPTR,A
//  951     memset(&st.chip_cfg.cache, 0, sizeof(st.chip_cfg.cache));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0xa
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#(st + 17) & 0xff
        MOV     R3,#((st + 17) >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
//  952     st.chip_cfg.dmp_on = 0;
        MOV     DPTR,#st + 29
        CLR     A
        MOVX    @DPTR,A
//  953     st.chip_cfg.dmp_loaded = 0;
        INC     DPTR
        MOVX    @DPTR,A
//  954     st.chip_cfg.dmp_sample_rate = 0;
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  955     if (mpu_set_gyro_fsr(2000))
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     R2,#-0x30
        MOV     R3,#0x7
        LCALL   ??mpu_set_gyro_fsr?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  956         return -1;
//  957     if (mpu_set_accel_fsr(2))
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     R1,#0x2
        LCALL   ??mpu_set_accel_fsr?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  958         return -1;
//  959     if (mpu_set_lpf(42))
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x2a
        MOV     R3,#0x0
        LCALL   ??mpu_set_lpf?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  960         return -1;
//  961     if (mpu_set_sample_rate(50))
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??mpu_set_sample_rate?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  962         return -1;
//  963     if (mpu_configure_fifo(0))
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     R1,#0x0
        LCALL   ??mpu_configure_fifo?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  964         return -1;
//  965 
//  966     /*if (int_param)
//  967         reg_int_cb(int_param);*/
//  968 ////////////////////////////////Œ¥÷¥––///////////////////////////////
//  969 #ifdef AK89xx_SECONDARY
//  970     setup_compass();
//  971     if (mpu_set_compass_sample_rate(10))
//  972         return -1;
//  973 ///////////////////////////////////////////////////////////////////////
//  974 #else
//  975 ////////////////////////////////ø…»•≥˝///////////////////////////////////
//  976 				//printf("lalala");
//  977     /* Already disabled by setup_compass. */
//  978     if (mpu_set_bypass(0))
        ; Setup parameters for call to function mpu_set_bypass
        MOV     R1,#0x0
        LCALL   ??mpu_set_bypass?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
//  979         return -1;
//  980 /////////////////////////////////////////////////////////////////////////
//  981 #endif
//  982 
//  983     mpu_set_sensors(0);
        ; Setup parameters for call to function mpu_set_sensors
        MOV     R1,#0x0
        LCALL   ??mpu_set_sensors?relay
//  984     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_init_2:
        LJMP    ?Subroutine8 & 0xFFFF
??mpu_init_4:
        MOV     A,#0x2
        XRL     A,R0
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
??mpu_init_7:
        MOV     DPTR,#st + 14
        CLR     A
        LJMP    ??mpu_init_6 & 0xFFFF
??mpu_init_3:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_202:
        INC     DPTR
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_235:
        JZ      $+5
        LJMP    ??mpu_init_1 & 0xFFFF
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        JNZ     $+5
        LJMP    ??mpu_init_1 & 0xFFFF
        MOV     A,#0x4
        XRL     A,R0
        JNZ     ??mpu_init_7
        LJMP    ??mpu_init_5 & 0xFFFF
        CFI EndBlock cfiBlock30
//  985 }
//  986 
//  987 /**
//  988  *  @brief      Enter low-power accel-only mode.
//  989  *  In low-power accel mode, the chip goes to sleep and only wakes up to sample
//  990  *  the accelerometer at one of the following frequencies:
//  991  *  \n MPU6050: 1.25Hz, 5Hz, 20Hz, 40Hz
//  992  *  \n MPU6500: 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
//  993  *  \n If the requested rate is not one listed above, the device will be set to
//  994  *  the next highest rate. Requesting a rate above the maximum supported
//  995  *  frequency will result in an error.
//  996  *  \n To select a fractional wake-up frequency, round down the value passed to
//  997  *  @e rate.
//  998  *  @param[in]  rate        Minimum sampling rate, or zero to disable LP
//  999  *                          accel mode.
// 1000  *  @return     0 if successful.
// 1001  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1002 int mpu_lp_accel_mode(unsigned char rate)
mpu_lp_accel_mode:
        CFI Block cfiBlock31 Using cfiCommon0
        CFI Function mpu_lp_accel_mode
        CODE
// 1003 {
        FUNCALL mpu_lp_accel_mode, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_accel_mode, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R6,A
// 1004     unsigned char tmp[2];
// 1005 
// 1006     if (rate > 40)
        CLR     C
        SUBB    A,#0x29
        JC      ??mpu_lp_accel_mode_0
// 1007         return -1;
??mpu_lp_accel_mode_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_lp_accel_mode_2 & 0xFFFF
// 1008 
// 1009     if (!rate) {
??mpu_lp_accel_mode_0:
        MOV     A,R6
        JNZ     ??mpu_lp_accel_mode_3
// 1010         mpu_set_int_latched(0);
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x0
        LCALL   ?Subroutine69 & 0xFFFF
// 1011         tmp[0] = 0;
??CrossCallReturnLabel_109:
        CLR     A
        MOVX    @DPTR,A
// 1012         tmp[1] = BIT_STBY_XYZG;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x7
        LCALL   ??Subroutine134_0 & 0xFFFF
// 1013         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
??CrossCallReturnLabel_274:
        JNZ     ??mpu_lp_accel_mode_1
// 1014             return -1;
// 1015         st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        CLR     A
        MOVX    @DPTR,A
// 1016         return 0;
        MOV     R2,A
        MOV     R3,A
        SJMP    ??mpu_lp_accel_mode_2
// 1017     }
// 1018     /* For LP accel, we automatically configure the hardware to produce latched
// 1019      * interrupts. In LP accel mode, the hardware cycles into sleep mode before
// 1020      * it gets a chance to deassert the interrupt pin; therefore, we shift this
// 1021      * responsibility over to the MCU.
// 1022      *
// 1023      * Any register read will clear the interrupt.
// 1024      */
// 1025     mpu_set_int_latched(1);
??mpu_lp_accel_mode_3:
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x1
        LCALL   ?Subroutine69 & 0xFFFF
// 1026 #if defined MPU6050
// 1027     tmp[0] = BIT_LPA_CYCLE;
??CrossCallReturnLabel_110:
        MOV     A,#0x20
        MOVX    @DPTR,A
// 1028     if (rate == 1) {
        MOV     A,#0x1
        XRL     A,R6
        JNZ     ??mpu_lp_accel_mode_4
// 1029         tmp[1] = INV_LPA_1_25HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1030         mpu_set_lpf(5);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x5
        MOV     R3,A
        SJMP    ??mpu_lp_accel_mode_5
// 1031     } else if (rate <= 5) {
??mpu_lp_accel_mode_4:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x6
        JNC     ??mpu_lp_accel_mode_6
// 1032         tmp[1] = INV_LPA_5HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1033         mpu_set_lpf(5);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x5
        SJMP    ??mpu_lp_accel_mode_7
// 1034     } else if (rate <= 20) {
??mpu_lp_accel_mode_6:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x15
        MOV     A,#0x1
        JNC     ??mpu_lp_accel_mode_8
// 1035         tmp[1] = INV_LPA_20HZ;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1036         mpu_set_lpf(10);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0xa
        SJMP    ??mpu_lp_accel_mode_7
// 1037     } else {
// 1038         tmp[1] = INV_LPA_40HZ;
??mpu_lp_accel_mode_8:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
// 1039         mpu_set_lpf(20);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     R2,#0x14
??mpu_lp_accel_mode_7:
        MOV     R3,#0x0
??mpu_lp_accel_mode_5:
        LCALL   ??mpu_set_lpf?relay
// 1040     }
// 1041     tmp[1] = (tmp[1] << 6) | BIT_STBY_XYZG;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
// 1042     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, tmp))
??CrossCallReturnLabel_272:
        JNZ     ??mpu_lp_accel_mode_1
// 1043         return -1;
// 1044 #elif defined MPU6500
// 1045     /* Set wake frequency. */
// 1046     if (rate == 1)
// 1047         tmp[0] = INV_LPA_1_25HZ;
// 1048     else if (rate == 2)
// 1049         tmp[0] = INV_LPA_2_5HZ;
// 1050     else if (rate <= 5)
// 1051         tmp[0] = INV_LPA_5HZ;
// 1052     else if (rate <= 10)
// 1053         tmp[0] = INV_LPA_10HZ;
// 1054     else if (rate <= 20)
// 1055         tmp[0] = INV_LPA_20HZ;
// 1056     else if (rate <= 40)
// 1057         tmp[0] = INV_LPA_40HZ;
// 1058     else if (rate <= 80)
// 1059         tmp[0] = INV_LPA_80HZ;
// 1060     else if (rate <= 160)
// 1061         tmp[0] = INV_LPA_160HZ;
// 1062     else if (rate <= 320)
// 1063         tmp[0] = INV_LPA_320HZ;
// 1064     else
// 1065         tmp[0] = INV_LPA_640HZ;
// 1066     if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, tmp))
// 1067         return -1;
// 1068     tmp[0] = BIT_LPA_CYCLE;
// 1069     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, tmp))
// 1070         return -1;
// 1071 #endif
// 1072     st.chip_cfg.sensors = INV_XYZ_ACCEL;
        MOV     DPTR,#st + 6
        MOV     A,#0x8
        MOVX    @DPTR,A
// 1073     st.chip_cfg.clk_src = 0;
        MOV     DPTR,#st + 8
        CLR     A
        MOVX    @DPTR,A
// 1074     st.chip_cfg.lp_accel_mode = 1;
        MOV     DPTR,#st + 15
        INC     A
        MOVX    @DPTR,A
// 1075     mpu_configure_fifo(0);
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     R1,#0x0
        LCALL   ??mpu_configure_fifo?relay
// 1076 
// 1077     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock31
??mpu_lp_accel_mode_2:
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
// 1078 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        LJMP    ??Subroutine114_0 & 0xFFFF
        CFI EndBlock cfiBlock32

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
        CFI Block cfiCond33 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_109
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond34 Using cfiCommon0
        CFI (cfiCond34) NoFunction
        CFI (cfiCond34) Conditional ??CrossCallReturnLabel_110
        CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond34) CFA_SP SP+0
        CFI (cfiCond34) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker35 Using cfiCommon1
        CFI (cfiPicker35) NoFunction
        CFI (cfiPicker35) Picker
        LCALL   ??mpu_set_int_latched?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond33
        CFI EndBlock cfiCond34
        CFI EndBlock cfiPicker35
// 1079 
// 1080 /**
// 1081  *  @brief      Read raw gyro data directly from the registers.
// 1082  *  @param[out] data        Raw data in hardware units.
// 1083  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 1084  *  @return     0 if successful.
// 1085  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1086 int mpu_get_gyro_reg(short *data, unsigned long *timestamp)
mpu_get_gyro_reg:
        CFI Block cfiBlock36 Using cfiCommon0
        CFI Function mpu_get_gyro_reg
        CODE
// 1087 {
        FUNCALL mpu_get_gyro_reg, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1088     unsigned char tmp[6];
// 1089 
// 1090     if (!(st.chip_cfg.sensors & INV_XYZ_GYRO))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        ANL     A,#0x70
        JNZ     ??mpu_get_gyro_reg_0
// 1091         return -1;
??mpu_get_gyro_reg_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_31
// 1092 
// 1093     if (i2c_read(st.hw->addr, st.reg->raw_gyro, 6, tmp))
??mpu_get_gyro_reg_0:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xc
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_230:
        JNZ     ??mpu_get_gyro_reg_1
// 1094         return -1;
// 1095     data[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 1096     data[1] = (tmp[2] << 8) | tmp[3];
??CrossCallReturnLabel_63:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
// 1097     data[2] = (tmp[4] << 8) | tmp[5];
??CrossCallReturnLabel_47:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine28 & 0xFFFF
// 1098 //    if (timestamp)
// 1099 //        get_ms(timestamp);
// 1100     return 0;
??CrossCallReturnLabel_31:
        SJMP    ?Subroutine8
        CFI EndBlock cfiBlock36
// 1101 }
// 1102 
// 1103 /**
// 1104  *  @brief      Read raw accel data directly from the registers.
// 1105  *  @param[out] data        Raw data in hardware units.
// 1106  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 1107  *  @return     0 if successful.
// 1108  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1109 int mpu_get_accel_reg(short *data, unsigned long *timestamp)
mpu_get_accel_reg:
        CFI Block cfiBlock37 Using cfiCommon0
        CFI Function mpu_get_accel_reg
        CODE
// 1110 {
        FUNCALL mpu_get_accel_reg, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1111     unsigned char tmp[6];
// 1112 
// 1113     if (!(st.chip_cfg.sensors & INV_XYZ_ACCEL))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JC      ??mpu_get_accel_reg_0
// 1114         return -1;
??mpu_get_accel_reg_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_32
// 1115 
// 1116     if (i2c_read(st.hw->addr, st.reg->raw_accel, 6, tmp))
??mpu_get_accel_reg_0:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x6
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xd
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_231:
        JNZ     ??mpu_get_accel_reg_1
// 1117         return -1;
// 1118     data[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_68:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 1119     data[1] = (tmp[2] << 8) | tmp[3];
??CrossCallReturnLabel_64:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
// 1120     data[2] = (tmp[4] << 8) | tmp[5];
??CrossCallReturnLabel_48:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine28 & 0xFFFF
        CFI EndBlock cfiBlock37
// 1121     if (timestamp)
// 1122         get_ms(timestamp);
// 1123     return 0;
??CrossCallReturnLabel_32:
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 1124 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x6
        LJMP    ??Subroutine114_0 & 0xFFFF
        CFI EndBlock cfiBlock38

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
        CFI Block cfiCond39 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_63
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_64
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker41 Using cfiCommon1
        CFI (cfiPicker41) NoFunction
        CFI (cfiPicker41) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_142:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiPicker41

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
        CFI Block cfiCond42 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond43 Using cfiCommon0
        CFI (cfiCond43) NoFunction
        CFI (cfiCond43) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond43) CFA_SP SP+0
        CFI (cfiCond43) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker44 Using cfiCommon1
        CFI (cfiPicker44) NoFunction
        CFI (cfiPicker44) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_141:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x4
        RET
        CFI EndBlock cfiCond42
        CFI EndBlock cfiCond43
        CFI EndBlock cfiPicker44

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond45 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_31
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond46 Using cfiCommon0
        CFI (cfiCond46) NoFunction
        CFI (cfiCond46) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond46) CFA_SP SP+0
        CFI (cfiCond46) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker47 Using cfiCommon1
        CFI (cfiPicker47) NoFunction
        CFI (cfiPicker47) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_140:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond45
        CFI EndBlock cfiCond46
        CFI EndBlock cfiPicker47

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
        CFI Block cfiCond48 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_63
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_64
        CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond49) CFA_SP SP+0
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond50 Using cfiCommon0
        CFI (cfiCond50) NoFunction
        CFI (cfiCond50) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_47
        CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond50) CFA_SP SP+0
        CFI (cfiCond50) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond51 Using cfiCommon0
        CFI (cfiCond51) NoFunction
        CFI (cfiCond51) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_48
        CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond51) CFA_SP SP+0
        CFI (cfiCond51) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond52 Using cfiCommon0
        CFI (cfiCond52) NoFunction
        CFI (cfiCond52) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_31
        CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond52) CFA_SP SP+0
        CFI (cfiCond52) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_32
        CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond53) CFA_SP SP+0
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond54 Using cfiCommon0
        CFI (cfiCond54) NoFunction
        CFI (cfiCond54) Conditional ??CrossCallReturnLabel_139
        CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond54) CFA_SP SP+0
        CFI (cfiCond54) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker55 Using cfiCommon1
        CFI (cfiPicker55) NoFunction
        CFI (cfiPicker55) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiCond50
        CFI EndBlock cfiCond51
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiCond54
        CFI EndBlock cfiPicker55
// 1125 
// 1126 /**
// 1127  *  @brief      Read temperature data directly from the registers.
// 1128  *  @param[out] data        Data in q16 format.
// 1129  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 1130  *  @return     0 if successful.
// 1131  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1132 int mpu_get_temperature(long *data, unsigned long *timestamp)
mpu_get_temperature:
        CFI Block cfiBlock56 Using cfiCommon0
        CFI Function mpu_get_temperature
        CODE
// 1133 {
        FUNCALL mpu_get_temperature, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1134     unsigned char tmp[2];
// 1135     short raw;
// 1136 
// 1137     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_get_temperature_0
// 1138         return -1;
??mpu_get_temperature_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_get_temperature_2 & 0xFFFF
// 1139 
// 1140     if (i2c_read(st.hw->addr, st.reg->temp, 2, tmp))
??mpu_get_temperature_0:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0xe
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_232:
        JNZ     ??mpu_get_temperature_1
// 1141         return -1;
// 1142     raw = (tmp[0] << 8) | tmp[1];
// 1143     if (timestamp)
// 1144         get_ms(timestamp);
// 1145 
// 1146     data[0] = (long)((35 + ((raw - (float)st.hw->temp_offset) / st.hw->temp_sens)) * 65536L);
        MOV     DPTR,#st + 2
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     A,R1
        MOV     ?V0 + 1,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_11:
        MOV     R0,#?V0 + 4
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_126:
        CLR     A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 4
        LCALL   ?UL_TO_FLT
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_420c0000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 1147     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_temperature_2:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock56
// 1148 }
// 1149 
// 1150 /**
// 1151  *  @brief      Push biases to the accel bias registers.
// 1152  *  This function expects biases relative to the current sensor output, and
// 1153  *  these biases will be added to the factory-supplied values.
// 1154  *  @param[in]  accel_bias  New biases.
// 1155  *  @return     0 if successful.
// 1156  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1157 int mpu_set_accel_bias(const long *accel_bias)
mpu_set_accel_bias:
        CFI Block cfiBlock57 Using cfiCommon0
        CFI Function mpu_set_accel_bias
        CODE
// 1158 {
        FUNCALL mpu_set_accel_bias, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 44, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_accel_bias, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 44, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_accel_bias, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 44, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 24
        MOV     A,#-0x18
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 44)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1159     unsigned char data[6];
// 1160     short accel_hw[3];
// 1161     short got_accel[3];
// 1162     short fg[3];
// 1163 
// 1164     if (!accel_bias)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??mpu_set_accel_bias_0
// 1165         return -1;
??mpu_set_accel_bias_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
??mpu_set_accel_bias_2:
        MOV     A,#0x18
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI CFA_XSP16 add(XSP16, 44)
// 1166     if (!accel_bias[0] && !accel_bias[1] && !accel_bias[2])
??mpu_set_accel_bias_0:
        MOV     A,R6
        ADD     A,#0x8
        MOV     ?V0 + 2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_111:
        JNZ     ??mpu_set_accel_bias_3
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_112:
        JNZ     ??mpu_set_accel_bias_3
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_113:
        JNZ     ??mpu_set_accel_bias_3
// 1167         return 0;
??mpu_set_accel_bias_4:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_set_accel_bias_2
// 1168 
// 1169     if (i2c_read(st.hw->addr, 3, 3, data))
??mpu_set_accel_bias_3:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x3
        MOV     R2,#0x3
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_42:
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     ??mpu_set_accel_bias_1
// 1170         return -1;
// 1171     fg[0] = ((data[0] >> 4) + 8) & 0xf;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_49:
        MOV     R0,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1172     fg[1] = ((data[1] >> 4) + 8) & 0xf;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_50:
        MOV     R2,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1173     fg[2] = ((data[2] >> 4) + 8) & 0xf;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_51:
        MOV     R4,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1174 
// 1175     accel_hw[0] = (short)(accel_bias[0] * 2 / (64 + fg[0]));
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 8
        LCALL   ?L_SHL
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x40
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_188:
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 4
        LCALL   ?L_DIV_MOD
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 9
        MOVX    @DPTR,A
// 1176     accel_hw[1] = (short)(accel_bias[1] * 2 / (64 + fg[1]));
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     A,R2
        ADD     A,#0x40
        MOV     ?V0 + 8,A
        CLR     A
        MOV     ?V0 + 9,A
        MOV     ?V0 + 10,A
        MOV     ?V0 + 11,A
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?L_DIV_MOD
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 1177     accel_hw[2] = (short)(accel_bias[2] * 2 / (64 + fg[2]));
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?L_SHL
        MOV     A,R4
        ADD     A,#0x40
        MOV     ?V0 + 4,A
        CLR     A
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_DIV_MOD
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine61 & 0xFFFF
// 1178 
// 1179     if (i2c_read(st.hw->addr, 0x06, 6, data))
??CrossCallReturnLabel_96:
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_238:
        JZ      $+5
        LJMP    ??mpu_set_accel_bias_1 & 0xFFFF
// 1180         return -1;
// 1181 
// 1182     got_accel[0] = ((short)data[0] << 8) | data[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 1183     got_accel[1] = ((short)data[2] << 8) | data[3];
??CrossCallReturnLabel_159:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 1184     got_accel[2] = ((short)data[4] << 8) | data[5];
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 1185 
// 1186     accel_hw[0] += got_accel[0];
??CrossCallReturnLabel_160:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R5
        MOVX    @DPTR,A
// 1187     accel_hw[1] += got_accel[1];
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOVX    @DPTR,A
// 1188     accel_hw[2] += got_accel[2];
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOVX    @DPTR,A
// 1189 
// 1190     data[0] = (accel_hw[0] >> 8) & 0xff;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_61:
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        LCALL   ?SS_SHR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1191     data[1] = (accel_hw[0]) & 0xff;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1192     data[2] = (accel_hw[1] >> 8) & 0xff;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL   ?SS_SHR
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1193     data[3] = (accel_hw[1]) & 0xff;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
// 1194     data[4] = (accel_hw[2] >> 8) & 0xff;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_53:
        LCALL   ?SS_SHR
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1195     data[5] = (accel_hw[2]) & 0xff;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        LCALL   ?Subroutine61 & 0xFFFF
// 1196 
// 1197     if (i2c_write(st.hw->addr, 0x06, 6, data))
??CrossCallReturnLabel_97:
        MOV     DPTR,#st + 2
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_195:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??I2C_Write?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??mpu_set_accel_bias_1 & 0xFFFF
        LJMP    ??mpu_set_accel_bias_4 & 0xFFFF
        CFI EndBlock cfiBlock57
// 1198         return -1;
// 1199     return 0;
// 1200 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
        CFI Block cfiCond58 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_111
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond59 Using cfiCommon0
        CFI (cfiCond59) NoFunction
        CFI (cfiCond59) Conditional ??CrossCallReturnLabel_112
        CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond59) CFA_SP SP+0
        CFI (cfiCond59) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond60 Using cfiCommon0
        CFI (cfiCond60) NoFunction
        CFI (cfiCond60) Conditional ??CrossCallReturnLabel_113
        CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond60) CFA_SP SP+0
        CFI (cfiCond60) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiPicker61 Using cfiCommon1
        CFI (cfiPicker61) NoFunction
        CFI (cfiPicker61) Picker
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        ORL     A,?V0 + 6
        ORL     A,?V0 + 7
        RET
        CFI EndBlock cfiCond58
        CFI EndBlock cfiCond59
        CFI EndBlock cfiCond60
        CFI EndBlock cfiPicker61

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
        CFI Block cfiCond62 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_159
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond63 Using cfiCommon0
        CFI (cfiCond63) NoFunction
        CFI (cfiCond63) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond63) CFA_SP SP+0
        CFI (cfiCond63) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond64 Using cfiCommon0
        CFI (cfiCond64) NoFunction
        CFI (cfiCond64) Conditional ??CrossCallReturnLabel_161
        CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond64) CFA_SP SP+0
        CFI (cfiCond64) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond65 Using cfiCommon0
        CFI (cfiCond65) NoFunction
        CFI (cfiCond65) Conditional ??CrossCallReturnLabel_162
        CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond65) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond65) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond65) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond65) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond65) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond65) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond65) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond65) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond65) CFA_SP SP+0
        CFI (cfiCond65) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond66 Using cfiCommon0
        CFI (cfiCond66) NoFunction
        CFI (cfiCond66) Conditional ??CrossCallReturnLabel_163
        CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond66) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond66) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond66) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond66) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond66) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond66) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond66) CFA_SP SP+0
        CFI (cfiCond66) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond67 Using cfiCommon0
        CFI (cfiCond67) NoFunction
        CFI (cfiCond67) Conditional ??CrossCallReturnLabel_164
        CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond67) CFA_SP SP+0
        CFI (cfiCond67) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker68 Using cfiCommon1
        CFI (cfiPicker68) NoFunction
        CFI (cfiPicker68) Picker
        MOV     A,R0
        CFI EndBlock cfiCond62
        CFI EndBlock cfiCond63
        CFI EndBlock cfiCond64
        CFI EndBlock cfiCond65
        CFI EndBlock cfiCond66
        CFI EndBlock cfiCond67
        CFI EndBlock cfiPicker68
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
        CFI Block cfiCond69 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_156
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond70 Using cfiCommon0
        CFI (cfiCond70) NoFunction
        CFI (cfiCond70) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond70) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond70) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond70) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond70) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond70) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond70) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond70) CFA_SP SP+0
        CFI (cfiCond70) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond71 Using cfiCommon0
        CFI (cfiCond71) NoFunction
        CFI (cfiCond71) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond71) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond71) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond71) CFA_SP SP+0
        CFI (cfiCond71) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond72 Using cfiCommon0
        CFI (cfiCond72) NoFunction
        CFI (cfiCond72) Conditional ??CrossCallReturnLabel_159
        CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond72) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond72) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond72) CFA_SP SP+0
        CFI (cfiCond72) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond73 Using cfiCommon0
        CFI (cfiCond73) NoFunction
        CFI (cfiCond73) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond73) CFA_SP SP+0
        CFI (cfiCond73) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond74 Using cfiCommon0
        CFI (cfiCond74) NoFunction
        CFI (cfiCond74) Conditional ??CrossCallReturnLabel_161
        CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond74) CFA_SP SP+0
        CFI (cfiCond74) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond75 Using cfiCommon0
        CFI (cfiCond75) NoFunction
        CFI (cfiCond75) Conditional ??CrossCallReturnLabel_162
        CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond75) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond75) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond75) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond75) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond75) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond75) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond75) CFA_SP SP+0
        CFI (cfiCond75) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond76 Using cfiCommon0
        CFI (cfiCond76) NoFunction
        CFI (cfiCond76) Conditional ??CrossCallReturnLabel_163
        CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond76) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond76) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond76) CFA_SP SP+0
        CFI (cfiCond76) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond77 Using cfiCommon0
        CFI (cfiCond77) NoFunction
        CFI (cfiCond77) Conditional ??CrossCallReturnLabel_164
        CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond77) CFA_SP SP+0
        CFI (cfiCond77) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker78 Using cfiCommon1
        CFI (cfiPicker78) NoFunction
        CFI (cfiPicker78) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond69
        CFI EndBlock cfiCond70
        CFI EndBlock cfiCond71
        CFI EndBlock cfiCond72
        CFI EndBlock cfiCond73
        CFI EndBlock cfiCond74
        CFI EndBlock cfiCond75
        CFI EndBlock cfiCond76
        CFI EndBlock cfiCond77
        CFI EndBlock cfiPicker78

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
        CFI Block cfiCond79 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_96
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond80 Using cfiCommon0
        CFI (cfiCond80) NoFunction
        CFI (cfiCond80) Conditional ??CrossCallReturnLabel_97
        CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond80) CFA_SP SP+0
        CFI (cfiCond80) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiPicker81 Using cfiCommon1
        CFI (cfiPicker81) NoFunction
        CFI (cfiPicker81) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_147:
        MOV     R3,#0x6
        MOV     R2,#0x6
        RET
        CFI EndBlock cfiCond79
        CFI EndBlock cfiCond80
        CFI EndBlock cfiPicker81

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
        CFI Block cfiCond82 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_67
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond83 Using cfiCommon0
        CFI (cfiCond83) NoFunction
        CFI (cfiCond83) Conditional ??CrossCallReturnLabel_68
        CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond83) CFA_SP SP+0
        CFI (cfiCond83) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond84 Using cfiCommon0
        CFI (cfiCond84) NoFunction
        CFI (cfiCond84) Conditional ??CrossCallReturnLabel_69
        CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond84) CFA_SP SP+0
        CFI (cfiCond84) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond85 Using cfiCommon0
        CFI (cfiCond85) NoFunction
        CFI (cfiCond85) Conditional ??CrossCallReturnLabel_70
        CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond85) CFA_SP SP+0
        CFI (cfiCond85) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond86 Using cfiCommon0
        CFI (cfiCond86) NoFunction
        CFI (cfiCond86) Conditional ??CrossCallReturnLabel_71
        CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond86) CFA_SP SP+0
        CFI (cfiCond86) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond87 Using cfiCommon0
        CFI (cfiCond87) NoFunction
        CFI (cfiCond87) Conditional ??CrossCallReturnLabel_72
        CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond87) CFA_SP SP+0
        CFI (cfiCond87) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond88 Using cfiCommon0
        CFI (cfiCond88) NoFunction
        CFI (cfiCond88) Conditional ??CrossCallReturnLabel_73
        CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond88) CFA_SP SP+0
        CFI (cfiCond88) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond89 Using cfiCommon0
        CFI (cfiCond89) NoFunction
        CFI (cfiCond89) Conditional ??CrossCallReturnLabel_74
        CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond89) CFA_SP SP+0
        CFI (cfiCond89) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker90 Using cfiCommon1
        CFI (cfiPicker90) NoFunction
        CFI (cfiPicker90) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x1
        RET
        CFI EndBlock cfiCond82
        CFI EndBlock cfiCond83
        CFI EndBlock cfiCond84
        CFI EndBlock cfiCond85
        CFI EndBlock cfiCond86
        CFI EndBlock cfiCond87
        CFI EndBlock cfiCond88
        CFI EndBlock cfiCond89
        CFI EndBlock cfiPicker90

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
        CFI Block cfiCond91 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_60
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond92 Using cfiCommon0
        CFI (cfiCond92) NoFunction
        CFI (cfiCond92) Conditional ??CrossCallReturnLabel_61
        CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond92) CFA_SP SP+0
        CFI (cfiCond92) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond93 Using cfiCommon0
        CFI (cfiCond93) NoFunction
        CFI (cfiCond93) Conditional ??CrossCallReturnLabel_62
        CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond93) CFA_SP SP+0
        CFI (cfiCond93) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker94 Using cfiCommon1
        CFI (cfiPicker94) NoFunction
        CFI (cfiPicker94) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond91
        CFI EndBlock cfiCond92
        CFI EndBlock cfiCond93
        CFI EndBlock cfiPicker94

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
        CFI Block cfiCond95 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond96 Using cfiCommon0
        CFI (cfiCond96) NoFunction
        CFI (cfiCond96) Conditional ??CrossCallReturnLabel_53
        CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond96) CFA_SP SP+0
        CFI (cfiCond96) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiPicker97 Using cfiCommon1
        CFI (cfiPicker97) NoFunction
        CFI (cfiPicker97) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_134:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x8
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond95
        CFI EndBlock cfiCond96
        CFI EndBlock cfiPicker97

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
        CFI Block cfiCond98 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_49
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond99 Using cfiCommon0
        CFI (cfiCond99) NoFunction
        CFI (cfiCond99) Conditional ??CrossCallReturnLabel_50
        CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond99) CFA_SP SP+0
        CFI (cfiCond99) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond100 Using cfiCommon0
        CFI (cfiCond100) NoFunction
        CFI (cfiCond100) Conditional ??CrossCallReturnLabel_51
        CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond100) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond100) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond100) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond100) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond100) CFA_SP SP+0
        CFI (cfiCond100) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiPicker101 Using cfiCommon1
        CFI (cfiPicker101) NoFunction
        CFI (cfiPicker101) Picker
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        ADD     A,#0x8
        ANL     A,#0xf
        RET
        CFI EndBlock cfiCond98
        CFI EndBlock cfiCond99
        CFI EndBlock cfiCond100
        CFI EndBlock cfiPicker101
// 1201 
// 1202 /**
// 1203  *  @brief  Reset FIFO read/write pointers.
// 1204  *  @return 0 if successful.
// 1205  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1206 int mpu_reset_fifo(void)
mpu_reset_fifo:
        CFI Block cfiBlock102 Using cfiCommon0
        CFI Function mpu_reset_fifo
        CODE
// 1207 {
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_reset_fifo, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
// 1208     unsigned char data;
// 1209 
// 1210     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_reset_fifo_0
// 1211         return -1;
??mpu_reset_fifo_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_reset_fifo_2 & 0xFFFF
// 1212 
// 1213     data = 0;
??mpu_reset_fifo_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine57 & 0xFFFF
// 1214     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_252:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_282:
        JNZ     ??mpu_reset_fifo_1
// 1215         return -1;
// 1216     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_293:
        JNZ     ??mpu_reset_fifo_1
// 1217         return -1;
// 1218     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_294:
        JNZ     ??mpu_reset_fifo_1
// 1219         return -1;
// 1220 
// 1221     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_183:
        JZ      ??mpu_reset_fifo_3
// 1222         data = BIT_FIFO_RST | BIT_DMP_RST;
        LCALL   ?Subroutine34 & 0xFFFF
// 1223         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
??CrossCallReturnLabel_165:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_295:
        JNZ     ??mpu_reset_fifo_1
// 1224             return -1;
// 1225         delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        LCALL   ?Subroutine66 & 0xFFFF
// 1226         data = BIT_DMP_EN | BIT_FIFO_EN;
??CrossCallReturnLabel_104:
        MOV     A,#-0x40
        MOVX    @DPTR,A
// 1227         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??mpu_reset_fifo_4
// 1228             data |= BIT_AUX_IF_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x20
        MOVX    @DPTR,A
// 1229         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
??mpu_reset_fifo_4:
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_296:
        JNZ     ??mpu_reset_fifo_1
// 1230             return -1;
// 1231         if (st.chip_cfg.int_enable)
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_186:
        JZ      ??mpu_reset_fifo_5
// 1232             data = BIT_DMP_INT_EN;
        MOV     A,#0x2
        SJMP    ??mpu_reset_fifo_6
// 1233         else
// 1234             data = 0;
??mpu_reset_fifo_5:
        CLR     A
??mpu_reset_fifo_6:
        LCALL   ??Subroutine132_0 & 0xFFFF
// 1235         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_256:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_283:
        JNZ     ??mpu_reset_fifo_1
// 1236             return -1;
// 1237         data = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine33 & 0xFFFF
// 1238         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &data))
// 1239             return -1;
// 1240     } else {
??CrossCallReturnLabel_204:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_297:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
        SJMP    ??mpu_reset_fifo_7
// 1241         data = BIT_FIFO_RST;
??mpu_reset_fifo_3:
        MOV     A,#0x4
        LCALL   ??Subroutine107_0 & 0xFFFF
// 1242         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
??CrossCallReturnLabel_167:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_298:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1243             return -1;
// 1244         if (st.chip_cfg.bypass_mode || !(st.chip_cfg.sensors & INV_XYZ_COMPASS))
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        JNZ     ??mpu_reset_fifo_8
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JC      ??mpu_reset_fifo_9
// 1245             data = BIT_FIFO_EN;
??mpu_reset_fifo_8:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x40
        SJMP    ??mpu_reset_fifo_10
// 1246         else
// 1247             data = BIT_FIFO_EN | BIT_AUX_IF_EN;
??mpu_reset_fifo_9:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x60
??mpu_reset_fifo_10:
        LCALL   ??Subroutine107_0 & 0xFFFF
// 1248         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &data))
??CrossCallReturnLabel_168:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_299:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1249             return -1;
// 1250         delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 1251         if (st.chip_cfg.int_enable)
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_187:
        JZ      ??mpu_reset_fifo_11
// 1252             data = BIT_DATA_RDY_EN;
        MOV     A,#0x1
        SJMP    ??mpu_reset_fifo_12
// 1253         else
// 1254             data = 0;
??mpu_reset_fifo_11:
        CLR     A
??mpu_reset_fifo_12:
        LCALL   ??Subroutine132_0 & 0xFFFF
// 1255         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, &data))
??CrossCallReturnLabel_257:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_284:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1256             return -1;
// 1257         if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, &st.chip_cfg.fifo_enable))
        ; Setup parameters for call to function I2C_Write
        MOV     R4,#(st + 11) & 0xff
        MOV     R5,#((st + 11) >> 8) & 0xff
        LCALL   ??Subroutine122_0 & 0xFFFF
// 1258             return -1;
// 1259     }
??CrossCallReturnLabel_207:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_300:
        JZ      $+5
        LJMP    ??mpu_reset_fifo_1 & 0xFFFF
// 1260     return 0;
??mpu_reset_fifo_7:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_reset_fifo_2:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock102
// 1261 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
        CFI Block cfiCond103 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_103
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond104 Using cfiCommon0
        CFI (cfiCond104) NoFunction
        CFI (cfiCond104) Conditional ??CrossCallReturnLabel_104
        CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond104) CFA_SP SP+0
        CFI (cfiCond104) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond105 Using cfiCommon0
        CFI (cfiCond105) NoFunction
        CFI (cfiCond105) Conditional ??CrossCallReturnLabel_105
        CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond105) CFA_SP SP+0
        CFI (cfiCond105) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker106 Using cfiCommon1
        CFI (cfiPicker106) NoFunction
        CFI (cfiPicker106) Picker
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond103
        CFI EndBlock cfiCond104
        CFI EndBlock cfiCond105
        CFI EndBlock cfiPicker106

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond107 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_165
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond108 Using cfiCommon0
        CFI (cfiCond108) NoFunction
        CFI (cfiCond108) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond108) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond108) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond108) CFA_SP SP+0
        CFI (cfiCond108) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker109 Using cfiCommon1
        CFI (cfiPicker109) NoFunction
        CFI (cfiPicker109) Picker
        MOV     A,#0xc
        CFI EndBlock cfiCond107
        CFI EndBlock cfiCond108
        CFI EndBlock cfiPicker109
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
        CFI Block cfiCond110 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_167
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond111 Using cfiCommon0
        CFI (cfiCond111) NoFunction
        CFI (cfiCond111) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond111) CFA_SP SP+0
        CFI (cfiCond111) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond112 Using cfiCommon0
        CFI (cfiCond112) NoFunction
        CFI (cfiCond112) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond112) CFA_SP SP+0
        CFI (cfiCond112) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond113 Using cfiCommon0
        CFI (cfiCond113) NoFunction
        CFI (cfiCond113) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond113) CFA_SP SP+0
        CFI (cfiCond113) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond114 Using cfiCommon0
        CFI (cfiCond114) NoFunction
        CFI (cfiCond114) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond114) CFA_SP SP+0
        CFI (cfiCond114) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond115 Using cfiCommon0
        CFI (cfiCond115) NoFunction
        CFI (cfiCond115) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond115) CFA_SP SP+0
        CFI (cfiCond115) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond116 Using cfiCommon0
        CFI (cfiCond116) NoFunction
        CFI (cfiCond116) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond116) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond116) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond116) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond116) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond116) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond116) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond116) CFA_SP SP+0
        CFI (cfiCond116) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker117 Using cfiCommon1
        CFI (cfiPicker117) NoFunction
        CFI (cfiPicker117) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond110
        CFI EndBlock cfiCond111
        CFI EndBlock cfiCond112
        CFI EndBlock cfiCond113
        CFI EndBlock cfiCond114
        CFI EndBlock cfiCond115
        CFI EndBlock cfiCond116
        CFI EndBlock cfiPicker117
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
        CFI Block cfiCond118 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_173
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond119 Using cfiCommon0
        CFI (cfiCond119) NoFunction
        CFI (cfiCond119) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond119) CFA_SP SP+0
        CFI (cfiCond119) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond120 Using cfiCommon0
        CFI (cfiCond120) NoFunction
        CFI (cfiCond120) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond120) CFA_SP SP+0
        CFI (cfiCond120) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond121 Using cfiCommon0
        CFI (cfiCond121) NoFunction
        CFI (cfiCond121) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond121) CFA_SP SP+0
        CFI (cfiCond121) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond122 Using cfiCommon0
        CFI (cfiCond122) NoFunction
        CFI (cfiCond122) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond122) CFA_SP SP+0
        CFI (cfiCond122) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond123 Using cfiCommon0
        CFI (cfiCond123) NoFunction
        CFI (cfiCond123) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond123) CFA_SP SP+0
        CFI (cfiCond123) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond124 Using cfiCommon0
        CFI (cfiCond124) NoFunction
        CFI (cfiCond124) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond124) CFA_SP SP+0
        CFI (cfiCond124) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond125 Using cfiCommon0
        CFI (cfiCond125) NoFunction
        CFI (cfiCond125) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond125) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond125) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond125) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond125) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond125) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond125) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond125) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond125) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond125) CFA_SP SP+0
        CFI (cfiCond125) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond126 Using cfiCommon0
        CFI (cfiCond126) NoFunction
        CFI (cfiCond126) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond126) CFA_SP SP+0
        CFI (cfiCond126) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond127 Using cfiCommon0
        CFI (cfiCond127) NoFunction
        CFI (cfiCond127) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond127) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond127) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond127) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond127) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond127) CFA_SP SP+0
        CFI (cfiCond127) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker128 Using cfiCommon1
        CFI (cfiPicker128) NoFunction
        CFI (cfiPicker128) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        CFI EndBlock cfiCond118
        CFI EndBlock cfiCond119
        CFI EndBlock cfiCond120
        CFI EndBlock cfiCond121
        CFI EndBlock cfiCond122
        CFI EndBlock cfiCond123
        CFI EndBlock cfiCond124
        CFI EndBlock cfiCond125
        CFI EndBlock cfiCond126
        CFI EndBlock cfiCond127
        CFI EndBlock cfiPicker128
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
        CFI Block cfiCond129 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_172
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond130 Using cfiCommon0
        CFI (cfiCond130) NoFunction
        CFI (cfiCond130) Conditional ??CrossCallReturnLabel_173
        CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond130) CFA_SP SP+0
        CFI (cfiCond130) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond131 Using cfiCommon0
        CFI (cfiCond131) NoFunction
        CFI (cfiCond131) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond131) CFA_SP SP+0
        CFI (cfiCond131) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond132 Using cfiCommon0
        CFI (cfiCond132) NoFunction
        CFI (cfiCond132) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond132) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond132) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond132) CFA_SP SP+0
        CFI (cfiCond132) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond133 Using cfiCommon0
        CFI (cfiCond133) NoFunction
        CFI (cfiCond133) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond133) CFA_SP SP+0
        CFI (cfiCond133) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond134 Using cfiCommon0
        CFI (cfiCond134) NoFunction
        CFI (cfiCond134) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond134) CFA_SP SP+0
        CFI (cfiCond134) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond135 Using cfiCommon0
        CFI (cfiCond135) NoFunction
        CFI (cfiCond135) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond135) CFA_SP SP+0
        CFI (cfiCond135) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond136 Using cfiCommon0
        CFI (cfiCond136) NoFunction
        CFI (cfiCond136) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond136) CFA_SP SP+0
        CFI (cfiCond136) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond137 Using cfiCommon0
        CFI (cfiCond137) NoFunction
        CFI (cfiCond137) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond137) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond137) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond137) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond137) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond137) CFA_SP SP+0
        CFI (cfiCond137) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond138 Using cfiCommon0
        CFI (cfiCond138) NoFunction
        CFI (cfiCond138) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond138) CFA_SP SP+0
        CFI (cfiCond138) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond139 Using cfiCommon0
        CFI (cfiCond139) NoFunction
        CFI (cfiCond139) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond139) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond139) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond139) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond139) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond139) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond139) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond139) CFA_SP SP+0
        CFI (cfiCond139) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker140 Using cfiCommon1
        CFI (cfiPicker140) NoFunction
        CFI (cfiPicker140) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_225:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond129
        CFI EndBlock cfiCond130
        CFI EndBlock cfiCond131
        CFI EndBlock cfiCond132
        CFI EndBlock cfiCond133
        CFI EndBlock cfiCond134
        CFI EndBlock cfiCond135
        CFI EndBlock cfiCond136
        CFI EndBlock cfiCond137
        CFI EndBlock cfiCond138
        CFI EndBlock cfiCond139
        CFI EndBlock cfiPicker140
// 1262 
// 1263 /**
// 1264  *  @brief      Get the gyro full-scale range.
// 1265  *  @param[out] fsr Current full-scale range.
// 1266  *  @return     0 if successful.
// 1267  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1268 int mpu_get_gyro_fsr(unsigned short *fsr)
mpu_get_gyro_fsr:
        CFI Block cfiBlock141 Using cfiCommon0
        CFI Function mpu_get_gyro_fsr
        CODE
// 1269 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1270     switch (st.chip_cfg.gyro_fsr) {
        MOV     DPTR,#st + 4
        MOVX    A,@DPTR
        JZ      ??mpu_get_gyro_fsr_0
        DEC     A
        JZ      ??mpu_get_gyro_fsr_1
        DEC     A
        JZ      ??mpu_get_gyro_fsr_2
        DEC     A
        JZ      ??mpu_get_gyro_fsr_3
        SJMP    ??mpu_get_gyro_fsr_4
// 1271     case INV_FSR_250DPS:
// 1272         fsr[0] = 250;
??mpu_get_gyro_fsr_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x6
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        SJMP    ??mpu_get_gyro_fsr_5
// 1273         break;
// 1274     case INV_FSR_500DPS:
// 1275         fsr[0] = 500;
??mpu_get_gyro_fsr_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0xc
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??mpu_get_gyro_fsr_5
// 1276         break;
// 1277     case INV_FSR_1000DPS:
// 1278         fsr[0] = 1000;
??mpu_get_gyro_fsr_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x18
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x3
        SJMP    ??mpu_get_gyro_fsr_5
// 1279         break;
// 1280     case INV_FSR_2000DPS:
// 1281         fsr[0] = 2000;
??mpu_get_gyro_fsr_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x30
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7
        SJMP    ??mpu_get_gyro_fsr_5
// 1282         break;
// 1283     default:
// 1284         fsr[0] = 0;
??mpu_get_gyro_fsr_4:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
// 1285         break;
// 1286     }
??mpu_get_gyro_fsr_5:
        LJMP    ??Subroutine111_0 & 0xFFFF
        CFI EndBlock cfiBlock141
// 1287     return 0;
// 1288 }
// 1289 
// 1290 /**
// 1291  *  @brief      Set the gyro full-scale range.
// 1292  *  @param[in]  fsr Desired full-scale range.
// 1293  *  @return     0 if successful.
// 1294  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1295 int mpu_set_gyro_fsr(unsigned short fsr)
mpu_set_gyro_fsr:
        CFI Block cfiBlock142 Using cfiCommon0
        CFI Function mpu_set_gyro_fsr
        CODE
// 1296 {
        FUNCALL mpu_set_gyro_fsr, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
// 1297     unsigned char data;
// 1298 
// 1299     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_gyro_fsr_0
// 1300         return -1;
??mpu_set_gyro_fsr_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_gyro_fsr_2
// 1301 
// 1302     switch (fsr) {
??mpu_set_gyro_fsr_0:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,#?V0 + 0
        LCALL   ?US_SWITCH_SPARSE
`?<Jumptable for mpu_set_gyro_fsr>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        4
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        250
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_3
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        500
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_4
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        1000
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_5
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        2000
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??mpu_set_gyro_fsr_1
        CODE
// 1303     case 250:
// 1304         data = INV_FSR_250DPS << 3;
??mpu_set_gyro_fsr_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??mpu_set_gyro_fsr_7
// 1305         break;
// 1306     case 500:
// 1307         data = INV_FSR_500DPS << 3;
??mpu_set_gyro_fsr_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x8
        SJMP    ??mpu_set_gyro_fsr_7
// 1308         break;
// 1309     case 1000:
// 1310         data = INV_FSR_1000DPS << 3;
??mpu_set_gyro_fsr_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
        SJMP    ??mpu_set_gyro_fsr_7
// 1311         break;
// 1312     case 2000:
// 1313         data = INV_FSR_2000DPS << 3;
??mpu_set_gyro_fsr_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x18
??mpu_set_gyro_fsr_7:
        MOVX    @DPTR,A
// 1314         break;
// 1315     default:
// 1316         return -1;
// 1317     }
// 1318 
// 1319     if (st.chip_cfg.gyro_fsr == (data >> 3))
        MOV     DPTR,#st + 4
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_20:
        JZ      ??mpu_set_gyro_fsr_8
// 1320         return 0;
// 1321     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, &data))
        ; Setup parameters for call to function I2C_Write
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_40:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_301:
        JNZ     ??mpu_set_gyro_fsr_1
// 1322         return -1;
// 1323     st.chip_cfg.gyro_fsr = data >> 3;
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV     DPTR,#st + 4
        MOVX    @DPTR,A
// 1324     return 0;
??mpu_set_gyro_fsr_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_gyro_fsr_2:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock142
// 1325 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
        CFI Block cfiCond143 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_177
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond144 Using cfiCommon0
        CFI (cfiCond144) NoFunction
        CFI (cfiCond144) Conditional ??CrossCallReturnLabel_178
        CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond144) CFA_SP SP+0
        CFI (cfiCond144) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker145 Using cfiCommon1
        CFI (cfiPicker145) NoFunction
        CFI (cfiPicker145) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond143
        CFI EndBlock cfiCond144
        CFI EndBlock cfiPicker145
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
        CFI Block cfiCond146 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_35
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond147 Using cfiCommon0
        CFI (cfiCond147) NoFunction
        CFI (cfiCond147) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_36
        CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond147) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond147) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond147) CFA_SP SP+0
        CFI (cfiCond147) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond148 Using cfiCommon0
        CFI (cfiCond148) NoFunction
        CFI (cfiCond148) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_37
        CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond148) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond148) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond148) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond148) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond148) CFA_SP SP+0
        CFI (cfiCond148) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond149 Using cfiCommon0
        CFI (cfiCond149) NoFunction
        CFI (cfiCond149) Conditional ??CrossCallReturnLabel_177
        CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond149) CFA_SP SP+0
        CFI (cfiCond149) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond150 Using cfiCommon0
        CFI (cfiCond150) NoFunction
        CFI (cfiCond150) Conditional ??CrossCallReturnLabel_178
        CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond150) CFA_SP SP+0
        CFI (cfiCond150) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker151 Using cfiCommon1
        CFI (cfiPicker151) NoFunction
        CFI (cfiPicker151) Picker
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        RET
        CFI EndBlock cfiCond146
        CFI EndBlock cfiCond147
        CFI EndBlock cfiCond148
        CFI EndBlock cfiCond149
        CFI EndBlock cfiCond150
        CFI EndBlock cfiPicker151
// 1326 
// 1327 /**
// 1328  *  @brief      Get the accel full-scale range.
// 1329  *  @param[out] fsr Current full-scale range.
// 1330  *  @return     0 if successful.
// 1331  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1332 int mpu_get_accel_fsr(unsigned char *fsr)
mpu_get_accel_fsr:
        CFI Block cfiBlock152 Using cfiCommon0
        CFI Function mpu_get_accel_fsr
        CODE
// 1333 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1334     switch (st.chip_cfg.accel_fsr) {
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_fsr_0
        DEC     A
        JZ      ??mpu_get_accel_fsr_1
        DEC     A
        JZ      ??mpu_get_accel_fsr_2
        DEC     A
        JZ      ??mpu_get_accel_fsr_3
        SJMP    ??mpu_get_accel_fsr_4
// 1335     case INV_FSR_2G:
// 1336         fsr[0] = 2;
??mpu_get_accel_fsr_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x2
??mpu_get_accel_fsr_5:
        MOVX    @DPTR,A
// 1337         break;
// 1338     case INV_FSR_4G:
// 1339         fsr[0] = 4;
// 1340         break;
// 1341     case INV_FSR_8G:
// 1342         fsr[0] = 8;
// 1343         break;
// 1344     case INV_FSR_16G:
// 1345         fsr[0] = 16;
// 1346         break;
// 1347     default:
// 1348         return -1;
// 1349     }
// 1350     if (st.chip_cfg.accel_half)
        MOV     DPTR,#st + 14
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_fsr_6
// 1351         fsr[0] <<= 1;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        CLR     C
        RLC     A
        MOVX    @DPTR,A
// 1352     return 0;
??mpu_get_accel_fsr_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_accel_fsr_7:
        LJMP    ??Subroutine113_0 & 0xFFFF
??mpu_get_accel_fsr_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x4
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x8
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x10
        SJMP    ??mpu_get_accel_fsr_5
??mpu_get_accel_fsr_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_accel_fsr_7
        CFI EndBlock cfiBlock152
// 1353 }
// 1354 
// 1355 /**
// 1356  *  @brief      Set the accel full-scale range.
// 1357  *  @param[in]  fsr Desired full-scale range.
// 1358  *  @return     0 if successful.
// 1359  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1360 int mpu_set_accel_fsr(unsigned char fsr)
mpu_set_accel_fsr:
        CFI Block cfiBlock153 Using cfiCommon0
        CFI Function mpu_set_accel_fsr
        CODE
// 1361 {
        FUNCALL mpu_set_accel_fsr, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
// 1362     unsigned char data;
// 1363 
// 1364     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_accel_fsr_0
// 1365         return -1;
??mpu_set_accel_fsr_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_accel_fsr_2
// 1366 
// 1367     switch (fsr) {
??mpu_set_accel_fsr_0:
        MOV     A,R6
        ADD     A,#-0x2
        JZ      ??mpu_set_accel_fsr_3
        ADD     A,#-0x2
        JZ      ??mpu_set_accel_fsr_4
        ADD     A,#-0x4
        JZ      ??mpu_set_accel_fsr_5
        ADD     A,#-0x8
        JZ      ??mpu_set_accel_fsr_6
        SJMP    ??mpu_set_accel_fsr_1
// 1368     case 2:
// 1369         data = INV_FSR_2G << 3;
??mpu_set_accel_fsr_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??mpu_set_accel_fsr_7
// 1370         break;
// 1371     case 4:
// 1372         data = INV_FSR_4G << 3;
??mpu_set_accel_fsr_4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x8
        SJMP    ??mpu_set_accel_fsr_7
// 1373         break;
// 1374     case 8:
// 1375         data = INV_FSR_8G << 3;
??mpu_set_accel_fsr_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
        SJMP    ??mpu_set_accel_fsr_7
// 1376         break;
// 1377     case 16:
// 1378         data = INV_FSR_16G << 3;
??mpu_set_accel_fsr_6:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x18
??mpu_set_accel_fsr_7:
        MOVX    @DPTR,A
// 1379         break;
// 1380     default:
// 1381         return -1;
// 1382     }
// 1383 
// 1384     if (st.chip_cfg.accel_fsr == (data >> 3))
        MOV     DPTR,#st + 5
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_21:
        JZ      ??mpu_set_accel_fsr_8
// 1385         return 0;
// 1386     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, &data))
        ; Setup parameters for call to function I2C_Write
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_302:
        JNZ     ??mpu_set_accel_fsr_1
// 1387         return -1;
// 1388     st.chip_cfg.accel_fsr = data >> 3;
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV     DPTR,#st + 5
        MOVX    @DPTR,A
// 1389     return 0;
??mpu_set_accel_fsr_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_accel_fsr_2:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock153
// 1390 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond154 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond155 Using cfiCommon0
        CFI (cfiCond155) NoFunction
        CFI (cfiCond155) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond155) CFA_SP SP+0
        CFI (cfiCond155) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker156 Using cfiCommon1
        CFI (cfiPicker156) NoFunction
        CFI (cfiPicker156) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV     C,0xE0 /* A   */.7
        RRC     A
        MOV     C,0xE0 /* A   */.7
        RRC     A
        MOV     C,0xE0 /* A   */.7
        RRC     A
        XRL     A,R0
        RET
        CFI EndBlock cfiCond154
        CFI EndBlock cfiCond155
        CFI EndBlock cfiPicker156
// 1391 
// 1392 /**
// 1393  *  @brief      Get the current DLPF setting.
// 1394  *  @param[out] lpf Current LPF setting.
// 1395  *  0 if successful.
// 1396  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1397 int mpu_get_lpf(unsigned short *lpf)
mpu_get_lpf:
        CFI Block cfiBlock157 Using cfiCommon0
        CFI Function mpu_get_lpf
        CODE
// 1398 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1399     switch (st.chip_cfg.lpf) {
        MOV     DPTR,#st + 7
        MOVX    A,@DPTR
        DEC     A
        JZ      ??mpu_get_lpf_0
        DEC     A
        JZ      ??mpu_get_lpf_1
        DEC     A
        JZ      ??mpu_get_lpf_2
        DEC     A
        JZ      ??mpu_get_lpf_3
        DEC     A
        JZ      ??mpu_get_lpf_4
        DEC     A
        JZ      ??mpu_get_lpf_5
        SJMP    ??mpu_get_lpf_6
// 1400     case INV_FILTER_188HZ:
// 1401         lpf[0] = 188;
??mpu_get_lpf_0:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x44
??mpu_get_lpf_7:
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        SJMP    ??mpu_get_lpf_8
// 1402         break;
// 1403     case INV_FILTER_98HZ:
// 1404         lpf[0] = 98;
??mpu_get_lpf_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x62
        SJMP    ??mpu_get_lpf_7
// 1405         break;
// 1406     case INV_FILTER_42HZ:
// 1407         lpf[0] = 42;
??mpu_get_lpf_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x2a
        SJMP    ??mpu_get_lpf_7
// 1408         break;
// 1409     case INV_FILTER_20HZ:
// 1410         lpf[0] = 20;
??mpu_get_lpf_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x14
        SJMP    ??mpu_get_lpf_7
// 1411         break;
// 1412     case INV_FILTER_10HZ:
// 1413         lpf[0] = 10;
??mpu_get_lpf_4:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0xa
        SJMP    ??mpu_get_lpf_7
// 1414         break;
// 1415     case INV_FILTER_5HZ:
// 1416         lpf[0] = 5;
??mpu_get_lpf_5:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#0x5
        SJMP    ??mpu_get_lpf_7
// 1417         break;
// 1418     case INV_FILTER_256HZ_NOLPF2:
// 1419     case INV_FILTER_2100HZ_NOLPF:
// 1420     default:
// 1421         lpf[0] = 0;
??mpu_get_lpf_6:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
// 1422         break;
// 1423     }
??mpu_get_lpf_8:
        LJMP    ??Subroutine111_0 & 0xFFFF
        CFI EndBlock cfiBlock157
// 1424     return 0;
// 1425 }
// 1426 
// 1427 /**
// 1428  *  @brief      Set digital low pass filter.
// 1429  *  The following LPF settings are supported: 188, 98, 42, 20, 10, 5.
// 1430  *  @param[in]  lpf Desired LPF setting.
// 1431  *  @return     0 if successful.
// 1432  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1433 int mpu_set_lpf(unsigned short lpf)
mpu_set_lpf:
        CFI Block cfiBlock158 Using cfiCommon0
        CFI Function mpu_set_lpf
        CODE
// 1434 {
        FUNCALL mpu_set_lpf, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
// 1435     unsigned char data;
// 1436 
// 1437     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_lpf_0
// 1438         return -1;
??mpu_set_lpf_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_lpf_2 & 0xFFFF
// 1439 
// 1440     if (lpf >= 188)
??mpu_set_lpf_0:
        CLR     C
        MOV     A,R2
        SUBB    A,#-0x44
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_3
// 1441         data = INV_FILTER_188HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??mpu_set_lpf_4
// 1442     else if (lpf >= 98)
??mpu_set_lpf_3:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x62
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_5
// 1443         data = INV_FILTER_98HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x2
        SJMP    ??mpu_set_lpf_4
// 1444     else if (lpf >= 42)
??mpu_set_lpf_5:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x2a
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_6
// 1445         data = INV_FILTER_42HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x3
        SJMP    ??mpu_set_lpf_4
// 1446     else if (lpf >= 20)
??mpu_set_lpf_6:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x14
        MOV     A,R3
        SUBB    A,#0x0
        JC      ??mpu_set_lpf_7
// 1447         data = INV_FILTER_20HZ;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x4
        SJMP    ??mpu_set_lpf_4
// 1448     else if (lpf >= 10)
??mpu_set_lpf_7:
        CLR     C
        MOV     A,R2
        SUBB    A,#0xa
        MOV     A,R3
        SUBB    A,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JC      ??mpu_set_lpf_8
// 1449         data = INV_FILTER_10HZ;
        MOV     A,#0x5
        SJMP    ??mpu_set_lpf_4
// 1450     else
// 1451         data = INV_FILTER_5HZ;
??mpu_set_lpf_8:
        MOV     A,#0x6
??mpu_set_lpf_4:
        MOVX    @DPTR,A
// 1452 
// 1453     if (st.chip_cfg.lpf == data)
        MOV     DPTR,#st + 7
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_131:
        XRL     A,R0
        JZ      ??mpu_set_lpf_9
// 1454         return 0;
// 1455     if (i2c_write(st.hw->addr, st.reg->lpf, 1, &data))
        ; Setup parameters for call to function I2C_Write
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_203:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_303:
        JNZ     ??mpu_set_lpf_1
// 1456         return -1;
// 1457     st.chip_cfg.lpf = data;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     DPTR,#st + 7
        MOVX    @DPTR,A
// 1458     return 0;
??mpu_set_lpf_9:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_lpf_2:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock158
// 1459 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
        CFI Block cfiCond159 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond160 Using cfiCommon0
        CFI (cfiCond160) NoFunction
        CFI (cfiCond160) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_21
        CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond160) CFA_SP SP+0
        CFI (cfiCond160) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond161 Using cfiCommon0
        CFI (cfiCond161) NoFunction
        CFI (cfiCond161) Conditional ??CrossCallReturnLabel_131
        CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond161) CFA_SP SP+0
        CFI (cfiCond161) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker162 Using cfiCommon1
        CFI (cfiPicker162) NoFunction
        CFI (cfiPicker162) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond159
        CFI EndBlock cfiCond160
        CFI EndBlock cfiCond161
        CFI EndBlock cfiPicker162
// 1460 
// 1461 /**
// 1462  *  @brief      Get sampling rate.
// 1463  *  @param[out] rate    Current sampling rate (Hz).
// 1464  *  @return     0 if successful.
// 1465  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1466 int mpu_get_sample_rate(unsigned short *rate)
mpu_get_sample_rate:
        CFI Block cfiBlock163 Using cfiCommon0
        CFI Function mpu_get_sample_rate
        CODE
// 1467 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1468     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_get_sample_rate_0
// 1469         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_247
// 1470     else
// 1471         rate[0] = st.chip_cfg.sample_rate;
??mpu_get_sample_rate_0:
        MOV     DPTR,#st + 9
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        LCALL   ?Subroutine64 & 0xFFFF
// 1472     return 0;
??CrossCallReturnLabel_247:
        LJMP    ??Subroutine113_0 & 0xFFFF
        CFI EndBlock cfiBlock163
// 1473 }
// 1474 
// 1475 /**
// 1476  *  @brief      Set sampling rate.
// 1477  *  Sampling rate must be between 4Hz and 1kHz.
// 1478  *  @param[in]  rate    Desired sampling rate (Hz).
// 1479  *  @return     0 if successful.
// 1480  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1481 int mpu_set_sample_rate(unsigned short rate)
mpu_set_sample_rate:
        CFI Block cfiBlock164 Using cfiCommon0
        CFI Function mpu_set_sample_rate
        CODE
// 1482 {
        FUNCALL mpu_set_sample_rate, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sample_rate, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1483     unsigned char data;
// 1484 
// 1485     if (!(st.chip_cfg.sensors))
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_set_sample_rate_0
// 1486         return -1;
??mpu_set_sample_rate_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_sample_rate_2 & 0xFFFF
// 1487 
// 1488     if (st.chip_cfg.dmp_on)
??mpu_set_sample_rate_0:
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JNZ     ??mpu_set_sample_rate_1
// 1489         return -1;
// 1490     else {
// 1491         if (st.chip_cfg.lp_accel_mode) {
        MOV     DPTR,#st + 15
        MOVX    A,@DPTR
        JZ      ??mpu_set_sample_rate_3
// 1492             if (rate && (rate <= 40)) {
        MOV     A,R6
        ORL     A,R7
        JZ      ??mpu_set_sample_rate_4
        CLR     C
        MOV     A,R6
        SUBB    A,#0x29
        MOV     A,R7
        SUBB    A,#0x0
        JNC     ??mpu_set_sample_rate_4
// 1493                 /* Just stay in low-power accel mode. */
// 1494                 mpu_lp_accel_mode(rate);
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     A,R6
        MOV     R1,A
        LCALL   ??mpu_lp_accel_mode?relay
// 1495                 return 0;
        SJMP    ??mpu_set_sample_rate_5
// 1496             }
// 1497             /* Requested rate exceeds the allowed frequencies in LP accel mode,
// 1498              * switch back to full-power mode.
// 1499              */
// 1500             mpu_lp_accel_mode(0);
??mpu_set_sample_rate_4:
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     R1,#0x0
        LCALL   ??mpu_lp_accel_mode?relay
// 1501         }
// 1502         if (rate < 4)
??mpu_set_sample_rate_3:
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JNC     ??mpu_set_sample_rate_6
// 1503             rate = 4;
        MOV     R6,#0x4
        MOV     R7,#0x0
        SJMP    ??mpu_set_sample_rate_7
// 1504         else if (rate > 1000)
??mpu_set_sample_rate_6:
        CLR     C
        MOV     A,R6
        SUBB    A,#-0x17
        MOV     A,R7
        SUBB    A,#0x3
        JC      ??mpu_set_sample_rate_7
// 1505             rate = 1000;
        MOV     R6,#-0x18
        MOV     R7,#0x3
// 1506 
// 1507         data = 1000 / rate - 1;
??mpu_set_sample_rate_7:
        MOV     R0,#-0x18
        MOV     R1,#0x3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine37 & 0xFFFF
// 1508         if (i2c_write(st.hw->addr, st.reg->rate_div, 1, &data))
??CrossCallReturnLabel_193:
        INC     DPTR
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_304:
        JNZ     ??mpu_set_sample_rate_1
// 1509             return -1;
// 1510 
// 1511         st.chip_cfg.sample_rate = 1000 / (1 + data);
        MOV     R0,#-0x18
        MOV     R1,#0x3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?S_DIV_MOD
        MOV     DPTR,#st + 9
        LCALL   ?Subroutine65 & 0xFFFF
// 1512 
// 1513 #ifdef AK89xx_SECONDARY
// 1514         mpu_set_compass_sample_rate(min(st.chip_cfg.compass_sample_rate, MAX_COMPASS_SAMPLE_RATE));
// 1515 #endif
// 1516 
// 1517         /* Automatically set LPF to 1/2 sampling rate. */
// 1518         mpu_set_lpf(st.chip_cfg.sample_rate >> 1);
??CrossCallReturnLabel_161:
        ; Setup parameters for call to function mpu_set_lpf
        MOV     DPTR,#st + 9
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     R2,A
        LCALL   ??mpu_set_lpf?relay
// 1519         return 0;
??mpu_set_sample_rate_5:
        MOV     R2,#0x0
        MOV     R3,#0x0
// 1520     }
??mpu_set_sample_rate_2:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock164
// 1521 }
// 1522 
// 1523 /**
// 1524  *  @brief      Get compass sampling rate.
// 1525  *  @param[out] rate    Current compass sampling rate (Hz).
// 1526  *  @return     0 if successful.
// 1527  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1528 int mpu_get_compass_sample_rate(unsigned short *rate)
mpu_get_compass_sample_rate:
        CFI Block cfiBlock165 Using cfiCommon0
        CFI Function mpu_get_compass_sample_rate
        CODE
// 1529 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1530 #ifdef AK89xx_SECONDARY
// 1531     rate[0] = st.chip_cfg.compass_sample_rate;
// 1532     return 0;
// 1533 #else
// 1534     rate[0] = 0;
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1535     return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??Subroutine113_0 & 0xFFFF
        CFI EndBlock cfiBlock165
// 1536 #endif
// 1537 }
// 1538 
// 1539 /**
// 1540  *  @brief      Set compass sampling rate.
// 1541  *  The compass on the auxiliary I2C bus is read by the MPU hardware at a
// 1542  *  maximum of 100Hz. The actual rate can be set to a fraction of the gyro
// 1543  *  sampling rate.
// 1544  *
// 1545  *  \n WARNING: The new rate may be different than what was requested. Call
// 1546  *  mpu_get_compass_sample_rate to check the actual setting.
// 1547  *  @param[in]  rate    Desired compass sampling rate (Hz).
// 1548  *  @return     0 if successful.
// 1549  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1550 int mpu_set_compass_sample_rate(unsigned short rate)
mpu_set_compass_sample_rate:
        CODE
// 1551 {
        ; Saved register size: 0
        ; Auto size: 0
// 1552 #ifdef AK89xx_SECONDARY
// 1553     unsigned char div;
// 1554     if (!rate || rate > st.chip_cfg.sample_rate || rate > MAX_COMPASS_SAMPLE_RATE)
// 1555         return -1;
// 1556 
// 1557     div = st.chip_cfg.sample_rate / rate - 1;
// 1558     if (i2c_write(st.hw->addr, st.reg->s4_ctrl, 1, &div))
// 1559         return -1;
// 1560     st.chip_cfg.compass_sample_rate = st.chip_cfg.sample_rate / (div + 1);
// 1561     return 0;
// 1562 #else
// 1563     return -1;
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock166 Using cfiCommon0
        CFI NoFunction
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ?BRET
        CFI EndBlock cfiBlock166
// 1564 #endif
// 1565 }
// 1566 
// 1567 /**
// 1568  *  @brief      Get gyro sensitivity scale factor.
// 1569  *  @param[out] sens    Conversion from hardware units to dps.
// 1570  *  @return     0 if successful.
// 1571  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1572 int mpu_get_gyro_sens(float *sens)
mpu_get_gyro_sens:
        CFI Block cfiBlock167 Using cfiCommon0
        CFI Function mpu_get_gyro_sens
        CODE
// 1573 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
// 1574     switch (st.chip_cfg.gyro_fsr) {
        MOV     DPTR,#st + 4
        MOVX    A,@DPTR
        JZ      ??mpu_get_gyro_sens_0
        DEC     A
        JZ      ??mpu_get_gyro_sens_1
        DEC     A
        JZ      ??mpu_get_gyro_sens_2
        DEC     A
        JZ      ??mpu_get_gyro_sens_3
        SJMP    ??mpu_get_gyro_sens_4
// 1575     case INV_FSR_250DPS:
// 1576         sens[0] = 131.f;
??mpu_get_gyro_sens_0:
        MOV     DPTR,#__Constant_43030000
??mpu_get_gyro_sens_5:
        LCALL   ?XLOAD_R2345
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?XSTORE_R2345
// 1577         break;
// 1578     case INV_FSR_500DPS:
// 1579         sens[0] = 65.5f;
// 1580         break;
// 1581     case INV_FSR_1000DPS:
// 1582         sens[0] = 32.8f;
// 1583         break;
// 1584     case INV_FSR_2000DPS:
// 1585         sens[0] = 16.4f;
// 1586         break;
// 1587     default:
// 1588         return -1;
// 1589     }
// 1590     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_gyro_sens_6:
        LJMP    ?Subroutine4 & 0xFFFF
??mpu_get_gyro_sens_1:
        MOV     DPTR,#__Constant_42830000
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_2:
        MOV     DPTR,#__Constant_42033333
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_3:
        MOV     DPTR,#__Constant_41833333
        SJMP    ??mpu_get_gyro_sens_5
??mpu_get_gyro_sens_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_gyro_sens_6
        CFI EndBlock cfiBlock167
// 1591 }
// 1592 
// 1593 /**
// 1594  *  @brief      Get accel sensitivity scale factor.
// 1595  *  @param[out] sens    Conversion from hardware units to g's.
// 1596  *  @return     0 if successful.
// 1597  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1598 int mpu_get_accel_sens(unsigned short *sens)
mpu_get_accel_sens:
        CFI Block cfiBlock168 Using cfiCommon0
        CFI Function mpu_get_accel_sens
        CODE
// 1599 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1600     switch (st.chip_cfg.accel_fsr) {
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        JZ      ??mpu_get_accel_sens_0
        DEC     A
        JZ      ??mpu_get_accel_sens_1
        DEC     A
        JZ      ??mpu_get_accel_sens_2
        DEC     A
        JZ      ??mpu_get_accel_sens_3
        SJMP    ??mpu_get_accel_sens_4
// 1601     case INV_FSR_2G:
// 1602         sens[0] = 16384;
??mpu_get_accel_sens_0:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x40
??mpu_get_accel_sens_5:
        MOVX    @DPTR,A
// 1603         break;
// 1604     case INV_FSR_4G:
// 1605         sens[0] = 8092;
// 1606         break;
// 1607     case INV_FSR_8G:
// 1608         sens[0] = 4096;
// 1609         break;
// 1610     case INV_FSR_16G:
// 1611         sens[0] = 2048;
// 1612         break;
// 1613     default:
// 1614         return -1;
// 1615     }
// 1616     if (st.chip_cfg.accel_half)
        MOV     DPTR,#st + 14
        MOVX    A,@DPTR
        JZ      ??CrossCallReturnLabel_156
// 1617         sens[0] >>= 1;
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        RRC     A
        MOV     R1,A
        MOV     A,R0
        RRC     A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine106_0 & 0xFFFF
// 1618     return 0;
??CrossCallReturnLabel_156:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_get_accel_sens_6:
        LJMP    ??Subroutine113_0 & 0xFFFF
??mpu_get_accel_sens_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x64
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1f
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_2:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x10
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_3:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x8
        SJMP    ??mpu_get_accel_sens_5
??mpu_get_accel_sens_4:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_get_accel_sens_6
        CFI EndBlock cfiBlock168
// 1619 }
// 1620 
// 1621 /**
// 1622  *  @brief      Get current FIFO configuration.
// 1623  *  @e sensors can contain a combination of the following flags:
// 1624  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1625  *  \n INV_XYZ_GYRO
// 1626  *  \n INV_XYZ_ACCEL
// 1627  *  @param[out] sensors Mask of sensors in FIFO.
// 1628  *  @return     0 if successful.
// 1629  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1630 int mpu_get_fifo_config(unsigned char *sensors)
mpu_get_fifo_config:
        CFI Block cfiBlock169 Using cfiCommon0
        CFI Function mpu_get_fifo_config
        CODE
// 1631 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1632     sensors[0] = st.chip_cfg.fifo_enable;
        MOV     DPTR,#st + 11
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock169
// 1633     return 0;
// 1634 }
// 1635 
// 1636 /**
// 1637  *  @brief      Select which sensors are pushed to FIFO.
// 1638  *  @e sensors can contain a combination of the following flags:
// 1639  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1640  *  \n INV_XYZ_GYRO
// 1641  *  \n INV_XYZ_ACCEL
// 1642  *  @param[in]  sensors Mask of sensors to push to FIFO.
// 1643  *  @return     0 if successful.
// 1644  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1645 int mpu_configure_fifo(unsigned char sensors)
mpu_configure_fifo:
        CFI Block cfiBlock170 Using cfiCommon0
        CFI Function mpu_configure_fifo
        CODE
// 1646 {
        FUNCALL mpu_configure_fifo, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_configure_fifo, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_configure_fifo, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 1647     unsigned char prev;
// 1648     int result = 0;
// 1649 
// 1650     /* Compass data isn't going into the FIFO. Stop trying. */
// 1651     sensors &= ~INV_XYZ_COMPASS;
        MOV     A,R1
        CLR     0xE0 /* A   */.0
        MOV     ?V0 + 0,A
// 1652 
// 1653     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_configure_fifo_0
// 1654         return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_configure_fifo_1
// 1655     else {
// 1656         if (!(st.chip_cfg.sensors))
??mpu_configure_fifo_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     R0,A
        JNZ     ??mpu_configure_fifo_2
// 1657             return -1;
??mpu_configure_fifo_3:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_configure_fifo_1
// 1658         prev = st.chip_cfg.fifo_enable;
??mpu_configure_fifo_2:
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
// 1659         st.chip_cfg.fifo_enable = sensors & st.chip_cfg.sensors;
        MOV     A,?V0 + 0
        ANL     A,R0
        MOV     R0,A
        MOVX    @DPTR,A
// 1660         if (st.chip_cfg.fifo_enable != sensors)
        MOV     A,?V0 + 0
        XRL     A,R0
        JZ      ??mpu_configure_fifo_4
// 1661             /* You're not getting what you asked for. Some sensors are
// 1662              * asleep.
// 1663              */
// 1664             result = -1;
        MOV     R6,#-0x1
        MOV     R7,#-0x1
        SJMP    ??mpu_configure_fifo_5
// 1665         else
// 1666             result = 0;
??mpu_configure_fifo_4:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1667         if (sensors || st.chip_cfg.lp_accel_mode)
??mpu_configure_fifo_5:
        MOV     A,?V0 + 0
        JNZ     ??mpu_configure_fifo_6
        MOV     DPTR,#st + 15
        MOVX    A,@DPTR
        JZ      ??mpu_configure_fifo_7
// 1668             set_int_enable(1);
??mpu_configure_fifo_6:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x1
        LCALL   ??set_int_enable?relay
// 1669         else
// 1670             set_int_enable(0);
// 1671         if (sensors) {
        MOV     A,?V0 + 0
        JNZ     ??mpu_configure_fifo_8
// 1672             if (mpu_reset_fifo()) {
// 1673                 st.chip_cfg.fifo_enable = prev;
// 1674                 return -1;
// 1675             }
// 1676         }
// 1677     }
// 1678 
// 1679     return result;
??mpu_configure_fifo_9:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??mpu_configure_fifo_1:
        LJMP    ??Subroutine130_0 & 0xFFFF
??mpu_configure_fifo_7:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
        SJMP    ??mpu_configure_fifo_9
??mpu_configure_fifo_8:
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??mpu_configure_fifo_9
        MOV     A,?V0 + 1
        MOV     DPTR,#st + 11
        MOVX    @DPTR,A
        SJMP    ??mpu_configure_fifo_3
        CFI EndBlock cfiBlock170
// 1680 }
// 1681 
// 1682 /**
// 1683  *  @brief      Get current power state.
// 1684  *  @param[in]  power_on    1 if turned on, 0 if suspended.
// 1685  *  @return     0 if successful.
// 1686  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1687 int mpu_get_power_state(unsigned char *power_on)
mpu_get_power_state:
        CFI Block cfiBlock171 Using cfiCommon0
        CFI Function mpu_get_power_state
        CODE
// 1688 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1689     if (st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??mpu_get_power_state_0
// 1690         power_on[0] = 1;
        MOV     A,#0x1
        SJMP    ??mpu_get_power_state_1
// 1691     else
// 1692         power_on[0] = 0;
??mpu_get_power_state_0:
        CLR     A
??mpu_get_power_state_1:
        SJMP    ??Subroutine111_0
        CFI EndBlock cfiBlock171
// 1693     return 0;
// 1694 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock172 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        CFI EndBlock cfiBlock172
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
        CFI Block cfiBlock173 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOVX    @DPTR,A
        MOV     R2,#0x0
        CFI EndBlock cfiBlock173
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
        CFI Block cfiBlock174 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R3,#0x0
        CFI EndBlock cfiBlock174
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
        CFI Block cfiBlock175 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock175
// 1695 
// 1696 /**
// 1697  *  @brief      Turn specific sensors on/off.
// 1698  *  @e sensors can contain a combination of the following flags:
// 1699  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1700  *  \n INV_XYZ_GYRO
// 1701  *  \n INV_XYZ_ACCEL
// 1702  *  \n INV_XYZ_COMPASS
// 1703  *  @param[in]  sensors    Mask of sensors to wake.
// 1704  *  @return     0 if successful.
// 1705  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1706 int mpu_set_sensors(unsigned char sensors)
mpu_set_sensors:
        CFI Block cfiBlock176 Using cfiCommon0
        CFI Function mpu_set_sensors
        CODE
// 1707 {
        FUNCALL mpu_set_sensors, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, mpu_set_int_latched
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_sensors, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
// 1708     unsigned char data;
// 1709 #ifdef AK89xx_SECONDARY
// 1710     unsigned char user_ctrl;
// 1711 #endif
// 1712 
// 1713     if (sensors & INV_XYZ_GYRO)
        MOV     A,#0x70
        ANL     A,R6
        JZ      ??mpu_set_sensors_0
// 1714         data = INV_CLK_PLL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        SJMP    ??mpu_set_sensors_1
// 1715     else if (sensors)
??mpu_set_sensors_0:
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??mpu_set_sensors_2
// 1716         data = 0;
        CLR     A
        SJMP    ??mpu_set_sensors_1
// 1717     else
// 1718         data = BIT_SLEEP;
??mpu_set_sensors_2:
        MOV     A,#0x40
??mpu_set_sensors_1:
        LCALL   ?Subroutine63 & 0xFFFF
// 1719     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, &data)) {
??CrossCallReturnLabel_102:
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_278:
        JZ      ??mpu_set_sensors_3
// 1720         st.chip_cfg.sensors = 0;
??mpu_set_sensors_4:
        MOV     DPTR,#st + 6
        CLR     A
        MOVX    @DPTR,A
// 1721         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_sensors_5
// 1722     }
// 1723     st.chip_cfg.clk_src = data & ~BIT_SLEEP;
??mpu_set_sensors_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0xbf
        MOV     DPTR,#st + 8
        LCALL   ?Subroutine101 & 0xFFFF
// 1724 
// 1725     data = 0;
??CrossCallReturnLabel_264:
        CLR     A
        MOVX    @DPTR,A
// 1726     if (!(sensors & INV_X_GYRO))
        MOV     A,R6
        MOV     C,0xE0 /* A   */.6
        JC      ??mpu_set_sensors_6
// 1727         data |= BIT_STBY_XG;
        MOV     A,#0x4
        MOVX    @DPTR,A
// 1728     if (!(sensors & INV_Y_GYRO))
??mpu_set_sensors_6:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.5
        JC      ??mpu_set_sensors_7
// 1729         data |= BIT_STBY_YG;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
// 1730     if (!(sensors & INV_Z_GYRO))
??mpu_set_sensors_7:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.4
        JC      ??mpu_set_sensors_8
// 1731         data |= BIT_STBY_ZG;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.0
        MOVX    @DPTR,A
// 1732     if (!(sensors & INV_XYZ_ACCEL))
??mpu_set_sensors_8:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.3
        JC      ??mpu_set_sensors_9
// 1733         data |= BIT_STBY_XYZA;
        MOVX    A,@DPTR
        ORL     A,#0x38
        MOVX    @DPTR,A
// 1734     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_2, 1, &data)) {
??mpu_set_sensors_9:
        ; Setup parameters for call to function I2C_Write
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x13
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_285:
        JNZ     ??mpu_set_sensors_4
// 1735         st.chip_cfg.sensors = 0;
// 1736         return -1;
// 1737     }
// 1738 
// 1739     if (sensors && (sensors != INV_XYZ_ACCEL))
        MOV     A,R6
        JZ      ??mpu_set_sensors_10
        MOV     A,#0x8
        XRL     A,R6
        JZ      ??mpu_set_sensors_10
// 1740         /* Latched interrupts only used in LP accel mode. */
// 1741         mpu_set_int_latched(0);
        ; Setup parameters for call to function mpu_set_int_latched
        MOV     R1,#0x0
        LCALL   ??mpu_set_int_latched?relay
// 1742 
// 1743 #ifdef AK89xx_SECONDARY
// 1744 #ifdef AK89xx_BYPASS
// 1745     if (sensors & INV_XYZ_COMPASS)
// 1746         mpu_set_bypass(1);
// 1747     else
// 1748         mpu_set_bypass(0);
// 1749 #else
// 1750     if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
// 1751         return -1;
// 1752     /* Handle AKM power management. */
// 1753     if (sensors & INV_XYZ_COMPASS) {
// 1754         data = AKM_SINGLE_MEASUREMENT;
// 1755         user_ctrl |= BIT_AUX_IF_EN;
// 1756     } else {
// 1757         data = AKM_POWER_DOWN;
// 1758         user_ctrl &= ~BIT_AUX_IF_EN;
// 1759     }
// 1760     if (st.chip_cfg.dmp_on)
// 1761         user_ctrl |= BIT_DMP_EN;
// 1762     else
// 1763         user_ctrl &= ~BIT_DMP_EN;
// 1764     if (i2c_write(st.hw->addr, st.reg->s1_do, 1, &data))
// 1765         return -1;
// 1766     /* Enable/disable I2C master mode. */
// 1767     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &user_ctrl))
// 1768         return -1;
// 1769 #endif
// 1770 #endif
// 1771 
// 1772     st.chip_cfg.sensors = sensors;
??mpu_set_sensors_10:
        MOV     A,R6
        MOV     DPTR,#st + 6
        MOVX    @DPTR,A
// 1773     st.chip_cfg.lp_accel_mode = 0;
        MOV     DPTR,#st + 15
        CLR     A
        MOVX    @DPTR,A
// 1774     delay_ms(50);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,A
        LCALL   ??delay_ms?relay
// 1775     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock176
??mpu_set_sensors_5:
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 1776 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock177 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        CFI EndBlock cfiBlock177
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
        CFI Block cfiBlock178 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Valid
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock178

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
        CFI Block cfiCond179 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond180 Using cfiCommon0
        CFI (cfiCond180) NoFunction
        CFI (cfiCond180) Conditional ??CrossCallReturnLabel_101
        CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond180) CFA_SP SP+0
        CFI (cfiCond180) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond181 Using cfiCommon0
        CFI (cfiCond181) NoFunction
        CFI (cfiCond181) Conditional ??CrossCallReturnLabel_102
        CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond181) CFA_SP SP+0
        CFI (cfiCond181) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker182 Using cfiCommon1
        CFI (cfiPicker182) NoFunction
        CFI (cfiPicker182) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_261:
        RET
        CFI EndBlock cfiCond179
        CFI EndBlock cfiCond180
        CFI EndBlock cfiCond181
        CFI EndBlock cfiPicker182

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
        CFI Block cfiCond183 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond184 Using cfiCommon0
        CFI (cfiCond184) NoFunction
        CFI (cfiCond184) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_101
        CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond184) CFA_SP SP+0
        CFI (cfiCond184) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond185 Using cfiCommon0
        CFI (cfiCond185) NoFunction
        CFI (cfiCond185) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_102
        CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond185) CFA_SP SP+0
        CFI (cfiCond185) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond186 Using cfiCommon0
        CFI (cfiCond186) NoFunction
        CFI (cfiCond186) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_33
        CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond186) CFA_SP SP+0
        CFI (cfiCond186) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond187 Using cfiCommon0
        CFI (cfiCond187) NoFunction
        CFI (cfiCond187) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_34
        CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond187) CFA_SP SP+0
        CFI (cfiCond187) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond188 Using cfiCommon0
        CFI (cfiCond188) NoFunction
        CFI (cfiCond188) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_193
        CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond188) CFA_SP SP+0
        CFI (cfiCond188) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond189 Using cfiCommon0
        CFI (cfiCond189) NoFunction
        CFI (cfiCond189) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_194
        CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond189) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond189) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond189) CFA_SP SP+0
        CFI (cfiCond189) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond190 Using cfiCommon0
        CFI (cfiCond190) NoFunction
        CFI (cfiCond190) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_252
        CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond190) CFA_SP SP+0
        CFI (cfiCond190) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond191 Using cfiCommon0
        CFI (cfiCond191) NoFunction
        CFI (cfiCond191) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_253
        CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond191) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond191) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond191) CFA_SP SP+0
        CFI (cfiCond191) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond192 Using cfiCommon0
        CFI (cfiCond192) NoFunction
        CFI (cfiCond192) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254
        CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond192) CFA_SP SP+0
        CFI (cfiCond192) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond193 Using cfiCommon0
        CFI (cfiCond193) NoFunction
        CFI (cfiCond193) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_255
        CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond193) CFA_SP SP+0
        CFI (cfiCond193) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond194 Using cfiCommon0
        CFI (cfiCond194) NoFunction
        CFI (cfiCond194) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_256
        CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond194) CFA_SP SP+0
        CFI (cfiCond194) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond195 Using cfiCommon0
        CFI (cfiCond195) NoFunction
        CFI (cfiCond195) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_257
        CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond195) CFA_SP SP+0
        CFI (cfiCond195) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond196 Using cfiCommon0
        CFI (cfiCond196) NoFunction
        CFI (cfiCond196) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_258
        CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond196) CFA_SP SP+0
        CFI (cfiCond196) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker197 Using cfiCommon1
        CFI (cfiPicker197) NoFunction
        CFI (cfiPicker197) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        RET
        CFI EndBlock cfiCond183
        CFI EndBlock cfiCond184
        CFI EndBlock cfiCond185
        CFI EndBlock cfiCond186
        CFI EndBlock cfiCond187
        CFI EndBlock cfiCond188
        CFI EndBlock cfiCond189
        CFI EndBlock cfiCond190
        CFI EndBlock cfiCond191
        CFI EndBlock cfiCond192
        CFI EndBlock cfiCond193
        CFI EndBlock cfiCond194
        CFI EndBlock cfiCond195
        CFI EndBlock cfiCond196
        CFI EndBlock cfiPicker197
// 1777 
// 1778 /**
// 1779  *  @brief      Read the MPU interrupt status registers.
// 1780  *  @param[out] status  Mask of interrupt bits.
// 1781  *  @return     0 if successful.
// 1782  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1783 int mpu_get_int_status(short *status)
mpu_get_int_status:
        CFI Block cfiBlock198 Using cfiCommon0
        CFI Function mpu_get_int_status
        CODE
// 1784 {
        FUNCALL mpu_get_int_status, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1785     unsigned char tmp[2];
// 1786     if (!st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JNZ     ??mpu_get_int_status_0
// 1787         return -1;
??mpu_get_int_status_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??CrossCallReturnLabel_248
// 1788     if (i2c_read(st.hw->addr, st.reg->dmp_int_status, 2, tmp))
??mpu_get_int_status_0:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x10
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_233:
        JNZ     ??mpu_get_int_status_1
// 1789         return -1;
// 1790     status[0] = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL   ?Subroutine64 & 0xFFFF
// 1791     return 0;
??CrossCallReturnLabel_248:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock198
// 1792 }
// 1793 
// 1794 /**
// 1795  *  @brief      Get one packet from the FIFO.
// 1796  *  If @e sensors does not contain a particular sensor, disregard the data
// 1797  *  returned to that pointer.
// 1798  *  \n @e sensors can contain a combination of the following flags:
// 1799  *  \n INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO
// 1800  *  \n INV_XYZ_GYRO
// 1801  *  \n INV_XYZ_ACCEL
// 1802  *  \n If the FIFO has no new data, @e sensors will be zero.
// 1803  *  \n If the FIFO is disabled, @e sensors will be zero and this function will
// 1804  *  return a non-zero error code.
// 1805  *  @param[out] gyro        Gyro data in hardware units.
// 1806  *  @param[out] accel       Accel data in hardware units.
// 1807  *  @param[out] timestamp   Timestamp in milliseconds.
// 1808  *  @param[out] sensors     Mask of sensors read from FIFO.
// 1809  *  @param[out] more        Number of remaining packets.
// 1810  *  @return     0 if successful.
// 1811  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1812 int mpu_read_fifo(short *gyro, short *accel, unsigned long *timestamp,
mpu_read_fifo:
        CFI Block cfiBlock199 Using cfiCommon0
        CFI Function mpu_read_fifo
        CODE
// 1813         unsigned char *sensors, unsigned char *more)
// 1814 {
        FUNCALL mpu_read_fifo, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
        MOV     A,#0x26
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV     A,#0x28
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
// 1815     /* Assumes maximum packet size is gyro (6) + accel (6). */
// 1816     unsigned char data[MAX_PACKET_LENGTH];
// 1817     unsigned char packet_size = 0;
        MOV     ?V0 + 2,#0x0
// 1818     unsigned short fifo_count, index = 0;
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1819 
// 1820     if (st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_0
// 1821         return -1;
??mpu_read_fifo_1:
        MOV     R2,#-0x1
??mpu_read_fifo_2:
        MOV     R3,#-0x1
??mpu_read_fifo_3:
        MOV     A,#0xc
        LJMP    ?Subroutine6 & 0xFFFF
// 1822 
// 1823     sensors[0] = 0;
??mpu_read_fifo_0:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        CLR     A
        MOVX    @DPTR,A
// 1824     if (!st.chip_cfg.sensors)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_1
// 1825         return -1;
// 1826     if (!st.chip_cfg.fifo_enable)
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_1
// 1827         return -1;
// 1828 
// 1829     if (st.chip_cfg.fifo_enable & INV_X_GYRO)
        MOV     C,0xE0 /* A   */.6
        JNC     ??mpu_read_fifo_4
// 1830         packet_size += 2;
        MOV     ?V0 + 2,#0x2
// 1831     if (st.chip_cfg.fifo_enable & INV_Y_GYRO)
??mpu_read_fifo_4:
        MOV     C,0xE0 /* A   */.5
        JNC     ??mpu_read_fifo_5
// 1832         packet_size += 2;
        INC     ?V0 + 2
        INC     ?V0 + 2
// 1833     if (st.chip_cfg.fifo_enable & INV_Z_GYRO)
??mpu_read_fifo_5:
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_6
// 1834         packet_size += 2;
        INC     ?V0 + 2
        INC     ?V0 + 2
// 1835     if (st.chip_cfg.fifo_enable & INV_XYZ_ACCEL)
??mpu_read_fifo_6:
        MOV     C,0xE0 /* A   */.3
        JNC     ??mpu_read_fifo_7
// 1836         packet_size += 6;
        MOV     A,#0x6
        ADD     A,?V0 + 2
        MOV     ?V0 + 2,A
// 1837 
// 1838     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
??mpu_read_fifo_7:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_22:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_236:
        JNZ     ??mpu_read_fifo_1
// 1839         return -1;
// 1840     fifo_count = (data[0] << 8) | data[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_72:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     ?V0 + 0,A
        MOV     A,R1
        MOV     ?V0 + 1,A
// 1841     if (fifo_count < packet_size)
        MOV     DPL,?V0 + 2
        MOV     ?V0 + 6,DPL
        CLR     C
        MOV     A,R2
        SUBB    A,?V0 + 6
        MOV     A,R1
        SUBB    A,#0x0
        JNC     ??mpu_read_fifo_8
// 1842         return 0;
??mpu_read_fifo_9:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??mpu_read_fifo_3
// 1843 //    log_i("FIFO count: %hd\n", fifo_count);
// 1844     if (fifo_count > (st.hw->max_fifo >> 1)) {
??mpu_read_fifo_8:
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_16:
        SUBB    A,?V0 + 0
        MOV     A,R3
        SUBB    A,?V0 + 1
        JNC     ??mpu_read_fifo_10
// 1845         /* FIFO is 50% full, better check overflow bit. */
// 1846         if (i2c_read(st.hw->addr, st.reg->int_status, 1, data))
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x11
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,?V0 + 12
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_56:
        MOV     ?V0 + 13,R3
        MOV     A,R2
        ORL     A,?V0 + 13
        JZ      $+5
        LJMP    ??mpu_read_fifo_1 & 0xFFFF
// 1847             return -1;
// 1848         if (data[0] & BIT_FIFO_OVERFLOW) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_10
// 1849             mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
// 1850             return -2;
        MOV     R2,#-0x2
        LJMP    ??mpu_read_fifo_2 & 0xFFFF
// 1851         }
// 1852     }
// 1853     get_ms((unsigned long*)timestamp);
// 1854 
// 1855     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, packet_size, data))
??mpu_read_fifo_10:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,?V0 + 2
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_0:
        MOV     ?V0 + 13,R3
        MOV     A,R2
        ORL     A,?V0 + 13
        JZ      $+5
        LJMP    ??mpu_read_fifo_1 & 0xFFFF
// 1856         return -1;
// 1857     more[0] = fifo_count / packet_size - 1;
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     R2,?V0 + 6
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOVX    @DPTR,A
// 1858     sensors[0] = 0;
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        CLR     A
        MOVX    @DPTR,A
// 1859 
// 1860     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_XYZ_ACCEL) {
        MOV     A,?V0 + 2
        JNZ     $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        JNC     ??mpu_read_fifo_11
// 1861         accel[0] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_73:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        LCALL   ??Subroutine106_0 & 0xFFFF
// 1862         accel[1] = (data[index+2] << 8) | data[index+3];
??CrossCallReturnLabel_157:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_79:
        LCALL   ??Subroutine106_0 & 0xFFFF
// 1863         accel[2] = (data[index+4] << 8) | data[index+5];
??CrossCallReturnLabel_158:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_80:
        LCALL   ?Subroutine59 & 0xFFFF
// 1864         sensors[0] |= INV_XYZ_ACCEL;
??CrossCallReturnLabel_179:
        SETB    0xE0 /* A   */.3
        MOVX    @DPTR,A
// 1865         index += 6;
        MOV     R6,#0x6
// 1866     }
// 1867     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_X_GYRO) {
        MOV     A,R6
        XRL     A,?V0 + 2
        JNZ     $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
??mpu_read_fifo_11:
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JNC     ??mpu_read_fifo_12
// 1868         gyro[0] = (data[index+0] << 8) | data[index+1];
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,#0x0
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_129:
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1869         sensors[0] |= INV_X_GYRO;
??CrossCallReturnLabel_181:
        SETB    0xE0 /* A   */.6
        MOVX    @DPTR,A
// 1870         index += 2;
        MOV     A,R6
        ADD     A,#0x2
        INC     R6
        INC     R6
        CLR     A
        ADDC    A,#0x0
        MOV     R7,A
// 1871     }
// 1872     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Y_GYRO) {
??mpu_read_fifo_12:
        MOV     A,R6
        XRL     A,?V0 + 2
        JZ      ??mpu_read_fifo_13
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.5
        JNC     ??mpu_read_fifo_13
// 1873         gyro[1] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1874         sensors[0] |= INV_Y_GYRO;
??CrossCallReturnLabel_182:
        SETB    0xE0 /* A   */.5
        MOVX    @DPTR,A
// 1875         index += 2;
        MOV     A,R6
        ADD     A,#0x2
        INC     R6
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 1876     }
// 1877     if ((index != packet_size) && st.chip_cfg.fifo_enable & INV_Z_GYRO) {
??mpu_read_fifo_13:
        MOV     A,R6
        XRL     A,?V0 + 2
        JNZ     $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
        MOV     DPTR,#st + 11
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JC      $+5
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
// 1878         gyro[2] = (data[index+0] << 8) | data[index+1];
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?Subroutine59 & 0xFFFF
// 1879         sensors[0] |= INV_Z_GYRO;
??CrossCallReturnLabel_180:
        SETB    0xE0 /* A   */.4
        MOVX    @DPTR,A
// 1880         index += 2;
        LJMP    ??mpu_read_fifo_9 & 0xFFFF
        CFI EndBlock cfiBlock199
// 1881     }
// 1882 
// 1883     return 0;
// 1884 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
        CFI Block cfiCond200 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_126
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond201 Using cfiCommon0
        CFI (cfiCond201) NoFunction
        CFI (cfiCond201) Conditional ??CrossCallReturnLabel_127
        CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond201) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond201) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond201) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond201) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond201) CFA_SP SP+0
        CFI (cfiCond201) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond202 Using cfiCommon0
        CFI (cfiCond202) NoFunction
        CFI (cfiCond202) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_11
        CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond202) CFA_SP SP+0
        CFI (cfiCond202) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond203 Using cfiCommon0
        CFI (cfiCond203) NoFunction
        CFI (cfiCond203) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_12
        CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond203) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond203) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond203) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond203) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond203) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond203) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond203) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond203) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond203) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond203) CFA_SP SP+0
        CFI (cfiCond203) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond204 Using cfiCommon0
        CFI (cfiCond204) NoFunction
        CFI (cfiCond204) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_13
        CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond204) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond204) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond204) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond204) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond204) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond204) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond204) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond204) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond204) CFA_SP SP+0
        CFI (cfiCond204) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker205 Using cfiCommon1
        CFI (cfiPicker205) NoFunction
        CFI (cfiPicker205) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        RET
        CFI EndBlock cfiCond200
        CFI EndBlock cfiCond201
        CFI EndBlock cfiCond202
        CFI EndBlock cfiCond203
        CFI EndBlock cfiCond204
        CFI EndBlock cfiPicker205

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
        CFI Block cfiCond206 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_179
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond207 Using cfiCommon0
        CFI (cfiCond207) NoFunction
        CFI (cfiCond207) Conditional ??CrossCallReturnLabel_180
        CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond207) CFA_SP SP+0
        CFI (cfiCond207) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker208 Using cfiCommon1
        CFI (cfiPicker208) NoFunction
        CFI (cfiPicker208) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond206
        CFI EndBlock cfiCond207
        CFI EndBlock cfiPicker208
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
        CFI Block cfiCond209 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_181
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond210 Using cfiCommon0
        CFI (cfiCond210) NoFunction
        CFI (cfiCond210) Conditional ??CrossCallReturnLabel_182
        CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond210) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond210) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond210) CFA_SP SP+0
        CFI (cfiCond210) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond211 Using cfiCommon0
        CFI (cfiCond211) NoFunction
        CFI (cfiCond211) Conditional ??CrossCallReturnLabel_179
        CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond211) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond211) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond211) CFA_SP SP+0
        CFI (cfiCond211) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond212 Using cfiCommon0
        CFI (cfiCond212) NoFunction
        CFI (cfiCond212) Conditional ??CrossCallReturnLabel_180
        CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond212) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond212) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond212) CFA_SP SP+0
        CFI (cfiCond212) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker213 Using cfiCommon1
        CFI (cfiPicker213) NoFunction
        CFI (cfiPicker213) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond209
        CFI EndBlock cfiCond210
        CFI EndBlock cfiCond211
        CFI EndBlock cfiCond212
        CFI EndBlock cfiPicker213

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
        CFI Block cfiCond214 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_79
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond215 Using cfiCommon0
        CFI (cfiCond215) NoFunction
        CFI (cfiCond215) Conditional ??CrossCallReturnLabel_80
        CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond215) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond215) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond215) CFA_SP SP+0
        CFI (cfiCond215) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker216 Using cfiCommon1
        CFI (cfiPicker216) NoFunction
        CFI (cfiPicker216) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond214
        CFI EndBlock cfiCond215
        CFI EndBlock cfiPicker216

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
        CFI Block cfiCond217 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_54
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond218 Using cfiCommon0
        CFI (cfiCond218) NoFunction
        CFI (cfiCond218) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond218) CFA_SP SP+0
        CFI (cfiCond218) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker219 Using cfiCommon1
        CFI (cfiPicker219) NoFunction
        CFI (cfiPicker219) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R7
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_130:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond217
        CFI EndBlock cfiCond218
        CFI EndBlock cfiPicker219

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
        CFI Block cfiCond220 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_129
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond221 Using cfiCommon0
        CFI (cfiCond221) NoFunction
        CFI (cfiCond221) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_54
        CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond221) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond221) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond221) CFA_SP SP+0
        CFI (cfiCond221) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond222 Using cfiCommon0
        CFI (cfiCond222) NoFunction
        CFI (cfiCond222) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_55
        CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond222) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond222) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond222) CFA_SP SP+0
        CFI (cfiCond222) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiPicker223 Using cfiCommon1
        CFI (cfiPicker223) NoFunction
        CFI (cfiPicker223) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        RET
        CFI EndBlock cfiCond220
        CFI EndBlock cfiCond221
        CFI EndBlock cfiCond222
        CFI EndBlock cfiPicker223
// 1885 
// 1886 /**
// 1887  *  @brief      Get one unparsed packet from the FIFO.
// 1888  *  This function should be used if the packet is to be parsed elsewhere.
// 1889  *  @param[in]  length  Length of one FIFO packet.
// 1890  *  @param[in]  data    FIFO packet.
// 1891  *  @param[in]  more    Number of remaining packets.
// 1892  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1893 int mpu_read_fifo_stream(unsigned short length, unsigned char *data,
mpu_read_fifo_stream:
        CFI Block cfiBlock224 Using cfiCommon0
        CFI Function mpu_read_fifo_stream
        CODE
// 1894     unsigned char *more)
// 1895 {
        FUNCALL mpu_read_fifo_stream, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_fifo_stream, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
// 1896     unsigned char tmp[2];
// 1897     unsigned short fifo_count;
// 1898     if (!st.chip_cfg.dmp_on)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JNZ     ??mpu_read_fifo_stream_0
// 1899         return -1;
??mpu_read_fifo_stream_1:
        MOV     R2,#-0x1
??mpu_read_fifo_stream_2:
        MOV     R3,#-0x1
        LJMP    ??CrossCallReturnLabel_249 & 0xFFFF
// 1900     if (!st.chip_cfg.sensors)
??mpu_read_fifo_stream_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_fifo_stream_1
// 1901         return -1;
// 1902 
// 1903     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, tmp))
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_18:
        MOV     R2,A
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_43:
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JNZ     ??mpu_read_fifo_stream_1
// 1904         return -1;
// 1905     fifo_count = (tmp[0] << 8) | tmp[1];
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_74:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1906     if (fifo_count < length) {
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 0
        MOV     A,R7
        SUBB    A,?V0 + 1
        JNC     ??mpu_read_fifo_stream_3
// 1907         more[0] = 0;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        CLR     A
        MOVX    @DPTR,A
        SJMP    ??mpu_read_fifo_stream_1
// 1908         return -1;
// 1909     }
// 1910     if (fifo_count > (st.hw->max_fifo >> 1)) {
??mpu_read_fifo_stream_3:
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_17:
        SUBB    A,R6
        MOV     A,R3
        SUBB    A,R7
        JNC     ??mpu_read_fifo_stream_4
// 1911         /* FIFO is 50% full, better check overflow bit. */
// 1912         if (i2c_read(st.hw->addr, st.reg->int_status, 1, tmp))
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x11
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,?V0 + 6
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_57:
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JNZ     ??mpu_read_fifo_stream_1
// 1913             return -1;
// 1914         if (tmp[0] & BIT_FIFO_OVERFLOW) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        JNC     ??mpu_read_fifo_stream_4
// 1915             mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        LCALL   ??mpu_reset_fifo?relay
// 1916             return -2;
        MOV     R2,#-0x2
        LJMP    ??mpu_read_fifo_stream_2 & 0xFFFF
// 1917         }
// 1918     }
// 1919 
// 1920     if (i2c_read(st.hw->addr, st.reg->fifo_r_w, length, data))
??mpu_read_fifo_stream_4:
        ; Setup parameters for call to function I2C_Read
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R3,?V0 + 0
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_1:
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      $+5
        LJMP    ??mpu_read_fifo_stream_1 & 0xFFFF
// 1921         return -1;
// 1922     more[0] = fifo_count / length - 1;
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        DEC     A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine131_0 & 0xFFFF
// 1923     return 0;
??CrossCallReturnLabel_249:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock224
// 1924 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
        CFI Block cfiCond225 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_56
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond226 Using cfiCommon0
        CFI (cfiCond226) NoFunction
        CFI (cfiCond226) Conditional ??CrossCallReturnLabel_57
        CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond226) CFA_SP SP+0
        CFI (cfiCond226) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker227 Using cfiCommon1
        CFI (cfiPicker227) NoFunction
        CFI (cfiPicker227) Picker
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL   ??I2C_Read?relay
        RET
        CFI EndBlock cfiCond225
        CFI EndBlock cfiCond226
        CFI EndBlock cfiPicker227

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
        CFI Block cfiCond228 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond229 Using cfiCommon0
        CFI (cfiCond229) NoFunction
        CFI (cfiCond229) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond229) CFA_SP SP+0
        CFI (cfiCond229) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker230 Using cfiCommon1
        CFI (cfiPicker230) NoFunction
        CFI (cfiPicker230) Picker
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_241:
        RET
        CFI EndBlock cfiCond228
        CFI EndBlock cfiCond229
        CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond231 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond232 Using cfiCommon0
        CFI (cfiCond232) NoFunction
        CFI (cfiCond232) Conditional ??CrossCallReturnLabel_17
        CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond232) CFA_SP SP+0
        CFI (cfiCond232) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker233 Using cfiCommon1
        CFI (cfiPicker233) NoFunction
        CFI (cfiPicker233) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_138:
        CLR     C
        RET
        CFI EndBlock cfiCond231
        CFI EndBlock cfiCond232
        CFI EndBlock cfiPicker233

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
        CFI Block cfiCond234 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond235 Using cfiCommon0
        CFI (cfiCond235) NoFunction
        CFI (cfiCond235) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_16
        CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond235) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond235) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond235) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond235) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond235) CFA_SP SP+0
        CFI (cfiCond235) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond236 Using cfiCommon0
        CFI (cfiCond236) NoFunction
        CFI (cfiCond236) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_17
        CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond236) CFA_SP SP+0
        CFI (cfiCond236) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker237 Using cfiCommon1
        CFI (cfiPicker237) NoFunction
        CFI (cfiPicker237) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        CLR     C
        RRC     A
        MOV     R3,A
        MOV     A,R2
        RRC     A
        RET
        CFI EndBlock cfiCond234
        CFI EndBlock cfiCond235
        CFI EndBlock cfiCond236
        CFI EndBlock cfiPicker237

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiCond238 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond239 Using cfiCommon0
        CFI (cfiCond239) NoFunction
        CFI (cfiCond239) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond239) CFA_SP SP+0
        CFI (cfiCond239) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond240 Using cfiCommon0
        CFI (cfiCond240) NoFunction
        CFI (cfiCond240) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond240) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond240) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond240) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond240) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond240) CFA_SP SP+0
        CFI (cfiCond240) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker241 Using cfiCommon1
        CFI (cfiPicker241) NoFunction
        CFI (cfiPicker241) Picker
        MOV     DPTR,#st
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_120:
        MOV     R2,A
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_242:
        RET
        CFI EndBlock cfiCond238
        CFI EndBlock cfiCond239
        CFI EndBlock cfiCond240
        CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
        CFI Block cfiCond242 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond243 Using cfiCommon0
        CFI (cfiCond243) NoFunction
        CFI (cfiCond243) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_43
        CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond243) CFA_SP SP+0
        CFI (cfiCond243) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond244 Using cfiCommon0
        CFI (cfiCond244) NoFunction
        CFI (cfiCond244) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_0
        CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond244) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond244) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond244) CFA_SP SP+0
        CFI (cfiCond244) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond245 Using cfiCommon0
        CFI (cfiCond245) NoFunction
        CFI (cfiCond245) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_1
        CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond245) CFA_SP SP+0
        CFI (cfiCond245) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond246 Using cfiCommon0
        CFI (cfiCond246) NoFunction
        CFI (cfiCond246) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_2
        CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond246) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond246) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond246) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond246) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond246) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond246) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond246) CFA_SP SP+0
        CFI (cfiCond246) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond247 Using cfiCommon0
        CFI (cfiCond247) NoFunction
        CFI (cfiCond247) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_229
        CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond247) CFA_SP SP+0
        CFI (cfiCond247) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond248 Using cfiCommon0
        CFI (cfiCond248) NoFunction
        CFI (cfiCond248) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_230
        CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond248) CFA_SP SP+0
        CFI (cfiCond248) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond249 Using cfiCommon0
        CFI (cfiCond249) NoFunction
        CFI (cfiCond249) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_231
        CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond249) CFA_SP SP+0
        CFI (cfiCond249) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond250 Using cfiCommon0
        CFI (cfiCond250) NoFunction
        CFI (cfiCond250) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_232
        CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond250) CFA_SP SP+0
        CFI (cfiCond250) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond251 Using cfiCommon0
        CFI (cfiCond251) NoFunction
        CFI (cfiCond251) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_233
        CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond251) CFA_SP SP+0
        CFI (cfiCond251) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond252 Using cfiCommon0
        CFI (cfiCond252) NoFunction
        CFI (cfiCond252) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_234
        CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond252) CFA_SP SP+0
        CFI (cfiCond252) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond253 Using cfiCommon0
        CFI (cfiCond253) NoFunction
        CFI (cfiCond253) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_235
        CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond253) CFA_SP SP+0
        CFI (cfiCond253) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond254 Using cfiCommon0
        CFI (cfiCond254) NoFunction
        CFI (cfiCond254) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_236
        CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond254) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond254) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond254) CFA_SP SP+0
        CFI (cfiCond254) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond255 Using cfiCommon0
        CFI (cfiCond255) NoFunction
        CFI (cfiCond255) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_237
        CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond255) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond255) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond255) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond255) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond255) CFA_SP SP+0
        CFI (cfiCond255) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond256 Using cfiCommon0
        CFI (cfiCond256) NoFunction
        CFI (cfiCond256) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
        CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond256) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond256) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond256) CFA_SP SP+0
        CFI (cfiCond256) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond257 Using cfiCommon0
        CFI (cfiCond257) NoFunction
        CFI (cfiCond257) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
        CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond257) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond257) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond257) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond257) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond257) CFA_SP SP+0
        CFI (cfiCond257) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond258 Using cfiCommon0
        CFI (cfiCond258) NoFunction
        CFI (cfiCond258) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_240
        CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond258) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond258) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond258) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond258) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond258) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond258) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond258) CFA_SP SP+0
        CFI (cfiCond258) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker259 Using cfiCommon1
        CFI (cfiPicker259) NoFunction
        CFI (cfiPicker259) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_322:
        LCALL   ??I2C_Read?relay
        RET
        CFI EndBlock cfiCond242
        CFI EndBlock cfiCond243
        CFI EndBlock cfiCond244
        CFI EndBlock cfiCond245
        CFI EndBlock cfiCond246
        CFI EndBlock cfiCond247
        CFI EndBlock cfiCond248
        CFI EndBlock cfiCond249
        CFI EndBlock cfiCond250
        CFI EndBlock cfiCond251
        CFI EndBlock cfiCond252
        CFI EndBlock cfiCond253
        CFI EndBlock cfiCond254
        CFI EndBlock cfiCond255
        CFI EndBlock cfiCond256
        CFI EndBlock cfiCond257
        CFI EndBlock cfiCond258
        CFI EndBlock cfiPicker259
// 1925 
// 1926 /**
// 1927  *  @brief      Set device to bypass mode.
// 1928  *  @param[in]  bypass_on   1 to enable bypass mode.
// 1929  *  @return     0 if successful.
// 1930  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1931 int mpu_set_bypass(unsigned char bypass_on)
mpu_set_bypass:
        CFI Block cfiBlock260 Using cfiCommon0
        CFI Function mpu_set_bypass
        CODE
// 1932 {
        FUNCALL mpu_set_bypass, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_bypass, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
// 1933     unsigned char tmp;
// 1934 
// 1935     if (st.chip_cfg.bypass_mode == bypass_on)
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     $+5
        LJMP    ??mpu_set_bypass_0 & 0xFFFF
// 1936         return 0;
// 1937 
// 1938     if (bypass_on) {
        MOV     DPTR,#st + 2
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_196:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_172:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        JZ      ??mpu_set_bypass_1
// 1939         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
        ; Setup parameters for call to function I2C_Read
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_107:
        JZ      ??mpu_set_bypass_2
// 1940             return -1;
??mpu_set_bypass_3:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_set_bypass_4 & 0xFFFF
// 1941         tmp &= ~BIT_AUX_IF_EN;
??mpu_set_bypass_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.5
        LCALL   ??Subroutine107_0 & 0xFFFF
// 1942         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
??CrossCallReturnLabel_169:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_305:
        JNZ     ??mpu_set_bypass_3
// 1943             return -1;
// 1944         delay_ms(3);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x3
        LCALL   ?Subroutine66 & 0xFFFF
// 1945         tmp = BIT_BYPASS_EN;
??CrossCallReturnLabel_105:
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1946         if (st.chip_cfg.active_low_int)
        MOV     DPTR,#st + 27
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_5
// 1947             tmp |= BIT_ACTL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        MOVX    @DPTR,A
// 1948         if (st.chip_cfg.latched_int)
??mpu_set_bypass_5:
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_6
// 1949             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ORL     A,#0x30
        MOVX    @DPTR,A
// 1950         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_bypass_6:
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine137_0 & 0xFFFF
// 1951             return -1;
// 1952     } else {
??CrossCallReturnLabel_286:
        JNZ     ??mpu_set_bypass_3
        SJMP    ??mpu_set_bypass_7
// 1953         /* Enable I2C master mode if compass is being used. */
// 1954         if (i2c_read(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
??mpu_set_bypass_1:
        ; Setup parameters for call to function I2C_Read
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_108:
        JNZ     ??mpu_set_bypass_3
// 1955             return -1;
// 1956         if (st.chip_cfg.sensors & INV_XYZ_COMPASS)
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JNC     ??mpu_set_bypass_8
// 1957             tmp |= BIT_AUX_IF_EN;
        SETB    0xE0 /* A   */.5
        SJMP    ??mpu_set_bypass_9
// 1958         else
// 1959             tmp &= ~BIT_AUX_IF_EN;
??mpu_set_bypass_8:
        CLR     0xE0 /* A   */.5
??mpu_set_bypass_9:
        LCALL   ??Subroutine107_0 & 0xFFFF
// 1960         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, &tmp))
??CrossCallReturnLabel_170:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_306:
        JNZ     ??mpu_set_bypass_3
// 1961             return -1;
// 1962         delay_ms(3);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x3
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 1963         if (st.chip_cfg.active_low_int)
        MOV     DPTR,#st + 27
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_184:
        JZ      ??mpu_set_bypass_10
// 1964             tmp = BIT_ACTL;
        MOV     A,#-0x80
        SJMP    ??mpu_set_bypass_11
// 1965         else
// 1966             tmp = 0;
??mpu_set_bypass_10:
        CLR     A
??mpu_set_bypass_11:
        MOVX    @DPTR,A
// 1967         if (st.chip_cfg.latched_int)
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        JZ      ??mpu_set_bypass_12
// 1968             tmp |= BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ORL     A,#0x30
        MOVX    @DPTR,A
// 1969         if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_bypass_12:
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine137_0 & 0xFFFF
// 1970             return -1;
// 1971     }
??CrossCallReturnLabel_287:
        JZ      $+5
        LJMP    ??mpu_set_bypass_3 & 0xFFFF
// 1972     st.chip_cfg.bypass_mode = bypass_on;
??mpu_set_bypass_7:
        MOV     A,R6
        MOV     DPTR,#st + 13
        MOVX    @DPTR,A
// 1973     return 0;
??mpu_set_bypass_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_bypass_4:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock260
// 1974 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
        CFI Block cfiCond261 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_106
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond262 Using cfiCommon0
        CFI (cfiCond262) NoFunction
        CFI (cfiCond262) Conditional ??CrossCallReturnLabel_107
        CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond262) CFA_SP SP+0
        CFI (cfiCond262) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond263 Using cfiCommon0
        CFI (cfiCond263) NoFunction
        CFI (cfiCond263) Conditional ??CrossCallReturnLabel_108
        CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond263) CFA_SP SP+0
        CFI (cfiCond263) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker264 Using cfiCommon1
        CFI (cfiPicker264) NoFunction
        CFI (cfiPicker264) Picker
        LCALL   ??I2C_Read?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond261
        CFI EndBlock cfiCond262
        CFI EndBlock cfiCond263
        CFI EndBlock cfiPicker264

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond265 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_186
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond266 Using cfiCommon0
        CFI (cfiCond266) NoFunction
        CFI (cfiCond266) Conditional ??CrossCallReturnLabel_187
        CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond266) CFA_SP SP+0
        CFI (cfiCond266) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker267 Using cfiCommon1
        CFI (cfiPicker267) NoFunction
        CFI (cfiPicker267) Picker
        MOV     DPTR,#st + 12
        CFI EndBlock cfiCond265
        CFI EndBlock cfiCond266
        CFI EndBlock cfiPicker267
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
        CFI Block cfiCond268 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_183
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond269 Using cfiCommon0
        CFI (cfiCond269) NoFunction
        CFI (cfiCond269) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond269) CFA_SP SP+0
        CFI (cfiCond269) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond270 Using cfiCommon0
        CFI (cfiCond270) NoFunction
        CFI (cfiCond270) Conditional ??CrossCallReturnLabel_185
        CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond270) CFA_SP SP+0
        CFI (cfiCond270) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond271 Using cfiCommon0
        CFI (cfiCond271) NoFunction
        CFI (cfiCond271) Conditional ??CrossCallReturnLabel_186
        CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond271) CFA_SP SP+0
        CFI (cfiCond271) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond272 Using cfiCommon0
        CFI (cfiCond272) NoFunction
        CFI (cfiCond272) Conditional ??CrossCallReturnLabel_187
        CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond272) CFA_SP SP+0
        CFI (cfiCond272) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker273 Using cfiCommon1
        CFI (cfiPicker273) NoFunction
        CFI (cfiPicker273) Picker
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond268
        CFI EndBlock cfiCond269
        CFI EndBlock cfiCond270
        CFI EndBlock cfiCond271
        CFI EndBlock cfiCond272
        CFI EndBlock cfiPicker273
// 1975 
// 1976 /**
// 1977  *  @brief      Set interrupt level.
// 1978  *  @param[in]  active_low  1 for active low, 0 for active high.
// 1979  *  @return     0 if successful.
// 1980  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1981 int mpu_set_int_level(unsigned char active_low)
mpu_set_int_level:
        CFI Block cfiBlock274 Using cfiCommon0
        CFI Function mpu_set_int_level
        CODE
// 1982 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1983     st.chip_cfg.active_low_int = active_low;
        MOV     A,R1
        MOV     DPTR,#st + 27
        LJMP    ??Subroutine111_0 & 0xFFFF
        CFI EndBlock cfiBlock274
// 1984     return 0;
// 1985 }
// 1986 
// 1987 /**
// 1988  *  @brief      Enable latched interrupts.
// 1989  *  Any MPU register will clear the interrupt.
// 1990  *  @param[in]  enable  1 to enable, 0 to disable.
// 1991  *  @return     0 if successful.
// 1992  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1993 int mpu_set_int_latched(unsigned char enable)
mpu_set_int_latched:
        CFI Block cfiBlock275 Using cfiCommon0
        CFI Function mpu_set_int_latched
        CODE
// 1994 {
        FUNCALL mpu_set_int_latched, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R6,A
// 1995     unsigned char tmp;
// 1996     if (st.chip_cfg.latched_int == enable)
        MOV     DPTR,#st + 28
        MOVX    A,@DPTR
        XRL     A,R6
        JZ      ??mpu_set_int_latched_0
// 1997         return 0;
// 1998 
// 1999     if (enable)
        MOV     A,R6
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JZ      ??mpu_set_int_latched_1
// 2000         tmp = BIT_LATCH_EN | BIT_ANY_RD_CLR;
        MOV     A,#0x30
        SJMP    ??mpu_set_int_latched_2
// 2001     else
// 2002         tmp = 0;
??mpu_set_int_latched_1:
        CLR     A
??mpu_set_int_latched_2:
        MOVX    @DPTR,A
// 2003     if (st.chip_cfg.bypass_mode)
        MOV     DPTR,#st + 13
        MOVX    A,@DPTR
        JZ      ??mpu_set_int_latched_3
// 2004         tmp |= BIT_BYPASS_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
// 2005     if (st.chip_cfg.active_low_int)
??mpu_set_int_latched_3:
        MOV     DPTR,#st + 27
        MOVX    A,@DPTR
        JZ      ??mpu_set_int_latched_4
// 2006         tmp |= BIT_ACTL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
// 2007     if (i2c_write(st.hw->addr, st.reg->int_pin_cfg, 1, &tmp))
??mpu_set_int_latched_4:
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x14
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_288:
        JZ      ??mpu_set_int_latched_5
// 2008         return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_int_latched_6
// 2009     st.chip_cfg.latched_int = enable;
??mpu_set_int_latched_5:
        MOV     A,R6
        MOV     DPTR,#st + 28
        MOVX    @DPTR,A
// 2010     return 0;
??mpu_set_int_latched_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_int_latched_6:
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock275
// 2011 }
// 2012 
// 2013 #ifdef MPU6050

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2014 static int get_accel_prod_shift(float *st_shift)
get_accel_prod_shift:
        CFI Block cfiBlock276 Using cfiCommon0
        CFI Function get_accel_prod_shift
        CODE
// 2015 {
        FUNCALL get_accel_prod_shift, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 2016     unsigned char tmp[4], shift_code[3], ii;
// 2017 
// 2018     if (i2c_read(st.hw->addr, 0x0D, 4, tmp))
        ; Setup parameters for call to function I2C_Read
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x4
        MOV     R2,#0xd
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_239:
        JZ      ??get_accel_prod_shift_0
// 2019         return 0x07;
        MOV     R2,#0x7
        LJMP    ??get_accel_prod_shift_1 & 0xFFFF
// 2020 
// 2021     shift_code[0] = ((tmp[0] & 0xE0) >> 3) | ((tmp[3] & 0x30) >> 4);
??get_accel_prod_shift_0:
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x3
        MOV     R0,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_35:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2022     shift_code[1] = ((tmp[1] & 0xE0) >> 3) | ((tmp[3] & 0x0C) >> 2);
        MOV     A,R1
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        MOV     R0,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_36:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2023     shift_code[2] = ((tmp[2] & 0xE0) >> 3) | (tmp[3] & 0x03);
        MOV     A,#0x3
        ANL     A,R1
        MOV     R0,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_37:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2024     for (ii = 0; ii < 3; ii++) {
        MOV     R6,#0x0
// 2025         if (!shift_code[ii]) {
??get_accel_prod_shift_2:
        MOV     DPL,R6
        MOV     R2,DPL
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 12
        ADD     A,?V0 + 0
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 13
        ADDC    A,?V0 + 1
        MOV     ?V0 + 5,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R2
        MOV     ?V0 + 6,A
        MOV     A,DPH
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        MOV     DPL,?V0 + 6
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??get_accel_prod_shift_3
// 2026             st_shift[ii] = 0.f;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?XSTORE_R2345
// 2027             continue;
        SJMP    ??get_accel_prod_shift_4
// 2028         }
// 2029         /* Equivalent to..
// 2030          * st_shift[ii] = 0.34f * powf(0.92f/0.34f, (shift_code[ii]-1) / 30.f)
// 2031          */
// 2032         st_shift[ii] = 0.34f;
??get_accel_prod_shift_3:
        MOV     DPTR,#__Constant_3eae147b
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?XSTORE_R2345
        SJMP    ??get_accel_prod_shift_5
// 2033         while (--shift_code[ii])
// 2034             st_shift[ii] *= 1.034f;
??get_accel_prod_shift_6:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_3f845a1d
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
??get_accel_prod_shift_5:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        MOVX    A,@DPTR
        DEC     A
        MOVX    @DPTR,A
        JNZ     ??get_accel_prod_shift_6
// 2035     }
??get_accel_prod_shift_4:
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x3
        JNC     $+5
        LJMP    ??get_accel_prod_shift_2 & 0xFFFF
// 2036     return 0;
        MOV     R2,#0x0
??get_accel_prod_shift_1:
        MOV     R3,#0x0
        MOV     A,#0x7
        CFI EndBlock cfiBlock276
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2037 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiBlock277 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 29)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Valid
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock277

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond278 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_35
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond279 Using cfiCommon0
        CFI (cfiCond279) NoFunction
        CFI (cfiCond279) Conditional ??CrossCallReturnLabel_36
        CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond279) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond279) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond279) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond279) CFA_SP SP+0
        CFI (cfiCond279) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond280 Using cfiCommon0
        CFI (cfiCond280) NoFunction
        CFI (cfiCond280) Conditional ??CrossCallReturnLabel_37
        CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond280) CFA_SP SP+0
        CFI (cfiCond280) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker281 Using cfiCommon1
        CFI (cfiPicker281) NoFunction
        CFI (cfiPicker281) Picker
        LCALL   ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_176:
        ANL     A,#0x1c
        ORL     A,R0
        RET
        CFI EndBlock cfiCond278
        CFI EndBlock cfiCond279
        CFI EndBlock cfiCond280
        CFI EndBlock cfiPicker281
// 2038 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2039 static int accel_self_test(long *bias_regular, long *bias_st)
accel_self_test:
        CFI Block cfiBlock282 Using cfiCommon0
        CFI Function accel_self_test
        CODE
// 2040 {
        FUNCALL accel_self_test, get_accel_prod_shift
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL accel_self_test, labs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine62 & 0xFFFF
// 2041     int jj, result = 0;
// 2042     float st_shift[3], st_shift_cust, st_shift_var;
// 2043 
// 2044     get_accel_prod_shift(st_shift);
??CrossCallReturnLabel_98:
        ; Setup parameters for call to function get_accel_prod_shift
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??get_accel_prod_shift?relay
// 2045     for(jj = 0; jj < 3; jj++) {
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2046         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
??accel_self_test_0:
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,?V0 + 3
        ; Setup parameters for call to function labs
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 1
        MOV     DPL,R0
        MOV     DPH,A
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     A,?V0 + 14
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,?V0 + 15
        ADDC    A,?V0 + 1
        MOV     DPH,A
        MOV     R0,#?V0 + 4
        LCALL   ?L_SUB_X
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_37800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
// 2047         if (st_shift[jj]) {
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,DPL
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,?V0 + 1
        MOV     DPH,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_EQ
        JZ      ??accel_self_test_1
// 2048             st_shift_var = st_shift_cust / st_shift[jj] - 1.f;
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_bf800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
// 2049             if (fabs(st_shift_var) > test.max_accel_var)
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??accel_self_test_2
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        SJMP    ??accel_self_test_3
??accel_self_test_2:
        MOV     A,?V0 + 7
        CPL     0xE0 /* A   */.7
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,A
??accel_self_test_3:
        MOV     DPTR,#__Constant_3e0f5c2a
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_GE
        JNC     ??accel_self_test_4
// 2050                 result |= 1 << jj;
??accel_self_test_5:
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine72 & 0xFFFF
// 2051         } else if ((st_shift_cust < test.min_g) ||
??CrossCallReturnLabel_116:
        SJMP    ??accel_self_test_4
// 2052             (st_shift_cust > test.max_g))
??accel_self_test_1:
        MOV     DPTR,#__Constant_3e99999a
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JC      ??accel_self_test_5
        MOV     DPTR,#__Constant_3f733334
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JC      ??accel_self_test_5
// 2053             result |= 1 << jj;
// 2054     }
??accel_self_test_4:
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_83:
        JNC     $+5
        LJMP    ??accel_self_test_0 & 0xFFFF
// 2055 
// 2056     return result;
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        MOV     A,#0xe
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock282
// 2057 }
// 2058 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2059 static int gyro_self_test(long *bias_regular, long *bias_st)
gyro_self_test:
        CFI Block cfiBlock283 Using cfiCommon0
        CFI Function gyro_self_test
        CODE
// 2060 {
        FUNCALL gyro_self_test, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL gyro_self_test, labs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
// 2061     int jj, result = 0;
// 2062     unsigned char tmp[3];
// 2063     float st_shift, st_shift_cust, st_shift_var;
// 2064 
// 2065     if (i2c_read(st.hw->addr, 0x0D, 3, tmp))
??CrossCallReturnLabel_99:
        ; Setup parameters for call to function I2C_Read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x3
        MOV     R2,#0xd
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_240:
        JZ      ??gyro_self_test_0
// 2066         return 0x07;
        MOV     R2,#0x7
        MOV     R3,#0x0
        LJMP    ??gyro_self_test_1 & 0xFFFF
// 2067 
// 2068     tmp[0] &= 0x1F;
??gyro_self_test_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 2069     tmp[1] &= 0x1F;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 2070     tmp[2] &= 0x1F;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x1f
        MOVX    @DPTR,A
// 2071 
// 2072     for (jj = 0; jj < 3; jj++) {
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2073         st_shift_cust = labs(bias_regular[jj] - bias_st[jj]) / 65536.f;
??gyro_self_test_2:
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        ; Setup parameters for call to function labs
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOV     DPL,R0
        MOV     DPH,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,?V0 + 14
        ADD     A,R2
        MOV     DPL,A
        MOV     A,?V0 + 15
        ADDC    A,R3
        MOV     DPH,A
        MOV     R0,#?V0 + 0
        LCALL   ?L_SUB_X
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_37800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_MUL
// 2074         if (tmp[jj]) {
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R6
        MOV     R2,A
        MOV     A,DPH
        ADDC    A,R7
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNZ     $+5
        LJMP    ??gyro_self_test_3 & 0xFFFF
// 2075             st_shift = 3275.f / test.gyro_sens;
        MOV     DPTR,#__Constant_41c80000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        SJMP    ??gyro_self_test_4
// 2076             while (--tmp[jj])
// 2077                 st_shift *= 1.046f;
??gyro_self_test_5:
        MOV     DPTR,#__Constant_3f85e354
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
??gyro_self_test_4:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        DEC     A
        MOVX    @DPTR,A
        JNZ     ??gyro_self_test_5
// 2078             st_shift_var = st_shift_cust / st_shift - 1.f;
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_bf800000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_ADD
// 2079             if (fabs(st_shift_var) > test.max_gyro_var)
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??gyro_self_test_6
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        SJMP    ??gyro_self_test_7
??gyro_self_test_6:
        MOV     A,?V0 + 7
        CPL     0xE0 /* A   */.7
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,A
??gyro_self_test_7:
        MOV     DPTR,#__Constant_3e0f5c2a
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_GE
        JNC     ??gyro_self_test_8
// 2080                 result |= 1 << jj;
??gyro_self_test_9:
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine72 & 0xFFFF
// 2081         } else if ((st_shift_cust < test.min_dps) ||
??CrossCallReturnLabel_117:
        SJMP    ??gyro_self_test_8
// 2082             (st_shift_cust > test.max_dps))
??gyro_self_test_3:
        MOV     DPTR,#__Constant_41200000
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JC      ??gyro_self_test_9
        MOV     DPTR,#__Constant_42d20001
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JC      ??gyro_self_test_9
// 2083             result |= 1 << jj;
// 2084     }
??gyro_self_test_8:
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_84:
        JNC     $+5
        LJMP    ??gyro_self_test_2 & 0xFFFF
// 2085     return result;
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
??gyro_self_test_1:
        MOV     A,#0x5
        CFI EndBlock cfiBlock283
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 2086 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiBlock284 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Valid
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock284

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
        CFI Block cfiCond285 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_116
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond286 Using cfiCommon0
        CFI (cfiCond286) NoFunction
        CFI (cfiCond286) Conditional ??CrossCallReturnLabel_117
        CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond286) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond286) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond286) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond286) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond286) CFA_SP SP+0
        CFI (cfiCond286) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker287 Using cfiCommon1
        CFI (cfiPicker287) NoFunction
        CFI (cfiPicker287) Picker
        MOV     A,?V0 + 0
        ORL     A,?V0 + 12
        MOV     ?V0 + 12,A
        MOV     A,?V0 + 1
        ORL     A,?V0 + 13
        MOV     ?V0 + 13,A
        RET
        CFI EndBlock cfiCond285
        CFI EndBlock cfiCond286
        CFI EndBlock cfiPicker287

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
        CFI Block cfiCond288 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_114
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond289 Using cfiCommon0
        CFI (cfiCond289) NoFunction
        CFI (cfiCond289) Conditional ??CrossCallReturnLabel_115
        CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond289) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond289) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond289) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond289) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond289) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond289) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond289) CFA_SP SP+0
        CFI (cfiCond289) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker290 Using cfiCommon1
        CFI (cfiPicker290) NoFunction
        CFI (cfiPicker290) Picker
        LCALL   ??labs?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
        MOV     R0,#?V0 + 4
        RET
        CFI EndBlock cfiCond288
        CFI EndBlock cfiCond289
        CFI EndBlock cfiPicker290

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
        CFI Block cfiCond291 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_98
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond292 Using cfiCommon0
        CFI (cfiCond292) NoFunction
        CFI (cfiCond292) Conditional ??CrossCallReturnLabel_99
        CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond292) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond292) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond292) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond292) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond292) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond292) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond292) CFA_SP SP+0
        CFI (cfiCond292) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker293 Using cfiCommon1
        CFI (cfiPicker293) NoFunction
        CFI (cfiPicker293) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     ?V0 + 14,R4
        MOV     ?V0 + 15,R5
        MOV     ?V0 + 12,#0x0
        MOV     ?V0 + 13,#0x0
        RET
        CFI EndBlock cfiCond291
        CFI EndBlock cfiCond292
        CFI EndBlock cfiPicker293

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
        CFI Block cfiCond294 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond295 Using cfiCommon0
        CFI (cfiCond295) NoFunction
        CFI (cfiCond295) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond295) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond295) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond295) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond295) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond295) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond295) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond295) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond295) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond295) CFA_SP SP+0
        CFI (cfiCond295) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiPicker296 Using cfiCommon1
        CFI (cfiPicker296) NoFunction
        CFI (cfiPicker296) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_149:
        SUBB    A,#0x3
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_245:
        RET
        CFI EndBlock cfiCond294
        CFI EndBlock cfiCond295
        CFI EndBlock cfiPicker296
// 2087 
// 2088 #ifdef AK89xx_SECONDARY
// 2089 static int compass_self_test(void)
// 2090 {
// 2091     unsigned char tmp[6];
// 2092     unsigned char tries = 10;
// 2093     int result = 0x07;
// 2094     short data;
// 2095 
// 2096     mpu_set_bypass(1);
// 2097 
// 2098     tmp[0] = AKM_POWER_DOWN;
// 2099     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
// 2100         return 0x07;
// 2101     tmp[0] = AKM_BIT_SELF_TEST;
// 2102     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp))
// 2103         goto AKM_restore;
// 2104     tmp[0] = AKM_MODE_SELF_TEST;
// 2105     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp))
// 2106         goto AKM_restore;
// 2107 
// 2108     do {
// 2109         delay_ms(10);
// 2110         if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 1, tmp))
// 2111             goto AKM_restore;
// 2112         if (tmp[0] & AKM_DATA_READY)
// 2113             break;
// 2114     } while (tries--);
// 2115     if (!(tmp[0] & AKM_DATA_READY))
// 2116         goto AKM_restore;
// 2117 
// 2118     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_HXL, 6, tmp))
// 2119         goto AKM_restore;
// 2120 
// 2121     result = 0;
// 2122     data = (short)(tmp[1] << 8) | tmp[0];
// 2123     if ((data > 100) || (data < -100))
// 2124         result |= 0x01;
// 2125     data = (short)(tmp[3] << 8) | tmp[2];
// 2126     if ((data > 100) || (data < -100))
// 2127         result |= 0x02;
// 2128     data = (short)(tmp[5] << 8) | tmp[4];
// 2129     if ((data > -300) || (data < -1000))
// 2130         result |= 0x04;
// 2131 
// 2132 AKM_restore:
// 2133     tmp[0] = 0 | SUPPORTS_AK89xx_HIGH_SENS;
// 2134     i2c_write(st.chip_cfg.compass_addr, AKM_REG_ASTC, 1, tmp);
// 2135     tmp[0] = SUPPORTS_AK89xx_HIGH_SENS;
// 2136     i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp);
// 2137     mpu_set_bypass(0);
// 2138     return result;
// 2139 }
// 2140 #endif
// 2141 #endif
// 2142 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2143 static int get_st_biases(long *gyro, long *accel, unsigned char hw_test)
get_st_biases:
        CFI Block cfiBlock297 Using cfiCommon0
        CFI Function get_st_biases
        CODE
// 2144 {
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_st_biases, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 55, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 55, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 31
        MOV     A,#-0x1f
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 55)
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2145     unsigned char data[MAX_PACKET_LENGTH];
// 2146     unsigned char packet_count, ii;
// 2147     unsigned short fifo_count;
// 2148     
// 2149 
// 2150     data[0] = 0x01;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2151     data[1] = 0;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 2152     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
        ; Setup parameters for call to function I2C_Write
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine135_0 & 0xFFFF
??CrossCallReturnLabel_275:
        JZ      ??get_st_biases_0
// 2153         return -1;
??get_st_biases_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??get_st_biases_2 & 0xFFFF
// 2154     delay_ms(200);
??get_st_biases_0:
        ; Setup parameters for call to function delay_ms
        MOV     R2,#-0x38
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2155     data[0] = 0;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine57 & 0xFFFF
// 2156     if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
??CrossCallReturnLabel_253:
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_289:
        JNZ     ??get_st_biases_1
// 2157         return -1;
// 2158     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
        ; Setup parameters for call to function I2C_Write
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_307:
        JNZ     ??get_st_biases_1
// 2159         return -1;
// 2160     if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
        ; Setup parameters for call to function I2C_Write
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        LCALL   ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_279:
        JNZ     ??get_st_biases_1
// 2161         return -1;
// 2162     if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
        ; Setup parameters for call to function I2C_Write
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x17
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_290:
        JNZ     ??get_st_biases_1
// 2163         return -1;
// 2164     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
        ; Setup parameters for call to function I2C_Write
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_308:
        JNZ     ??get_st_biases_1
// 2165         return -1;
// 2166     data[0] = BIT_FIFO_RST | BIT_DMP_RST;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
// 2167     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
??CrossCallReturnLabel_166:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_309:
        JNZ     ??get_st_biases_1
// 2168         return -1;
// 2169     delay_ms(15);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0xf
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2170     data[0] = st.test->reg_lpf;
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_216:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine35 & 0xFFFF
// 2171     if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
??CrossCallReturnLabel_200:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_310:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2172         return -1;
// 2173     data[0] = st.test->reg_rate_div;
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_217:
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine37 & 0xFFFF
// 2174     if (i2c_write(st.hw->addr, st.reg->rate_div, 1, data))
??CrossCallReturnLabel_194:
        INC     DPTR
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_311:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
        MOV     DPTR,#st + 33
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_19:
        MOV     R0,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??get_st_biases_3
// 2175         return -1;
// 2176     if (hw_test)
// 2177         data[0] = st.test->reg_gyro_fsr | 0xE0;
        MOV     A,#-0x20
        ORL     A,R0
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??get_st_biases_4
// 2178     else
// 2179         data[0] = st.test->reg_gyro_fsr;
??get_st_biases_3:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
??get_st_biases_4:
        MOVX    @DPTR,A
// 2180     if (i2c_write(st.hw->addr, st.reg->gyro_cfg, 1, data))
        ; Setup parameters for call to function I2C_Write
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_312:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2181         return -1;
// 2182 
// 2183     if (hw_test)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??get_st_biases_5
// 2184         data[0] = st.test->reg_accel_fsr | 0xE0;
        MOV     DPTR,#st + 33
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_39:
        ORL     A,#0xe0
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??get_st_biases_6
// 2185     else
// 2186         data[0] = test.reg_accel_fsr;
??get_st_biases_5:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x18
??get_st_biases_6:
        LCALL   ?Subroutine23 & 0xFFFF
// 2187     if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
??CrossCallReturnLabel_212:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_313:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2188         return -1;
// 2189     if (hw_test)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??get_st_biases_7
// 2190         delay_ms(200);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#-0x38
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2191 
// 2192     /* Fill FIFO for test.wait_ms milliseconds. */
// 2193     data[0] = BIT_FIFO_EN;
??get_st_biases_7:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x40
        LCALL   ??Subroutine107_0 & 0xFFFF
// 2194     if (i2c_write(st.hw->addr, st.reg->user_ctrl, 1, data))
??CrossCallReturnLabel_171:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_314:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2195         return -1;
// 2196 
// 2197     data[0] = INV_XYZ_GYRO | INV_XYZ_ACCEL;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x78
        LCALL   ??Subroutine120_0 & 0xFFFF
// 2198     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
??CrossCallReturnLabel_206:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_315:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2199         return -1;
// 2200     delay_ms(test.wait_ms);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2201     data[0] = 0;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
// 2202     if (i2c_write(st.hw->addr, st.reg->fifo_en, 1, data))
??CrossCallReturnLabel_205:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_316:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2203         return -1;
// 2204 
// 2205     if (i2c_read(st.hw->addr, st.reg->fifo_count_h, 2, data))
        ; Setup parameters for call to function I2C_Read
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_237:
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2206         return -1;
// 2207 
// 2208     fifo_count = (data[0] << 8) | data[1];
// 2209     packet_count = fifo_count / MAX_PACKET_LENGTH;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     R2,#0xc
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        MOV     ?V0 + 0,A
// 2210     gyro[0] = gyro[1] = gyro[2] = 0;
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x8
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 15,A
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        LCALL   ?XSTORE_R2345
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 13,A
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL   ?XSTORE_R2345
// 2211     accel[0] = accel[1] = accel[2] = 0;
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x8
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_162:
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL   ?XSTORE_R2345
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?XSTORE_R2345
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL   ?XSTORE_R2345
// 2212 
// 2213     for (ii = 0; ii < packet_count; ii++) {
        MOV     ?V0 + 1,#0x0
        LJMP    ??get_st_biases_8 & 0xFFFF
// 2214         short accel_cur[3], gyro_cur[3];
// 2215         if (i2c_read(st.hw->addr, st.reg->fifo_r_w, MAX_PACKET_LENGTH, data))
??get_st_biases_9:
        ; Setup parameters for call to function I2C_Read
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0xc
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_2:
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      $+5
        LJMP    ??get_st_biases_1 & 0xFFFF
// 2216             return -1;
// 2217         accel_cur[0] = ((short)data[0] << 8) | data[1];
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 2218         accel_cur[1] = ((short)data[2] << 8) | data[3];
??CrossCallReturnLabel_163:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 2219         accel_cur[2] = ((short)data[4] << 8) | data[5];
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 2220         accel[0] += (long)accel_cur[0];
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_12:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?L_ADD_TO_X
// 2221         accel[1] += (long)accel_cur[1];
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_191:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2222         accel[2] += (long)accel_cur[2];
        MOV     ?V0 + 4,R2
        MOV     A,R3
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_189:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL   ?L_ADD_TO_X
// 2223         gyro_cur[0] = (((short)data[6] << 8) | data[7]);
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 2224         gyro_cur[1] = (((short)data[8] << 8) | data[9]);
??CrossCallReturnLabel_164:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 2225         gyro_cur[2] = (((short)data[10] << 8) | data[11]);
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 2226         gyro[0] += (long)gyro_cur[0];
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_13:
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL   ?L_ADD_TO_X
// 2227         gyro[1] += (long)gyro_cur[1];
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_192:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
// 2228         gyro[2] += (long)gyro_cur[2];
        MOV     ?V0 + 4,R2
        MOV     A,R3
        LCALL   ??Subroutine117_0 & 0xFFFF
// 2229     }
??CrossCallReturnLabel_190:
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOV     R0,#?V0 + 4
        LCALL   ?L_ADD_TO_X
        INC     ?V0 + 1
??get_st_biases_8:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 0
        JNC     $+5
        LJMP    ??get_st_biases_9 & 0xFFFF
// 2230 ///////////////∂Œ–°—Û///////////////
// 2231     unsigned char has_accel=1;
// 2232 #define EMPL_NO_64BIT
// 2233     ////////////////////////////
// 2234 #ifdef EMPL_NO_64BIT
// 2235     gyro[0] = (long)(((float)gyro[0]*65536.f) / test.gyro_sens / packet_count);
        MOV     ?V0 + 4,?V0 + 0
        CLR     A
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        MOV     R0,#?V0 + 4
        LCALL   ?UL_TO_FLT
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_3:
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_43030000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL   ?L_MOV_TO_X
// 2236     gyro[1] = (long)(((float)gyro[1]*65536.f) / test.gyro_sens / packet_count);
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_43030000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2237     gyro[2] = (long)(((float)gyro[2]*65536.f) / test.gyro_sens / packet_count);
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_43030000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2238     if (has_accel) {
// 2239         accel[0] = (long)(((float)accel[0]*65536.f) / test.accel_sens /
// 2240             packet_count);
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_5:
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_45000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_6:
        LCALL   ?L_MOV_TO_X
// 2241         accel[1] = (long)(((float)accel[1]*65536.f) / test.accel_sens /
// 2242             packet_count);
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_45000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2243         accel[2] = (long)(((float)accel[2]*65536.f) / test.accel_sens /
// 2244             packet_count);
// 2245         /* Don't remove gravity! */
// 2246         accel[2] -= 65536L;
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
// 2247     }
??CrossCallReturnLabel_7:
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        LCALL   ?L_TO_FLT
        MOV     DPTR,#__Constant_47800000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_45000000
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPTR,#__Constant_ffff0000
        MOV     R0,#?V0 + 0
        LCALL   ?L_ADD_X
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_8:
        LCALL   ?L_MOV_TO_X
// 2248 #else
// 2249     //printf("hello");
// 2250     gyro[0] = (long)(((long long)gyro[0]<<16) / test.gyro_sens / packet_count);
// 2251     gyro[1] = (long)(((long long)gyro[1]<<16) / test.gyro_sens / packet_count);
// 2252     gyro[2] = (long)(((long long)gyro[2]<<16) / test.gyro_sens / packet_count);
// 2253     accel[0] = (long)(((long long)accel[0]<<16) / test.accel_sens /
// 2254         packet_count);
// 2255     accel[1] = (long)(((long long)accel[1]<<16) / test.accel_sens /
// 2256         packet_count);
// 2257     accel[2] = (long)(((long long)accel[2]<<16) / test.accel_sens /
// 2258         packet_count);
// 2259     /* Don't remove gravity! */
// 2260     if (accel[2] > 0L)
// 2261         accel[2] -= 65536L;
// 2262     else
// 2263         accel[2] += 65536L;
// 2264 #endif
// 2265 
// 2266     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??get_st_biases_2:
        MOV     A,#0x1f
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock297
// 2267 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
        CFI Block cfiCond298 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_191
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond299 Using cfiCommon0
        CFI (cfiCond299) NoFunction
        CFI (cfiCond299) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond299) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond299) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond299) CFA_SP SP+0
        CFI (cfiCond299) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker300 Using cfiCommon1
        CFI (cfiPicker300) NoFunction
        CFI (cfiPicker300) Picker
        MOV     ?V0 + 4,R4
        MOV     A,R5
        CFI EndBlock cfiCond298
        CFI EndBlock cfiCond299
        CFI EndBlock cfiPicker300
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
        CFI Block cfiCond301 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_188
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond302 Using cfiCommon0
        CFI (cfiCond302) NoFunction
        CFI (cfiCond302) Conditional ??CrossCallReturnLabel_189
        CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond302) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond302) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond302) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond302) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond302) CFA_SP SP+0
        CFI (cfiCond302) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond303 Using cfiCommon0
        CFI (cfiCond303) NoFunction
        CFI (cfiCond303) Conditional ??CrossCallReturnLabel_190
        CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond303) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond303) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond303) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond303) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond303) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond303) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond303) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond303) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond303) CFA_SP SP+0
        CFI (cfiCond303) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond304 Using cfiCommon0
        CFI (cfiCond304) NoFunction
        CFI (cfiCond304) Conditional ??CrossCallReturnLabel_191
        CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond304) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond304) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond304) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond304) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond304) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond304) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond304) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond304) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond304) CFA_SP SP+0
        CFI (cfiCond304) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond305 Using cfiCommon0
        CFI (cfiCond305) NoFunction
        CFI (cfiCond305) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond305) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond305) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond305) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond305) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond305) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond305) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond305) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond305) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond305) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond305) CFA_SP SP+0
        CFI (cfiCond305) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker306 Using cfiCommon1
        CFI (cfiPicker306) NoFunction
        CFI (cfiPicker306) Picker
        MOV     ?V0 + 5,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        RET
        CFI EndBlock cfiCond301
        CFI EndBlock cfiCond302
        CFI EndBlock cfiCond303
        CFI EndBlock cfiCond304
        CFI EndBlock cfiCond305
        CFI EndBlock cfiPicker306

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
        CFI Block cfiCond307 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond308 Using cfiCommon0
        CFI (cfiCond308) NoFunction
        CFI (cfiCond308) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond308) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond308) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond308) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond308) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond308) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond308) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond308) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond308) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond308) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond308) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond308) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond308) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond308) CFA_SP SP+0
        CFI (cfiCond308) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker309 Using cfiCommon1
        CFI (cfiPicker309) NoFunction
        CFI (cfiPicker309) Picker
        LCALL   ?Subroutine94 & 0xFFFF
        CFI EndBlock cfiCond307
        CFI EndBlock cfiCond308
        CFI EndBlock cfiPicker309
??CrossCallReturnLabel_259:
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
        CFI Block cfiCond310 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_195
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond311 Using cfiCommon0
        CFI (cfiCond311) NoFunction
        CFI (cfiCond311) Conditional ??CrossCallReturnLabel_196
        CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond311) CFA_SP SP+0
        CFI (cfiCond311) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond312 Using cfiCommon0
        CFI (cfiCond312) NoFunction
        CFI (cfiCond312) Conditional ??CrossCallReturnLabel_197
        CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond312) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond312) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond312) CFA_SP SP+0
        CFI (cfiCond312) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond313 Using cfiCommon0
        CFI (cfiCond313) NoFunction
        CFI (cfiCond313) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond313) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond313) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond313) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond313) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond313) CFA_SP SP+0
        CFI (cfiCond313) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond314 Using cfiCommon0
        CFI (cfiCond314) NoFunction
        CFI (cfiCond314) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond314) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond314) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond314) CFA_SP SP+0
        CFI (cfiCond314) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond315 Using cfiCommon0
        CFI (cfiCond315) NoFunction
        CFI (cfiCond315) Conditional ??CrossCallReturnLabel_193
        CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond315) CFA_SP SP+0
        CFI (cfiCond315) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond316 Using cfiCommon0
        CFI (cfiCond316) NoFunction
        CFI (cfiCond316) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond316) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond316) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond316) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond316) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond316) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond316) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond316) CFA_SP SP+0
        CFI (cfiCond316) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker317 Using cfiCommon1
        CFI (cfiPicker317) NoFunction
        CFI (cfiPicker317) Picker
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_224:
        RET
        CFI EndBlock cfiCond310
        CFI EndBlock cfiCond311
        CFI EndBlock cfiCond312
        CFI EndBlock cfiCond313
        CFI EndBlock cfiCond314
        CFI EndBlock cfiCond315
        CFI EndBlock cfiCond316
        CFI EndBlock cfiPicker317

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
        CFI Block cfiCond318 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_200
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond319 Using cfiCommon0
        CFI (cfiCond319) NoFunction
        CFI (cfiCond319) Conditional ??CrossCallReturnLabel_201
        CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond319) CFA_SP SP+0
        CFI (cfiCond319) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker320 Using cfiCommon1
        CFI (cfiPicker320) NoFunction
        CFI (cfiPicker320) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond318
        CFI EndBlock cfiCond319
        CFI EndBlock cfiPicker320
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
        CFI Block cfiCond321 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_202
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond322 Using cfiCommon0
        CFI (cfiCond322) NoFunction
        CFI (cfiCond322) Conditional ??CrossCallReturnLabel_203
        CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond322) CFA_SP SP+0
        CFI (cfiCond322) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond323 Using cfiCommon0
        CFI (cfiCond323) NoFunction
        CFI (cfiCond323) Conditional ??CrossCallReturnLabel_200
        CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond323) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond323) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond323) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond323) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond323) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond323) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond323) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond323) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond323) CFA_SP SP+0
        CFI (cfiCond323) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond324 Using cfiCommon0
        CFI (cfiCond324) NoFunction
        CFI (cfiCond324) Conditional ??CrossCallReturnLabel_201
        CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond324) CFA_SP SP+0
        CFI (cfiCond324) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker325 Using cfiCommon1
        CFI (cfiPicker325) NoFunction
        CFI (cfiPicker325) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_226:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond321
        CFI EndBlock cfiCond322
        CFI EndBlock cfiCond323
        CFI EndBlock cfiCond324
        CFI EndBlock cfiPicker325

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond326 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_204
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond327 Using cfiCommon0
        CFI (cfiCond327) NoFunction
        CFI (cfiCond327) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond327) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond327) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond327) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond327) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond327) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond327) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond327) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond327) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond327) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond327) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond327) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond327) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond327) CFA_SP SP+0
        CFI (cfiCond327) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker328 Using cfiCommon1
        CFI (cfiPicker328) NoFunction
        CFI (cfiPicker328) Picker
        CLR     A
        CFI EndBlock cfiCond326
        CFI EndBlock cfiCond327
        CFI EndBlock cfiPicker328
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
        CFI Block cfiCond329 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_206
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond330 Using cfiCommon0
        CFI (cfiCond330) NoFunction
        CFI (cfiCond330) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond330) CFA_SP SP+0
        CFI (cfiCond330) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond331 Using cfiCommon0
        CFI (cfiCond331) NoFunction
        CFI (cfiCond331) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond331) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond331) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond331) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond331) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond331) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond331) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond331) CFA_SP SP+0
        CFI (cfiCond331) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker332 Using cfiCommon1
        CFI (cfiPicker332) NoFunction
        CFI (cfiPicker332) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond329
        CFI EndBlock cfiCond330
        CFI EndBlock cfiCond331
        CFI EndBlock cfiPicker332
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
        CFI Block cfiCond333 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_208
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond334 Using cfiCommon0
        CFI (cfiCond334) NoFunction
        CFI (cfiCond334) Conditional ??CrossCallReturnLabel_209
        CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond334) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond334) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond334) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond334) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond334) CFA_SP SP+0
        CFI (cfiCond334) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond335 Using cfiCommon0
        CFI (cfiCond335) NoFunction
        CFI (cfiCond335) Conditional ??CrossCallReturnLabel_206
        CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond335) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond335) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond335) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond335) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond335) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond335) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond335) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond335) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond335) CFA_SP SP+0
        CFI (cfiCond335) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond336 Using cfiCommon0
        CFI (cfiCond336) NoFunction
        CFI (cfiCond336) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond336) CFA_SP SP+0
        CFI (cfiCond336) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond337 Using cfiCommon0
        CFI (cfiCond337) NoFunction
        CFI (cfiCond337) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond337) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond337) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond337) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond337) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond337) CFA_SP SP+0
        CFI (cfiCond337) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker338 Using cfiCommon1
        CFI (cfiPicker338) NoFunction
        CFI (cfiPicker338) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        CFI EndBlock cfiCond333
        CFI EndBlock cfiCond334
        CFI EndBlock cfiCond335
        CFI EndBlock cfiCond336
        CFI EndBlock cfiCond337
        CFI EndBlock cfiPicker338
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
        CFI Block cfiCond339 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_207
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond340 Using cfiCommon0
        CFI (cfiCond340) NoFunction
        CFI (cfiCond340) Conditional ??CrossCallReturnLabel_208
        CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond340) CFA_SP SP+0
        CFI (cfiCond340) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond341 Using cfiCommon0
        CFI (cfiCond341) NoFunction
        CFI (cfiCond341) Conditional ??CrossCallReturnLabel_209
        CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond341) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond341) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond341) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond341) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond341) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond341) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond341) CFA_SP SP+0
        CFI (cfiCond341) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond342 Using cfiCommon0
        CFI (cfiCond342) NoFunction
        CFI (cfiCond342) Conditional ??CrossCallReturnLabel_206
        CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond342) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond342) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond342) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond342) CFA_SP SP+0
        CFI (cfiCond342) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond343 Using cfiCommon0
        CFI (cfiCond343) NoFunction
        CFI (cfiCond343) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond343) CFA_SP SP+0
        CFI (cfiCond343) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond344 Using cfiCommon0
        CFI (cfiCond344) NoFunction
        CFI (cfiCond344) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond344) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond344) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond344) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond344) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond344) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond344) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond344) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond344) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond344) CFA_SP SP+0
        CFI (cfiCond344) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker345 Using cfiCommon1
        CFI (cfiPicker345) NoFunction
        CFI (cfiPicker345) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_211:
        RET
        CFI EndBlock cfiCond339
        CFI EndBlock cfiCond340
        CFI EndBlock cfiCond341
        CFI EndBlock cfiCond342
        CFI EndBlock cfiCond343
        CFI EndBlock cfiCond344
        CFI EndBlock cfiPicker345

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
        CFI Block cfiCond346 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_204
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond347 Using cfiCommon0
        CFI (cfiCond347) NoFunction
        CFI (cfiCond347) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_205
        CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond347) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond347) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond347) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond347) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond347) CFA_SP SP+0
        CFI (cfiCond347) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond348 Using cfiCommon0
        CFI (cfiCond348) NoFunction
        CFI (cfiCond348) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_206
        CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond348) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond348) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond348) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond348) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond348) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond348) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond348) CFA_SP SP+0
        CFI (cfiCond348) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond349 Using cfiCommon0
        CFI (cfiCond349) NoFunction
        CFI (cfiCond349) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_208
        CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond349) CFA_SP SP+0
        CFI (cfiCond349) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond350 Using cfiCommon0
        CFI (cfiCond350) NoFunction
        CFI (cfiCond350) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_209
        CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond350) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond350) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond350) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond350) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond350) CFA_SP SP+0
        CFI (cfiCond350) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond351 Using cfiCommon0
        CFI (cfiCond351) NoFunction
        CFI (cfiCond351) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_207
        CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond351) CFA_SP SP+0
        CFI (cfiCond351) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond352 Using cfiCommon0
        CFI (cfiCond352) NoFunction
        CFI (cfiCond352) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_40
        CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond352) CFA_SP SP+0
        CFI (cfiCond352) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond353 Using cfiCommon0
        CFI (cfiCond353) NoFunction
        CFI (cfiCond353) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_41
        CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond353) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond353) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond353) CFA_SP SP+0
        CFI (cfiCond353) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker354 Using cfiCommon1
        CFI (cfiPicker354) NoFunction
        CFI (cfiPicker354) Picker
        MOV     R3,#0x1
        MOV     DPTR,#st
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_227:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond346
        CFI EndBlock cfiCond347
        CFI EndBlock cfiCond348
        CFI EndBlock cfiCond349
        CFI EndBlock cfiCond350
        CFI EndBlock cfiCond351
        CFI EndBlock cfiCond352
        CFI EndBlock cfiCond353
        CFI EndBlock cfiPicker354

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond355 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_40
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond356 Using cfiCommon0
        CFI (cfiCond356) NoFunction
        CFI (cfiCond356) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond356) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond356) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond356) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond356) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond356) CFA_SP SP+0
        CFI (cfiCond356) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker357 Using cfiCommon1
        CFI (cfiPicker357) NoFunction
        CFI (cfiPicker357) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_210:
        INC     DPTR
        RET
        CFI EndBlock cfiCond355
        CFI EndBlock cfiCond356
        CFI EndBlock cfiPicker357

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond358 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond359 Using cfiCommon0
        CFI (cfiCond359) NoFunction
        CFI (cfiCond359) Conditional ??CrossCallReturnLabel_39
        CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond359) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond359) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond359) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond359) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond359) CFA_SP SP+0
        CFI (cfiCond359) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker360 Using cfiCommon1
        CFI (cfiPicker360) NoFunction
        CFI (cfiPicker360) Picker
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_121:
        RET
        CFI EndBlock cfiCond358
        CFI EndBlock cfiCond359
        CFI EndBlock cfiPicker360

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
        CFI Block cfiCond361 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond362 Using cfiCommon0
        CFI (cfiCond362) NoFunction
        CFI (cfiCond362) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_1
        CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond362) CFA_SP SP+0
        CFI (cfiCond362) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond363 Using cfiCommon0
        CFI (cfiCond363) NoFunction
        CFI (cfiCond363) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_2
        CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond363) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond363) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond363) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond363) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond363) CFA_SP SP+0
        CFI (cfiCond363) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond364 Using cfiCommon0
        CFI (cfiCond364) NoFunction
        CFI (cfiCond364) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_38
        CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond364) CFA_SP SP+0
        CFI (cfiCond364) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond365 Using cfiCommon0
        CFI (cfiCond365) NoFunction
        CFI (cfiCond365) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_39
        CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond365) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond365) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond365) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond365) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond365) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond365) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond365) CFA_SP SP+0
        CFI (cfiCond365) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker366 Using cfiCommon1
        CFI (cfiPicker366) NoFunction
        CFI (cfiPicker366) Picker
        MOVX    A,@DPTR
        ADD     A,#0xb
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_270:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond361
        CFI EndBlock cfiCond362
        CFI EndBlock cfiCond363
        CFI EndBlock cfiCond364
        CFI EndBlock cfiCond365
        CFI EndBlock cfiPicker366

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond367 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond368 Using cfiCommon0
        CFI (cfiCond368) NoFunction
        CFI (cfiCond368) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond368) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond368) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond368) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond368) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond368) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond368) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond368) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond368) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond368) CFA_SP SP+0
        CFI (cfiCond368) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond369 Using cfiCommon0
        CFI (cfiCond369) NoFunction
        CFI (cfiCond369) Conditional ??CrossCallReturnLabel_28
        CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond369) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond369) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond369) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond369) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond369) CFA_SP SP+0
        CFI (cfiCond369) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker370 Using cfiCommon1
        CFI (cfiPicker370) NoFunction
        CFI (cfiPicker370) Picker
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_223:
        MOV     R0,#?V0 + 4
        RET
        CFI EndBlock cfiCond367
        CFI EndBlock cfiCond368
        CFI EndBlock cfiCond369
        CFI EndBlock cfiPicker370

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond371 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_212
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond372 Using cfiCommon0
        CFI (cfiCond372) NoFunction
        CFI (cfiCond372) Conditional ??CrossCallReturnLabel_213
        CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond372) CFA_SP SP+0
        CFI (cfiCond372) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker373 Using cfiCommon1
        CFI (cfiPicker373) NoFunction
        CFI (cfiPicker373) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond371
        CFI EndBlock cfiCond372
        CFI EndBlock cfiPicker373
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
        CFI Block cfiCond374 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_214
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond375 Using cfiCommon0
        CFI (cfiCond375) NoFunction
        CFI (cfiCond375) Conditional ??CrossCallReturnLabel_212
        CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond375) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond375) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond375) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond375) CFA_SP SP+0
        CFI (cfiCond375) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond376 Using cfiCommon0
        CFI (cfiCond376) NoFunction
        CFI (cfiCond376) Conditional ??CrossCallReturnLabel_213
        CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond376) CFA_SP SP+0
        CFI (cfiCond376) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker377 Using cfiCommon1
        CFI (cfiPicker377) NoFunction
        CFI (cfiPicker377) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x1
        MOV     DPTR,#st
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_218:
        RET
        CFI EndBlock cfiCond374
        CFI EndBlock cfiCond375
        CFI EndBlock cfiCond376
        CFI EndBlock cfiPicker377

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
        CFI Block cfiCond378 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_212
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond379 Using cfiCommon0
        CFI (cfiCond379) NoFunction
        CFI (cfiCond379) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_213
        CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond379) CFA_SP SP+0
        CFI (cfiCond379) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond380 Using cfiCommon0
        CFI (cfiCond380) NoFunction
        CFI (cfiCond380) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_214
        CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond380) CFA_SP SP+0
        CFI (cfiCond380) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond381 Using cfiCommon0
        CFI (cfiCond381) NoFunction
        CFI (cfiCond381) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_216
        CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond381) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond381) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond381) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond381) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond381) CFA_SP SP+0
        CFI (cfiCond381) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond382 Using cfiCommon0
        CFI (cfiCond382) NoFunction
        CFI (cfiCond382) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_217
        CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond382) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond382) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond382) CFA_SP SP+0
        CFI (cfiCond382) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond383 Using cfiCommon0
        CFI (cfiCond383) NoFunction
        CFI (cfiCond383) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_215
        CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond383) CFA_SP SP+0
        CFI (cfiCond383) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker384 Using cfiCommon1
        CFI (cfiPicker384) NoFunction
        CFI (cfiPicker384) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_221:
        RET
        CFI EndBlock cfiCond378
        CFI EndBlock cfiCond379
        CFI EndBlock cfiCond380
        CFI EndBlock cfiCond381
        CFI EndBlock cfiCond382
        CFI EndBlock cfiCond383
        CFI EndBlock cfiPicker384

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
        CFI Block cfiCond385 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_212
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond386 Using cfiCommon0
        CFI (cfiCond386) NoFunction
        CFI (cfiCond386) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_213
        CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond386) CFA_SP SP+0
        CFI (cfiCond386) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond387 Using cfiCommon0
        CFI (cfiCond387) NoFunction
        CFI (cfiCond387) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_214
        CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond387) CFA_SP SP+0
        CFI (cfiCond387) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond388 Using cfiCommon0
        CFI (cfiCond388) NoFunction
        CFI (cfiCond388) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_216
        CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond388) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond388) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond388) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond388) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond388) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond388) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond388) CFA_SP SP+0
        CFI (cfiCond388) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond389 Using cfiCommon0
        CFI (cfiCond389) NoFunction
        CFI (cfiCond389) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_217
        CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond389) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond389) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond389) CFA_SP SP+0
        CFI (cfiCond389) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond390 Using cfiCommon0
        CFI (cfiCond390) NoFunction
        CFI (cfiCond390) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_215
        CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond390) CFA_SP SP+0
        CFI (cfiCond390) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond391 Using cfiCommon0
        CFI (cfiCond391) NoFunction
        CFI (cfiCond391) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_22
        CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond391) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond391) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond391) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond391) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond391) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond391) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond391) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond391) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond391) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond391) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond391) CFA_SP SP+0
        CFI (cfiCond391) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond392 Using cfiCommon0
        CFI (cfiCond392) NoFunction
        CFI (cfiCond392) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_23
        CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond392) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond392) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond392) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond392) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond392) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond392) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond392) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond392) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond392) CFA_SP SP+0
        CFI (cfiCond392) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond393 Using cfiCommon0
        CFI (cfiCond393) NoFunction
        CFI (cfiCond393) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_18
        CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond393) CFA_SP SP+0
        CFI (cfiCond393) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond394 Using cfiCommon0
        CFI (cfiCond394) NoFunction
        CFI (cfiCond394) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_19
        CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond394) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond394) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond394) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond394) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond394) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond394) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond394) CFA_SP SP+0
        CFI (cfiCond394) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker395 Using cfiCommon1
        CFI (cfiPicker395) NoFunction
        CFI (cfiPicker395) Picker
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_324:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond385
        CFI EndBlock cfiCond386
        CFI EndBlock cfiCond387
        CFI EndBlock cfiCond388
        CFI EndBlock cfiCond389
        CFI EndBlock cfiCond390
        CFI EndBlock cfiCond391
        CFI EndBlock cfiCond392
        CFI EndBlock cfiCond393
        CFI EndBlock cfiCond394
        CFI EndBlock cfiPicker395

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond396 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_216
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond397 Using cfiCommon0
        CFI (cfiCond397) NoFunction
        CFI (cfiCond397) Conditional ??CrossCallReturnLabel_217
        CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond397) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond397) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond397) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond397) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond397) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond397) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond397) CFA_SP SP+0
        CFI (cfiCond397) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker398 Using cfiCommon1
        CFI (cfiPicker398) NoFunction
        CFI (cfiPicker398) Picker
        MOV     DPTR,#st + 33
        CFI EndBlock cfiCond396
        CFI EndBlock cfiCond397
        CFI EndBlock cfiPicker398
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
        CFI Block cfiCond399 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_215
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond400 Using cfiCommon0
        CFI (cfiCond400) NoFunction
        CFI (cfiCond400) Conditional ??CrossCallReturnLabel_216
        CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond400) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond400) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond400) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond400) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond400) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond400) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond400) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond400) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond400) CFA_SP SP+0
        CFI (cfiCond400) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond401 Using cfiCommon0
        CFI (cfiCond401) NoFunction
        CFI (cfiCond401) Conditional ??CrossCallReturnLabel_217
        CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond401) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond401) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond401) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond401) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond401) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond401) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond401) CFA_SP SP+0
        CFI (cfiCond401) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker402 Using cfiCommon1
        CFI (cfiPicker402) NoFunction
        CFI (cfiPicker402) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_219:
        INC     DPTR
        RET
        CFI EndBlock cfiCond399
        CFI EndBlock cfiCond400
        CFI EndBlock cfiCond401
        CFI EndBlock cfiPicker402

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond403 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_22
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond404 Using cfiCommon0
        CFI (cfiCond404) NoFunction
        CFI (cfiCond404) Conditional ??CrossCallReturnLabel_23
        CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond404) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond404) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond404) CFA_SP SP+0
        CFI (cfiCond404) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker405 Using cfiCommon1
        CFI (cfiPicker405) NoFunction
        CFI (cfiPicker405) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_123:
        RET
        CFI EndBlock cfiCond403
        CFI EndBlock cfiCond404
        CFI EndBlock cfiPicker405

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
        CFI Block cfiCond406 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_22
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond407 Using cfiCommon0
        CFI (cfiCond407) NoFunction
        CFI (cfiCond407) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_23
        CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond407) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond407) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond407) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond407) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond407) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond407) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond407) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond407) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond407) CFA_SP SP+0
        CFI (cfiCond407) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond408 Using cfiCommon0
        CFI (cfiCond408) NoFunction
        CFI (cfiCond408) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_18
        CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond408) CFA_SP SP+0
        CFI (cfiCond408) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond409 Using cfiCommon0
        CFI (cfiCond409) NoFunction
        CFI (cfiCond409) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_19
        CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond409) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond409) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond409) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond409) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond409) CFA_SP SP+0
        CFI (cfiCond409) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker410 Using cfiCommon1
        CFI (cfiPicker410) NoFunction
        CFI (cfiPicker410) Picker
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_220:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond406
        CFI EndBlock cfiCond407
        CFI EndBlock cfiCond408
        CFI EndBlock cfiCond409
        CFI EndBlock cfiPicker410

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond411 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_18
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond412 Using cfiCommon0
        CFI (cfiCond412) NoFunction
        CFI (cfiCond412) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond412) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond412) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond412) CFA_SP SP+0
        CFI (cfiCond412) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker413 Using cfiCommon1
        CFI (cfiPicker413) NoFunction
        CFI (cfiPicker413) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_122:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond411
        CFI EndBlock cfiCond412
        CFI EndBlock cfiPicker413

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond414 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_11
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond415 Using cfiCommon0
        CFI (cfiCond415) NoFunction
        CFI (cfiCond415) Conditional ??CrossCallReturnLabel_12
        CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond415) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond415) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond415) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond415) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond415) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond415) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond415) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond415) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond415) CFA_SP SP+0
        CFI (cfiCond415) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond416 Using cfiCommon0
        CFI (cfiCond416) NoFunction
        CFI (cfiCond416) Conditional ??CrossCallReturnLabel_13
        CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond416) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond416) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond416) CFA_SP SP+0
        CFI (cfiCond416) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker417 Using cfiCommon1
        CFI (cfiPicker417) NoFunction
        CFI (cfiPicker417) Picker
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_128:
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 6,A
        MOV     ?V0 + 7,A
        RET
        CFI EndBlock cfiCond414
        CFI EndBlock cfiCond415
        CFI EndBlock cfiCond416
        CFI EndBlock cfiPicker417

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiCond418 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_3
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond419 Using cfiCommon0
        CFI (cfiCond419) NoFunction
        CFI (cfiCond419) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond419) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond419) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond419) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond419) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond419) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond419) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond419) CFA_SP SP+0
        CFI (cfiCond419) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond420 Using cfiCommon0
        CFI (cfiCond420) NoFunction
        CFI (cfiCond420) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond420) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond420) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond420) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond420) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond420) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond420) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond420) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond420) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond420) CFA_SP SP+0
        CFI (cfiCond420) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond421 Using cfiCommon0
        CFI (cfiCond421) NoFunction
        CFI (cfiCond421) Conditional ??CrossCallReturnLabel_6
        CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond421) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond421) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond421) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond421) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond421) CFA_SP SP+0
        CFI (cfiCond421) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond422 Using cfiCommon0
        CFI (cfiCond422) NoFunction
        CFI (cfiCond422) Conditional ??CrossCallReturnLabel_7
        CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond422) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond422) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond422) CFA_SP SP+0
        CFI (cfiCond422) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond423 Using cfiCommon0
        CFI (cfiCond423) NoFunction
        CFI (cfiCond423) Conditional ??CrossCallReturnLabel_8
        CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond423) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond423) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond423) CFA_SP SP+0
        CFI (cfiCond423) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker424 Using cfiCommon1
        CFI (cfiPicker424) NoFunction
        CFI (cfiPicker424) Picker
        LCALL   ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond418
        CFI EndBlock cfiCond419
        CFI EndBlock cfiCond420
        CFI EndBlock cfiCond421
        CFI EndBlock cfiCond422
        CFI EndBlock cfiCond423
        CFI EndBlock cfiPicker424

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
        CFI Block cfiCond425 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_165
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond426 Using cfiCommon0
        CFI (cfiCond426) NoFunction
        CFI (cfiCond426) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_166
        CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond426) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond426) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond426) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond426) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond426) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond426) CFA_SP SP+0
        CFI (cfiCond426) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond427 Using cfiCommon0
        CFI (cfiCond427) NoFunction
        CFI (cfiCond427) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_167
        CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond427) CFA_SP SP+0
        CFI (cfiCond427) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond428 Using cfiCommon0
        CFI (cfiCond428) NoFunction
        CFI (cfiCond428) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_168
        CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond428) CFA_SP SP+0
        CFI (cfiCond428) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond429 Using cfiCommon0
        CFI (cfiCond429) NoFunction
        CFI (cfiCond429) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_169
        CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond429) CFA_SP SP+0
        CFI (cfiCond429) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond430 Using cfiCommon0
        CFI (cfiCond430) NoFunction
        CFI (cfiCond430) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_170
        CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond430) CFA_SP SP+0
        CFI (cfiCond430) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond431 Using cfiCommon0
        CFI (cfiCond431) NoFunction
        CFI (cfiCond431) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_171
        CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond431) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond431) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond431) CFA_SP SP+0
        CFI (cfiCond431) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond432 Using cfiCommon0
        CFI (cfiCond432) NoFunction
        CFI (cfiCond432) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_173
        CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond432) CFA_SP SP+0
        CFI (cfiCond432) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond433 Using cfiCommon0
        CFI (cfiCond433) NoFunction
        CFI (cfiCond433) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_174
        CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond433) CFA_SP SP+0
        CFI (cfiCond433) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond434 Using cfiCommon0
        CFI (cfiCond434) NoFunction
        CFI (cfiCond434) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_175
        CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond434) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond434) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond434) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond434) CFA_SP SP+0
        CFI (cfiCond434) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond435 Using cfiCommon0
        CFI (cfiCond435) NoFunction
        CFI (cfiCond435) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_172
        CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond435) CFA_SP SP+0
        CFI (cfiCond435) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond436 Using cfiCommon0
        CFI (cfiCond436) NoFunction
        CFI (cfiCond436) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_200
        CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond436) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond436) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond436) CFA_SP SP+0
        CFI (cfiCond436) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond437 Using cfiCommon0
        CFI (cfiCond437) NoFunction
        CFI (cfiCond437) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_201
        CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond437) CFA_SP SP+0
        CFI (cfiCond437) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond438 Using cfiCommon0
        CFI (cfiCond438) NoFunction
        CFI (cfiCond438) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_202
        CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond438) CFA_SP SP+0
        CFI (cfiCond438) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond439 Using cfiCommon0
        CFI (cfiCond439) NoFunction
        CFI (cfiCond439) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_203
        CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond439) CFA_SP SP+0
        CFI (cfiCond439) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker440 Using cfiCommon1
        CFI (cfiPicker440) NoFunction
        CFI (cfiPicker440) Picker
        MOV     DPTR,#st
        CFI EndBlock cfiCond425
        CFI EndBlock cfiCond426
        CFI EndBlock cfiCond427
        CFI EndBlock cfiCond428
        CFI EndBlock cfiCond429
        CFI EndBlock cfiCond430
        CFI EndBlock cfiCond431
        CFI EndBlock cfiCond432
        CFI EndBlock cfiCond433
        CFI EndBlock cfiCond434
        CFI EndBlock cfiCond435
        CFI EndBlock cfiCond436
        CFI EndBlock cfiCond437
        CFI EndBlock cfiCond438
        CFI EndBlock cfiCond439
        CFI EndBlock cfiPicker440
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
        CFI Block cfiCond441 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond442 Using cfiCommon0
        CFI (cfiCond442) NoFunction
        CFI (cfiCond442) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_194
        CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond442) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond442) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond442) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond442) CFA_SP SP+0
        CFI (cfiCond442) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond443 Using cfiCommon0
        CFI (cfiCond443) NoFunction
        CFI (cfiCond443) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_195
        CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond443) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond443) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond443) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond443) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond443) CFA_SP SP+0
        CFI (cfiCond443) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond444 Using cfiCommon0
        CFI (cfiCond444) NoFunction
        CFI (cfiCond444) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_196
        CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond444) CFA_SP SP+0
        CFI (cfiCond444) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond445 Using cfiCommon0
        CFI (cfiCond445) NoFunction
        CFI (cfiCond445) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_197
        CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond445) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond445) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond445) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond445) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond445) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond445) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond445) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond445) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond445) CFA_SP SP+0
        CFI (cfiCond445) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond446 Using cfiCommon0
        CFI (cfiCond446) NoFunction
        CFI (cfiCond446) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_198
        CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond446) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond446) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond446) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond446) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond446) CFA_SP SP+0
        CFI (cfiCond446) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond447 Using cfiCommon0
        CFI (cfiCond447) NoFunction
        CFI (cfiCond447) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_199
        CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond447) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond447) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond447) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond447) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond447) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond447) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond447) CFA_SP SP+0
        CFI (cfiCond447) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond448 Using cfiCommon0
        CFI (cfiCond448) NoFunction
        CFI (cfiCond448) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_26
        CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond448) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond448) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond448) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond448) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond448) CFA_SP SP+0
        CFI (cfiCond448) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond449 Using cfiCommon0
        CFI (cfiCond449) NoFunction
        CFI (cfiCond449) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_27
        CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond449) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond449) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond449) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond449) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond449) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond449) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond449) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond449) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond449) CFA_SP SP+0
        CFI (cfiCond449) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond450 Using cfiCommon0
        CFI (cfiCond450) NoFunction
        CFI (cfiCond450) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_28
        CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond450) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond450) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond450) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond450) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond450) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond450) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond450) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond450) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond450) CFA_SP SP+0
        CFI (cfiCond450) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond451 Using cfiCommon0
        CFI (cfiCond451) NoFunction
        CFI (cfiCond451) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_3
        CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond451) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond451) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond451) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond451) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond451) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond451) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond451) CFA_SP SP+0
        CFI (cfiCond451) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond452 Using cfiCommon0
        CFI (cfiCond452) NoFunction
        CFI (cfiCond452) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_4
        CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond452) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond452) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond452) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond452) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond452) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond452) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond452) CFA_SP SP+0
        CFI (cfiCond452) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond453 Using cfiCommon0
        CFI (cfiCond453) NoFunction
        CFI (cfiCond453) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_5
        CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond453) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond453) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond453) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond453) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond453) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond453) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond453) CFA_SP SP+0
        CFI (cfiCond453) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond454 Using cfiCommon0
        CFI (cfiCond454) NoFunction
        CFI (cfiCond454) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_6
        CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond454) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond454) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond454) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond454) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond454) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond454) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond454) CFA_SP SP+0
        CFI (cfiCond454) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond455 Using cfiCommon0
        CFI (cfiCond455) NoFunction
        CFI (cfiCond455) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_7
        CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond455) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond455) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond455) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond455) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond455) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond455) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond455) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond455) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond455) CFA_SP SP+0
        CFI (cfiCond455) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond456 Using cfiCommon0
        CFI (cfiCond456) NoFunction
        CFI (cfiCond456) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_8
        CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond456) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond456) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond456) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond456) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond456) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond456) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond456) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond456) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond456) CFA_SP SP+0
        CFI (cfiCond456) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond457 Using cfiCommon0
        CFI (cfiCond457) NoFunction
        CFI (cfiCond457) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_165
        CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond457) CFA_SP SP+0
        CFI (cfiCond457) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond458 Using cfiCommon0
        CFI (cfiCond458) NoFunction
        CFI (cfiCond458) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_166
        CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond458) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond458) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond458) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond458) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond458) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond458) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond458) CFA_SP SP+0
        CFI (cfiCond458) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond459 Using cfiCommon0
        CFI (cfiCond459) NoFunction
        CFI (cfiCond459) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_167
        CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond459) CFA_SP SP+0
        CFI (cfiCond459) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond460 Using cfiCommon0
        CFI (cfiCond460) NoFunction
        CFI (cfiCond460) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_168
        CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond460) CFA_SP SP+0
        CFI (cfiCond460) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond461 Using cfiCommon0
        CFI (cfiCond461) NoFunction
        CFI (cfiCond461) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_169
        CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond461) CFA_SP SP+0
        CFI (cfiCond461) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond462 Using cfiCommon0
        CFI (cfiCond462) NoFunction
        CFI (cfiCond462) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_170
        CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond462) CFA_SP SP+0
        CFI (cfiCond462) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond463 Using cfiCommon0
        CFI (cfiCond463) NoFunction
        CFI (cfiCond463) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_171
        CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond463) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond463) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond463) CFA_SP SP+0
        CFI (cfiCond463) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond464 Using cfiCommon0
        CFI (cfiCond464) NoFunction
        CFI (cfiCond464) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_173
        CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond464) CFA_SP SP+0
        CFI (cfiCond464) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond465 Using cfiCommon0
        CFI (cfiCond465) NoFunction
        CFI (cfiCond465) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_174
        CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond465) CFA_SP SP+0
        CFI (cfiCond465) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond466 Using cfiCommon0
        CFI (cfiCond466) NoFunction
        CFI (cfiCond466) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_175
        CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond466) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond466) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond466) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond466) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond466) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond466) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond466) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond466) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond466) CFA_SP SP+0
        CFI (cfiCond466) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond467 Using cfiCommon0
        CFI (cfiCond467) NoFunction
        CFI (cfiCond467) Conditional ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_172
        CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond467) CFA_SP SP+0
        CFI (cfiCond467) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond468 Using cfiCommon0
        CFI (cfiCond468) NoFunction
        CFI (cfiCond468) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_200
        CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond468) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond468) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond468) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond468) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond468) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond468) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond468) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond468) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond468) CFA_SP SP+0
        CFI (cfiCond468) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond469 Using cfiCommon0
        CFI (cfiCond469) NoFunction
        CFI (cfiCond469) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_201
        CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond469) CFA_SP SP+0
        CFI (cfiCond469) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond470 Using cfiCommon0
        CFI (cfiCond470) NoFunction
        CFI (cfiCond470) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_202
        CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond470) CFA_SP SP+0
        CFI (cfiCond470) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond471 Using cfiCommon0
        CFI (cfiCond471) NoFunction
        CFI (cfiCond471) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_203
        CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond471) CFA_SP SP+0
        CFI (cfiCond471) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker472 Using cfiCommon1
        CFI (cfiPicker472) NoFunction
        CFI (cfiPicker472) Picker
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_228:
        RET
        CFI EndBlock cfiCond441
        CFI EndBlock cfiCond442
        CFI EndBlock cfiCond443
        CFI EndBlock cfiCond444
        CFI EndBlock cfiCond445
        CFI EndBlock cfiCond446
        CFI EndBlock cfiCond447
        CFI EndBlock cfiCond448
        CFI EndBlock cfiCond449
        CFI EndBlock cfiCond450
        CFI EndBlock cfiCond451
        CFI EndBlock cfiCond452
        CFI EndBlock cfiCond453
        CFI EndBlock cfiCond454
        CFI EndBlock cfiCond455
        CFI EndBlock cfiCond456
        CFI EndBlock cfiCond457
        CFI EndBlock cfiCond458
        CFI EndBlock cfiCond459
        CFI EndBlock cfiCond460
        CFI EndBlock cfiCond461
        CFI EndBlock cfiCond462
        CFI EndBlock cfiCond463
        CFI EndBlock cfiCond464
        CFI EndBlock cfiCond465
        CFI EndBlock cfiCond466
        CFI EndBlock cfiCond467
        CFI EndBlock cfiCond468
        CFI EndBlock cfiCond469
        CFI EndBlock cfiCond470
        CFI EndBlock cfiCond471
        CFI EndBlock cfiPicker472

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
        CFI Block cfiCond473 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_204
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond474 Using cfiCommon0
        CFI (cfiCond474) NoFunction
        CFI (cfiCond474) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_205
        CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond474) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond474) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond474) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond474) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond474) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond474) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond474) CFA_SP SP+0
        CFI (cfiCond474) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond475 Using cfiCommon0
        CFI (cfiCond475) NoFunction
        CFI (cfiCond475) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_206
        CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond475) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond475) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond475) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond475) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond475) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond475) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond475) CFA_SP SP+0
        CFI (cfiCond475) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond476 Using cfiCommon0
        CFI (cfiCond476) NoFunction
        CFI (cfiCond476) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_208
        CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond476) CFA_SP SP+0
        CFI (cfiCond476) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond477 Using cfiCommon0
        CFI (cfiCond477) NoFunction
        CFI (cfiCond477) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_209
        CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond477) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond477) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond477) CFA_SP SP+0
        CFI (cfiCond477) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond478 Using cfiCommon0
        CFI (cfiCond478) NoFunction
        CFI (cfiCond478) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_207
        CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond478) CFA_SP SP+0
        CFI (cfiCond478) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond479 Using cfiCommon0
        CFI (cfiCond479) NoFunction
        CFI (cfiCond479) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_40
        CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond479) CFA_SP SP+0
        CFI (cfiCond479) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond480 Using cfiCommon0
        CFI (cfiCond480) NoFunction
        CFI (cfiCond480) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_41
        CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond480) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond480) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond480) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond480) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond480) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond480) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond480) CFA_SP SP+0
        CFI (cfiCond480) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond481 Using cfiCommon0
        CFI (cfiCond481) NoFunction
        CFI (cfiCond481) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_165
        CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond481) CFA_SP SP+0
        CFI (cfiCond481) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond482 Using cfiCommon0
        CFI (cfiCond482) NoFunction
        CFI (cfiCond482) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_166
        CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond482) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond482) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond482) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond482) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond482) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond482) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond482) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond482) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond482) CFA_SP SP+0
        CFI (cfiCond482) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond483 Using cfiCommon0
        CFI (cfiCond483) NoFunction
        CFI (cfiCond483) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_167
        CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond483) CFA_SP SP+0
        CFI (cfiCond483) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond484 Using cfiCommon0
        CFI (cfiCond484) NoFunction
        CFI (cfiCond484) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_168
        CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond484) CFA_SP SP+0
        CFI (cfiCond484) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond485 Using cfiCommon0
        CFI (cfiCond485) NoFunction
        CFI (cfiCond485) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_169
        CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond485) CFA_SP SP+0
        CFI (cfiCond485) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond486 Using cfiCommon0
        CFI (cfiCond486) NoFunction
        CFI (cfiCond486) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_170
        CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond486) CFA_SP SP+0
        CFI (cfiCond486) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond487 Using cfiCommon0
        CFI (cfiCond487) NoFunction
        CFI (cfiCond487) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_171
        CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond487) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond487) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond487) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond487) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond487) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond487) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond487) CFA_SP SP+0
        CFI (cfiCond487) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond488 Using cfiCommon0
        CFI (cfiCond488) NoFunction
        CFI (cfiCond488) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_173
        CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond488) CFA_SP SP+0
        CFI (cfiCond488) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond489 Using cfiCommon0
        CFI (cfiCond489) NoFunction
        CFI (cfiCond489) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_174
        CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond489) CFA_SP SP+0
        CFI (cfiCond489) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond490 Using cfiCommon0
        CFI (cfiCond490) NoFunction
        CFI (cfiCond490) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_175
        CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond490) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond490) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond490) CFA_SP SP+0
        CFI (cfiCond490) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond491 Using cfiCommon0
        CFI (cfiCond491) NoFunction
        CFI (cfiCond491) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_172
        CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond491) CFA_SP SP+0
        CFI (cfiCond491) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond492 Using cfiCommon0
        CFI (cfiCond492) NoFunction
        CFI (cfiCond492) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_200
        CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond492) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond492) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond492) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond492) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond492) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond492) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond492) CFA_SP SP+0
        CFI (cfiCond492) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond493 Using cfiCommon0
        CFI (cfiCond493) NoFunction
        CFI (cfiCond493) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_201
        CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond493) CFA_SP SP+0
        CFI (cfiCond493) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond494 Using cfiCommon0
        CFI (cfiCond494) NoFunction
        CFI (cfiCond494) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_202
        CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond494) CFA_SP SP+0
        CFI (cfiCond494) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond495 Using cfiCommon0
        CFI (cfiCond495) NoFunction
        CFI (cfiCond495) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_203
        CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond495) CFA_SP SP+0
        CFI (cfiCond495) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond496 Using cfiCommon0
        CFI (cfiCond496) NoFunction
        CFI (cfiCond496) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_193
        CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond496) CFA_SP SP+0
        CFI (cfiCond496) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond497 Using cfiCommon0
        CFI (cfiCond497) NoFunction
        CFI (cfiCond497) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_194
        CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond497) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond497) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond497) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond497) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond497) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond497) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond497) CFA_SP SP+0
        CFI (cfiCond497) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond498 Using cfiCommon0
        CFI (cfiCond498) NoFunction
        CFI (cfiCond498) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_195
        CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond498) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond498) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond498) CFA_SP SP+0
        CFI (cfiCond498) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond499 Using cfiCommon0
        CFI (cfiCond499) NoFunction
        CFI (cfiCond499) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_196
        CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond499) CFA_SP SP+0
        CFI (cfiCond499) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond500 Using cfiCommon0
        CFI (cfiCond500) NoFunction
        CFI (cfiCond500) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_197
        CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond500) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond500) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond500) CFA_SP SP+0
        CFI (cfiCond500) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond501 Using cfiCommon0
        CFI (cfiCond501) NoFunction
        CFI (cfiCond501) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_198
        CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond501) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond501) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond501) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond501) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond501) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond501) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond501) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond501) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond501) CFA_SP SP+0
        CFI (cfiCond501) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond502 Using cfiCommon0
        CFI (cfiCond502) NoFunction
        CFI (cfiCond502) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_199
        CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond502) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond502) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond502) CFA_SP SP+0
        CFI (cfiCond502) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond503 Using cfiCommon0
        CFI (cfiCond503) NoFunction
        CFI (cfiCond503) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_26
        CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond503) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond503) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond503) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond503) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond503) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond503) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond503) CFA_SP SP+0
        CFI (cfiCond503) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond504 Using cfiCommon0
        CFI (cfiCond504) NoFunction
        CFI (cfiCond504) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_27
        CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond504) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond504) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond504) CFA_SP SP+0
        CFI (cfiCond504) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond505 Using cfiCommon0
        CFI (cfiCond505) NoFunction
        CFI (cfiCond505) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_28
        CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond505) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond505) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond505) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond505) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond505) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond505) CFA_SP SP+0
        CFI (cfiCond505) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond506 Using cfiCommon0
        CFI (cfiCond506) NoFunction
        CFI (cfiCond506) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_3
        CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond506) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond506) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond506) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond506) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond506) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond506) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond506) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond506) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond506) CFA_SP SP+0
        CFI (cfiCond506) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond507 Using cfiCommon0
        CFI (cfiCond507) NoFunction
        CFI (cfiCond507) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_4
        CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond507) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond507) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond507) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond507) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond507) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond507) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond507) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond507) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond507) CFA_SP SP+0
        CFI (cfiCond507) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond508 Using cfiCommon0
        CFI (cfiCond508) NoFunction
        CFI (cfiCond508) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_5
        CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond508) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond508) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond508) CFA_SP SP+0
        CFI (cfiCond508) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond509 Using cfiCommon0
        CFI (cfiCond509) NoFunction
        CFI (cfiCond509) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_6
        CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond509) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond509) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond509) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond509) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond509) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond509) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond509) CFA_SP SP+0
        CFI (cfiCond509) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond510 Using cfiCommon0
        CFI (cfiCond510) NoFunction
        CFI (cfiCond510) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_7
        CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond510) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond510) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond510) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond510) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond510) CFA_SP SP+0
        CFI (cfiCond510) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond511 Using cfiCommon0
        CFI (cfiCond511) NoFunction
        CFI (cfiCond511) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_8
        CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond511) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond511) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond511) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond511) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond511) CFA_SP SP+0
        CFI (cfiCond511) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker512 Using cfiCommon1
        CFI (cfiPicker512) NoFunction
        CFI (cfiPicker512) Picker
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_325:
        RET
        CFI EndBlock cfiCond473
        CFI EndBlock cfiCond474
        CFI EndBlock cfiCond475
        CFI EndBlock cfiCond476
        CFI EndBlock cfiCond477
        CFI EndBlock cfiCond478
        CFI EndBlock cfiCond479
        CFI EndBlock cfiCond480
        CFI EndBlock cfiCond481
        CFI EndBlock cfiCond482
        CFI EndBlock cfiCond483
        CFI EndBlock cfiCond484
        CFI EndBlock cfiCond485
        CFI EndBlock cfiCond486
        CFI EndBlock cfiCond487
        CFI EndBlock cfiCond488
        CFI EndBlock cfiCond489
        CFI EndBlock cfiCond490
        CFI EndBlock cfiCond491
        CFI EndBlock cfiCond492
        CFI EndBlock cfiCond493
        CFI EndBlock cfiCond494
        CFI EndBlock cfiCond495
        CFI EndBlock cfiCond496
        CFI EndBlock cfiCond497
        CFI EndBlock cfiCond498
        CFI EndBlock cfiCond499
        CFI EndBlock cfiCond500
        CFI EndBlock cfiCond501
        CFI EndBlock cfiCond502
        CFI EndBlock cfiCond503
        CFI EndBlock cfiCond504
        CFI EndBlock cfiCond505
        CFI EndBlock cfiCond506
        CFI EndBlock cfiCond507
        CFI EndBlock cfiCond508
        CFI EndBlock cfiCond509
        CFI EndBlock cfiCond510
        CFI EndBlock cfiCond511
        CFI EndBlock cfiPicker512

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
        CFI Block cfiCond513 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_212
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond514 Using cfiCommon0
        CFI (cfiCond514) NoFunction
        CFI (cfiCond514) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_213
        CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond514) CFA_SP SP+0
        CFI (cfiCond514) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond515 Using cfiCommon0
        CFI (cfiCond515) NoFunction
        CFI (cfiCond515) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_214
        CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond515) CFA_SP SP+0
        CFI (cfiCond515) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond516 Using cfiCommon0
        CFI (cfiCond516) NoFunction
        CFI (cfiCond516) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_216
        CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond516) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond516) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond516) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond516) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond516) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond516) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond516) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond516) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond516) CFA_SP SP+0
        CFI (cfiCond516) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond517 Using cfiCommon0
        CFI (cfiCond517) NoFunction
        CFI (cfiCond517) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_217
        CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond517) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond517) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond517) CFA_SP SP+0
        CFI (cfiCond517) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond518 Using cfiCommon0
        CFI (cfiCond518) NoFunction
        CFI (cfiCond518) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_215
        CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond518) CFA_SP SP+0
        CFI (cfiCond518) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond519 Using cfiCommon0
        CFI (cfiCond519) NoFunction
        CFI (cfiCond519) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_22
        CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond519) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond519) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond519) CFA_SP SP+0
        CFI (cfiCond519) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond520 Using cfiCommon0
        CFI (cfiCond520) NoFunction
        CFI (cfiCond520) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_23
        CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond520) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond520) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond520) CFA_SP SP+0
        CFI (cfiCond520) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond521 Using cfiCommon0
        CFI (cfiCond521) NoFunction
        CFI (cfiCond521) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_18
        CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond521) CFA_SP SP+0
        CFI (cfiCond521) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond522 Using cfiCommon0
        CFI (cfiCond522) NoFunction
        CFI (cfiCond522) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_19
        CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond522) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond522) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond522) CFA_SP SP+0
        CFI (cfiCond522) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond523 Using cfiCommon0
        CFI (cfiCond523) NoFunction
        CFI (cfiCond523) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_204
        CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond523) CFA_SP SP+0
        CFI (cfiCond523) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond524 Using cfiCommon0
        CFI (cfiCond524) NoFunction
        CFI (cfiCond524) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_205
        CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond524) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond524) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond524) CFA_SP SP+0
        CFI (cfiCond524) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond525 Using cfiCommon0
        CFI (cfiCond525) NoFunction
        CFI (cfiCond525) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_206
        CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond525) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond525) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond525) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond525) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond525) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond525) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond525) CFA_SP SP+0
        CFI (cfiCond525) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond526 Using cfiCommon0
        CFI (cfiCond526) NoFunction
        CFI (cfiCond526) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_208
        CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond526) CFA_SP SP+0
        CFI (cfiCond526) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond527 Using cfiCommon0
        CFI (cfiCond527) NoFunction
        CFI (cfiCond527) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_209
        CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond527) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond527) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond527) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond527) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond527) CFA_SP SP+0
        CFI (cfiCond527) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond528 Using cfiCommon0
        CFI (cfiCond528) NoFunction
        CFI (cfiCond528) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_207
        CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond528) CFA_SP SP+0
        CFI (cfiCond528) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond529 Using cfiCommon0
        CFI (cfiCond529) NoFunction
        CFI (cfiCond529) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_40
        CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond529) CFA_SP SP+0
        CFI (cfiCond529) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond530 Using cfiCommon0
        CFI (cfiCond530) NoFunction
        CFI (cfiCond530) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_41
        CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond530) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond530) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond530) CFA_SP SP+0
        CFI (cfiCond530) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond531 Using cfiCommon0
        CFI (cfiCond531) NoFunction
        CFI (cfiCond531) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_165
        CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond531) CFA_SP SP+0
        CFI (cfiCond531) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond532 Using cfiCommon0
        CFI (cfiCond532) NoFunction
        CFI (cfiCond532) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_166
        CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond532) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond532) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond532) CFA_SP SP+0
        CFI (cfiCond532) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond533 Using cfiCommon0
        CFI (cfiCond533) NoFunction
        CFI (cfiCond533) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_167
        CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond533) CFA_SP SP+0
        CFI (cfiCond533) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond534 Using cfiCommon0
        CFI (cfiCond534) NoFunction
        CFI (cfiCond534) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_168
        CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond534) CFA_SP SP+0
        CFI (cfiCond534) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond535 Using cfiCommon0
        CFI (cfiCond535) NoFunction
        CFI (cfiCond535) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_169
        CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond535) CFA_SP SP+0
        CFI (cfiCond535) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond536 Using cfiCommon0
        CFI (cfiCond536) NoFunction
        CFI (cfiCond536) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_170
        CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond536) CFA_SP SP+0
        CFI (cfiCond536) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond537 Using cfiCommon0
        CFI (cfiCond537) NoFunction
        CFI (cfiCond537) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_171
        CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond537) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond537) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond537) CFA_SP SP+0
        CFI (cfiCond537) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond538 Using cfiCommon0
        CFI (cfiCond538) NoFunction
        CFI (cfiCond538) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_173
        CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond538) CFA_SP SP+0
        CFI (cfiCond538) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond539 Using cfiCommon0
        CFI (cfiCond539) NoFunction
        CFI (cfiCond539) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_174
        CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond539) CFA_SP SP+0
        CFI (cfiCond539) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond540 Using cfiCommon0
        CFI (cfiCond540) NoFunction
        CFI (cfiCond540) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_175
        CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond540) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond540) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond540) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond540) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond540) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond540) CFA_SP SP+0
        CFI (cfiCond540) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond541 Using cfiCommon0
        CFI (cfiCond541) NoFunction
        CFI (cfiCond541) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_225, ??CrossCallReturnLabel_172
        CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond541) CFA_SP SP+0
        CFI (cfiCond541) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond542 Using cfiCommon0
        CFI (cfiCond542) NoFunction
        CFI (cfiCond542) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_200
        CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond542) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond542) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond542) CFA_SP SP+0
        CFI (cfiCond542) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond543 Using cfiCommon0
        CFI (cfiCond543) NoFunction
        CFI (cfiCond543) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_201
        CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond543) CFA_SP SP+0
        CFI (cfiCond543) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond544 Using cfiCommon0
        CFI (cfiCond544) NoFunction
        CFI (cfiCond544) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_202
        CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond544) CFA_SP SP+0
        CFI (cfiCond544) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond545 Using cfiCommon0
        CFI (cfiCond545) NoFunction
        CFI (cfiCond545) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_203
        CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond545) CFA_SP SP+0
        CFI (cfiCond545) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond546 Using cfiCommon0
        CFI (cfiCond546) NoFunction
        CFI (cfiCond546) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_193
        CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond546) CFA_SP SP+0
        CFI (cfiCond546) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond547 Using cfiCommon0
        CFI (cfiCond547) NoFunction
        CFI (cfiCond547) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_194
        CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond547) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond547) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond547) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond547) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond547) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond547) CFA_SP SP+0
        CFI (cfiCond547) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond548 Using cfiCommon0
        CFI (cfiCond548) NoFunction
        CFI (cfiCond548) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_195
        CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond548) CFA_SP SP+0
        CFI (cfiCond548) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond549 Using cfiCommon0
        CFI (cfiCond549) NoFunction
        CFI (cfiCond549) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_196
        CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond549) CFA_SP SP+0
        CFI (cfiCond549) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond550 Using cfiCommon0
        CFI (cfiCond550) NoFunction
        CFI (cfiCond550) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_197
        CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond550) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond550) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond550) CFA_SP SP+0
        CFI (cfiCond550) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond551 Using cfiCommon0
        CFI (cfiCond551) NoFunction
        CFI (cfiCond551) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_198
        CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond551) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond551) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond551) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond551) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond551) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond551) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond551) CFA_SP SP+0
        CFI (cfiCond551) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond552 Using cfiCommon0
        CFI (cfiCond552) NoFunction
        CFI (cfiCond552) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_199
        CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond552) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond552) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond552) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond552) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond552) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond552) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond552) CFA_SP SP+0
        CFI (cfiCond552) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond553 Using cfiCommon0
        CFI (cfiCond553) NoFunction
        CFI (cfiCond553) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_26
        CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond553) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond553) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond553) CFA_SP SP+0
        CFI (cfiCond553) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond554 Using cfiCommon0
        CFI (cfiCond554) NoFunction
        CFI (cfiCond554) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_27
        CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond554) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond554) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond554) CFA_SP SP+0
        CFI (cfiCond554) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond555 Using cfiCommon0
        CFI (cfiCond555) NoFunction
        CFI (cfiCond555) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_28
        CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond555) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond555) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond555) CFA_SP SP+0
        CFI (cfiCond555) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond556 Using cfiCommon0
        CFI (cfiCond556) NoFunction
        CFI (cfiCond556) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_3
        CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond556) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond556) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond556) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond556) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond556) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond556) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond556) CFA_SP SP+0
        CFI (cfiCond556) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond557 Using cfiCommon0
        CFI (cfiCond557) NoFunction
        CFI (cfiCond557) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_4
        CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond557) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond557) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond557) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond557) CFA_SP SP+0
        CFI (cfiCond557) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond558 Using cfiCommon0
        CFI (cfiCond558) NoFunction
        CFI (cfiCond558) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_5
        CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond558) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond558) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond558) CFA_SP SP+0
        CFI (cfiCond558) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond559 Using cfiCommon0
        CFI (cfiCond559) NoFunction
        CFI (cfiCond559) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_6
        CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond559) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond559) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond559) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond559) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond559) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond559) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond559) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond559) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond559) CFA_SP SP+0
        CFI (cfiCond559) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond560 Using cfiCommon0
        CFI (cfiCond560) NoFunction
        CFI (cfiCond560) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_7
        CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond560) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond560) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond560) CFA_SP SP+0
        CFI (cfiCond560) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond561 Using cfiCommon0
        CFI (cfiCond561) NoFunction
        CFI (cfiCond561) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_8
        CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond561) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond561) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond561) CFA_SP SP+0
        CFI (cfiCond561) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond562 Using cfiCommon0
        CFI (cfiCond562) NoFunction
        CFI (cfiCond562) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_42
        CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond562) CFA_SP SP+0
        CFI (cfiCond562) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond563 Using cfiCommon0
        CFI (cfiCond563) NoFunction
        CFI (cfiCond563) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_43
        CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond563) CFA_SP SP+0
        CFI (cfiCond563) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond564 Using cfiCommon0
        CFI (cfiCond564) NoFunction
        CFI (cfiCond564) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_0
        CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond564) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond564) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond564) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond564) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond564) CFA_SP SP+0
        CFI (cfiCond564) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond565 Using cfiCommon0
        CFI (cfiCond565) NoFunction
        CFI (cfiCond565) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_1
        CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond565) CFA_SP SP+0
        CFI (cfiCond565) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond566 Using cfiCommon0
        CFI (cfiCond566) NoFunction
        CFI (cfiCond566) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_2
        CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond566) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond566) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond566) CFA_SP SP+0
        CFI (cfiCond566) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond567 Using cfiCommon0
        CFI (cfiCond567) NoFunction
        CFI (cfiCond567) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_229
        CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond567) CFA_SP SP+0
        CFI (cfiCond567) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond568 Using cfiCommon0
        CFI (cfiCond568) NoFunction
        CFI (cfiCond568) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_230
        CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond568) CFA_SP SP+0
        CFI (cfiCond568) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond569 Using cfiCommon0
        CFI (cfiCond569) NoFunction
        CFI (cfiCond569) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_231
        CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond569) CFA_SP SP+0
        CFI (cfiCond569) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond570 Using cfiCommon0
        CFI (cfiCond570) NoFunction
        CFI (cfiCond570) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_232
        CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond570) CFA_SP SP+0
        CFI (cfiCond570) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond571 Using cfiCommon0
        CFI (cfiCond571) NoFunction
        CFI (cfiCond571) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_233
        CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond571) CFA_SP SP+0
        CFI (cfiCond571) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond572 Using cfiCommon0
        CFI (cfiCond572) NoFunction
        CFI (cfiCond572) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_234
        CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond572) CFA_SP SP+0
        CFI (cfiCond572) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond573 Using cfiCommon0
        CFI (cfiCond573) NoFunction
        CFI (cfiCond573) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_235
        CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond573) CFA_SP SP+0
        CFI (cfiCond573) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond574 Using cfiCommon0
        CFI (cfiCond574) NoFunction
        CFI (cfiCond574) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_236
        CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond574) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond574) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond574) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond574) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond574) CFA_SP SP+0
        CFI (cfiCond574) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond575 Using cfiCommon0
        CFI (cfiCond575) NoFunction
        CFI (cfiCond575) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_237
        CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond575) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond575) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond575) CFA_SP SP+0
        CFI (cfiCond575) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond576 Using cfiCommon0
        CFI (cfiCond576) NoFunction
        CFI (cfiCond576) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
        CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond576) CFA_SP SP+0
        CFI (cfiCond576) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond577 Using cfiCommon0
        CFI (cfiCond577) NoFunction
        CFI (cfiCond577) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
        CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond577) CFA_SP SP+0
        CFI (cfiCond577) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond578 Using cfiCommon0
        CFI (cfiCond578) NoFunction
        CFI (cfiCond578) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_240
        CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond578) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond578) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond578) CFA_SP SP+0
        CFI (cfiCond578) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond579 Using cfiCommon0
        CFI (cfiCond579) NoFunction
        CFI (cfiCond579) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_14
        CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond579) CFA_SP SP+0
        CFI (cfiCond579) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond580 Using cfiCommon0
        CFI (cfiCond580) NoFunction
        CFI (cfiCond580) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_15
        CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond580) CFA_SP SP+0
        CFI (cfiCond580) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond581 Using cfiCommon0
        CFI (cfiCond581) NoFunction
        CFI (cfiCond581) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_272
        CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond581) CFA_SP SP+0
        CFI (cfiCond581) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond582 Using cfiCommon0
        CFI (cfiCond582) NoFunction
        CFI (cfiCond582) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_273
        CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond582) CFA_SP SP+0
        CFI (cfiCond582) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond583 Using cfiCommon0
        CFI (cfiCond583) NoFunction
        CFI (cfiCond583) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_274
        CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond583) CFA_SP SP+0
        CFI (cfiCond583) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond584 Using cfiCommon0
        CFI (cfiCond584) NoFunction
        CFI (cfiCond584) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_275
        CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond584) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond584) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond584) CFA_SP SP+0
        CFI (cfiCond584) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond585 Using cfiCommon0
        CFI (cfiCond585) NoFunction
        CFI (cfiCond585) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_276
        CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond585) CFA_SP SP+0
        CFI (cfiCond585) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond586 Using cfiCommon0
        CFI (cfiCond586) NoFunction
        CFI (cfiCond586) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_277
        CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond586) CFA_SP SP+0
        CFI (cfiCond586) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond587 Using cfiCommon0
        CFI (cfiCond587) NoFunction
        CFI (cfiCond587) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_278
        CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond587) CFA_SP SP+0
        CFI (cfiCond587) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond588 Using cfiCommon0
        CFI (cfiCond588) NoFunction
        CFI (cfiCond588) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_279
        CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond588) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond588) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond588) CFA_SP SP+0
        CFI (cfiCond588) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond589 Using cfiCommon0
        CFI (cfiCond589) NoFunction
        CFI (cfiCond589) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_280
        CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond589) CFA_SP SP+0
        CFI (cfiCond589) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond590 Using cfiCommon0
        CFI (cfiCond590) NoFunction
        CFI (cfiCond590) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_281
        CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond590) CFA_SP SP+0
        CFI (cfiCond590) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond591 Using cfiCommon0
        CFI (cfiCond591) NoFunction
        CFI (cfiCond591) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_282
        CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond591) CFA_SP SP+0
        CFI (cfiCond591) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond592 Using cfiCommon0
        CFI (cfiCond592) NoFunction
        CFI (cfiCond592) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_283
        CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond592) CFA_SP SP+0
        CFI (cfiCond592) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond593 Using cfiCommon0
        CFI (cfiCond593) NoFunction
        CFI (cfiCond593) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_284
        CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond593) CFA_SP SP+0
        CFI (cfiCond593) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond594 Using cfiCommon0
        CFI (cfiCond594) NoFunction
        CFI (cfiCond594) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_285
        CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond594) CFA_SP SP+0
        CFI (cfiCond594) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond595 Using cfiCommon0
        CFI (cfiCond595) NoFunction
        CFI (cfiCond595) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_286
        CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond595) CFA_SP SP+0
        CFI (cfiCond595) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond596 Using cfiCommon0
        CFI (cfiCond596) NoFunction
        CFI (cfiCond596) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_287
        CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond596) CFA_SP SP+0
        CFI (cfiCond596) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond597 Using cfiCommon0
        CFI (cfiCond597) NoFunction
        CFI (cfiCond597) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_288
        CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond597) CFA_SP SP+0
        CFI (cfiCond597) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond598 Using cfiCommon0
        CFI (cfiCond598) NoFunction
        CFI (cfiCond598) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_289
        CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond598) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond598) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond598) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond598) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond598) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond598) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond598) CFA_SP SP+0
        CFI (cfiCond598) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond599 Using cfiCommon0
        CFI (cfiCond599) NoFunction
        CFI (cfiCond599) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_290
        CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond599) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond599) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond599) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond599) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond599) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond599) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond599) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond599) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond599) CFA_SP SP+0
        CFI (cfiCond599) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond600 Using cfiCommon0
        CFI (cfiCond600) NoFunction
        CFI (cfiCond600) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291
        CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond600) CFA_SP SP+0
        CFI (cfiCond600) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond601 Using cfiCommon0
        CFI (cfiCond601) NoFunction
        CFI (cfiCond601) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292
        CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond601) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond601) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond601) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond601) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond601) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond601) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond601) CFA_SP SP+0
        CFI (cfiCond601) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond602 Using cfiCommon0
        CFI (cfiCond602) NoFunction
        CFI (cfiCond602) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_293
        CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond602) CFA_SP SP+0
        CFI (cfiCond602) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond603 Using cfiCommon0
        CFI (cfiCond603) NoFunction
        CFI (cfiCond603) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_294
        CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond603) CFA_SP SP+0
        CFI (cfiCond603) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond604 Using cfiCommon0
        CFI (cfiCond604) NoFunction
        CFI (cfiCond604) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_295
        CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond604) CFA_SP SP+0
        CFI (cfiCond604) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond605 Using cfiCommon0
        CFI (cfiCond605) NoFunction
        CFI (cfiCond605) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_296
        CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond605) CFA_SP SP+0
        CFI (cfiCond605) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond606 Using cfiCommon0
        CFI (cfiCond606) NoFunction
        CFI (cfiCond606) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_297
        CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond606) CFA_SP SP+0
        CFI (cfiCond606) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond607 Using cfiCommon0
        CFI (cfiCond607) NoFunction
        CFI (cfiCond607) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298
        CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond607) CFA_SP SP+0
        CFI (cfiCond607) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond608 Using cfiCommon0
        CFI (cfiCond608) NoFunction
        CFI (cfiCond608) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299
        CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond608) CFA_SP SP+0
        CFI (cfiCond608) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond609 Using cfiCommon0
        CFI (cfiCond609) NoFunction
        CFI (cfiCond609) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_300
        CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond609) CFA_SP SP+0
        CFI (cfiCond609) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond610 Using cfiCommon0
        CFI (cfiCond610) NoFunction
        CFI (cfiCond610) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_301
        CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond610) CFA_SP SP+0
        CFI (cfiCond610) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond611 Using cfiCommon0
        CFI (cfiCond611) NoFunction
        CFI (cfiCond611) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_302
        CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond611) CFA_SP SP+0
        CFI (cfiCond611) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond612 Using cfiCommon0
        CFI (cfiCond612) NoFunction
        CFI (cfiCond612) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_303
        CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond612) CFA_SP SP+0
        CFI (cfiCond612) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond613 Using cfiCommon0
        CFI (cfiCond613) NoFunction
        CFI (cfiCond613) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_304
        CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond613) CFA_SP SP+0
        CFI (cfiCond613) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond614 Using cfiCommon0
        CFI (cfiCond614) NoFunction
        CFI (cfiCond614) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_305
        CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond614) CFA_SP SP+0
        CFI (cfiCond614) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond615 Using cfiCommon0
        CFI (cfiCond615) NoFunction
        CFI (cfiCond615) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_306
        CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond615) CFA_SP SP+0
        CFI (cfiCond615) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond616 Using cfiCommon0
        CFI (cfiCond616) NoFunction
        CFI (cfiCond616) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_307
        CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond616) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond616) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond616) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond616) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond616) CFA_SP SP+0
        CFI (cfiCond616) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond617 Using cfiCommon0
        CFI (cfiCond617) NoFunction
        CFI (cfiCond617) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_308
        CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond617) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond617) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond617) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond617) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond617) CFA_SP SP+0
        CFI (cfiCond617) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond618 Using cfiCommon0
        CFI (cfiCond618) NoFunction
        CFI (cfiCond618) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_309
        CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond618) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond618) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond618) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond618) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond618) CFA_SP SP+0
        CFI (cfiCond618) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond619 Using cfiCommon0
        CFI (cfiCond619) NoFunction
        CFI (cfiCond619) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_310
        CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond619) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond619) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond619) CFA_SP SP+0
        CFI (cfiCond619) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond620 Using cfiCommon0
        CFI (cfiCond620) NoFunction
        CFI (cfiCond620) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_311
        CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond620) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond620) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond620) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond620) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond620) CFA_SP SP+0
        CFI (cfiCond620) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond621 Using cfiCommon0
        CFI (cfiCond621) NoFunction
        CFI (cfiCond621) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_312
        CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond621) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond621) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond621) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond621) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond621) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond621) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond621) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond621) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond621) CFA_SP SP+0
        CFI (cfiCond621) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond622 Using cfiCommon0
        CFI (cfiCond622) NoFunction
        CFI (cfiCond622) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_313
        CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond622) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond622) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond622) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond622) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond622) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond622) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond622) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond622) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond622) CFA_SP SP+0
        CFI (cfiCond622) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond623 Using cfiCommon0
        CFI (cfiCond623) NoFunction
        CFI (cfiCond623) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_314
        CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond623) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond623) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond623) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond623) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond623) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond623) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond623) CFA_SP SP+0
        CFI (cfiCond623) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond624 Using cfiCommon0
        CFI (cfiCond624) NoFunction
        CFI (cfiCond624) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_315
        CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond624) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond624) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond624) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond624) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond624) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond624) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond624) CFA_SP SP+0
        CFI (cfiCond624) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond625 Using cfiCommon0
        CFI (cfiCond625) NoFunction
        CFI (cfiCond625) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_316
        CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond625) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond625) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond625) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond625) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond625) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond625) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond625) CFA_SP SP+0
        CFI (cfiCond625) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond626 Using cfiCommon0
        CFI (cfiCond626) NoFunction
        CFI (cfiCond626) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_317
        CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond626) CFA_SP SP+0
        CFI (cfiCond626) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond627 Using cfiCommon0
        CFI (cfiCond627) NoFunction
        CFI (cfiCond627) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_318
        CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond627) CFA_SP SP+0
        CFI (cfiCond627) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond628 Using cfiCommon0
        CFI (cfiCond628) NoFunction
        CFI (cfiCond628) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_33
        CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond628) CFA_SP SP+0
        CFI (cfiCond628) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond629 Using cfiCommon0
        CFI (cfiCond629) NoFunction
        CFI (cfiCond629) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_34
        CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond629) CFA_SP SP+0
        CFI (cfiCond629) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker630 Using cfiCommon1
        CFI (cfiPicker630) NoFunction
        CFI (cfiPicker630) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond513
        CFI EndBlock cfiCond514
        CFI EndBlock cfiCond515
        CFI EndBlock cfiCond516
        CFI EndBlock cfiCond517
        CFI EndBlock cfiCond518
        CFI EndBlock cfiCond519
        CFI EndBlock cfiCond520
        CFI EndBlock cfiCond521
        CFI EndBlock cfiCond522
        CFI EndBlock cfiCond523
        CFI EndBlock cfiCond524
        CFI EndBlock cfiCond525
        CFI EndBlock cfiCond526
        CFI EndBlock cfiCond527
        CFI EndBlock cfiCond528
        CFI EndBlock cfiCond529
        CFI EndBlock cfiCond530
        CFI EndBlock cfiCond531
        CFI EndBlock cfiCond532
        CFI EndBlock cfiCond533
        CFI EndBlock cfiCond534
        CFI EndBlock cfiCond535
        CFI EndBlock cfiCond536
        CFI EndBlock cfiCond537
        CFI EndBlock cfiCond538
        CFI EndBlock cfiCond539
        CFI EndBlock cfiCond540
        CFI EndBlock cfiCond541
        CFI EndBlock cfiCond542
        CFI EndBlock cfiCond543
        CFI EndBlock cfiCond544
        CFI EndBlock cfiCond545
        CFI EndBlock cfiCond546
        CFI EndBlock cfiCond547
        CFI EndBlock cfiCond548
        CFI EndBlock cfiCond549
        CFI EndBlock cfiCond550
        CFI EndBlock cfiCond551
        CFI EndBlock cfiCond552
        CFI EndBlock cfiCond553
        CFI EndBlock cfiCond554
        CFI EndBlock cfiCond555
        CFI EndBlock cfiCond556
        CFI EndBlock cfiCond557
        CFI EndBlock cfiCond558
        CFI EndBlock cfiCond559
        CFI EndBlock cfiCond560
        CFI EndBlock cfiCond561
        CFI EndBlock cfiCond562
        CFI EndBlock cfiCond563
        CFI EndBlock cfiCond564
        CFI EndBlock cfiCond565
        CFI EndBlock cfiCond566
        CFI EndBlock cfiCond567
        CFI EndBlock cfiCond568
        CFI EndBlock cfiCond569
        CFI EndBlock cfiCond570
        CFI EndBlock cfiCond571
        CFI EndBlock cfiCond572
        CFI EndBlock cfiCond573
        CFI EndBlock cfiCond574
        CFI EndBlock cfiCond575
        CFI EndBlock cfiCond576
        CFI EndBlock cfiCond577
        CFI EndBlock cfiCond578
        CFI EndBlock cfiCond579
        CFI EndBlock cfiCond580
        CFI EndBlock cfiCond581
        CFI EndBlock cfiCond582
        CFI EndBlock cfiCond583
        CFI EndBlock cfiCond584
        CFI EndBlock cfiCond585
        CFI EndBlock cfiCond586
        CFI EndBlock cfiCond587
        CFI EndBlock cfiCond588
        CFI EndBlock cfiCond589
        CFI EndBlock cfiCond590
        CFI EndBlock cfiCond591
        CFI EndBlock cfiCond592
        CFI EndBlock cfiCond593
        CFI EndBlock cfiCond594
        CFI EndBlock cfiCond595
        CFI EndBlock cfiCond596
        CFI EndBlock cfiCond597
        CFI EndBlock cfiCond598
        CFI EndBlock cfiCond599
        CFI EndBlock cfiCond600
        CFI EndBlock cfiCond601
        CFI EndBlock cfiCond602
        CFI EndBlock cfiCond603
        CFI EndBlock cfiCond604
        CFI EndBlock cfiCond605
        CFI EndBlock cfiCond606
        CFI EndBlock cfiCond607
        CFI EndBlock cfiCond608
        CFI EndBlock cfiCond609
        CFI EndBlock cfiCond610
        CFI EndBlock cfiCond611
        CFI EndBlock cfiCond612
        CFI EndBlock cfiCond613
        CFI EndBlock cfiCond614
        CFI EndBlock cfiCond615
        CFI EndBlock cfiCond616
        CFI EndBlock cfiCond617
        CFI EndBlock cfiCond618
        CFI EndBlock cfiCond619
        CFI EndBlock cfiCond620
        CFI EndBlock cfiCond621
        CFI EndBlock cfiCond622
        CFI EndBlock cfiCond623
        CFI EndBlock cfiCond624
        CFI EndBlock cfiCond625
        CFI EndBlock cfiCond626
        CFI EndBlock cfiCond627
        CFI EndBlock cfiCond628
        CFI EndBlock cfiCond629
        CFI EndBlock cfiPicker630

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiCond631 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_229
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond632 Using cfiCommon0
        CFI (cfiCond632) NoFunction
        CFI (cfiCond632) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond632) CFA_SP SP+0
        CFI (cfiCond632) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond633 Using cfiCommon0
        CFI (cfiCond633) NoFunction
        CFI (cfiCond633) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond633) CFA_SP SP+0
        CFI (cfiCond633) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond634 Using cfiCommon0
        CFI (cfiCond634) NoFunction
        CFI (cfiCond634) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond634) CFA_SP SP+0
        CFI (cfiCond634) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond635 Using cfiCommon0
        CFI (cfiCond635) NoFunction
        CFI (cfiCond635) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond635) CFA_SP SP+0
        CFI (cfiCond635) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond636 Using cfiCommon0
        CFI (cfiCond636) NoFunction
        CFI (cfiCond636) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond636) CFA_SP SP+0
        CFI (cfiCond636) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker637 Using cfiCommon1
        CFI (cfiPicker637) NoFunction
        CFI (cfiPicker637) Picker
        LCALL   ?Subroutine76 & 0xFFFF
        CFI EndBlock cfiCond631
        CFI EndBlock cfiCond632
        CFI EndBlock cfiCond633
        CFI EndBlock cfiCond634
        CFI EndBlock cfiCond635
        CFI EndBlock cfiCond636
        CFI EndBlock cfiPicker637
??CrossCallReturnLabel_267:
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
        CFI Block cfiCond638 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_235
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond639 Using cfiCommon0
        CFI (cfiCond639) NoFunction
        CFI (cfiCond639) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond639) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond639) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond639) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond639) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond639) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond639) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond639) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond639) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond639) CFA_SP SP+0
        CFI (cfiCond639) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond640 Using cfiCommon0
        CFI (cfiCond640) NoFunction
        CFI (cfiCond640) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond640) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond640) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond640) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond640) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond640) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond640) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond640) CFA_SP SP+0
        CFI (cfiCond640) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond641 Using cfiCommon0
        CFI (cfiCond641) NoFunction
        CFI (cfiCond641) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond641) CFA_SP SP+0
        CFI (cfiCond641) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond642 Using cfiCommon0
        CFI (cfiCond642) NoFunction
        CFI (cfiCond642) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond642) CFA_SP SP+0
        CFI (cfiCond642) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond643 Using cfiCommon0
        CFI (cfiCond643) NoFunction
        CFI (cfiCond643) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond643) CFA_SP SP+0
        CFI (cfiCond643) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond644 Using cfiCommon0
        CFI (cfiCond644) NoFunction
        CFI (cfiCond644) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond644) CFA_SP SP+0
        CFI (cfiCond644) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond645 Using cfiCommon0
        CFI (cfiCond645) NoFunction
        CFI (cfiCond645) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond645) CFA_SP SP+0
        CFI (cfiCond645) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond646 Using cfiCommon0
        CFI (cfiCond646) NoFunction
        CFI (cfiCond646) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond646) CFA_SP SP+0
        CFI (cfiCond646) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker647 Using cfiCommon1
        CFI (cfiPicker647) NoFunction
        CFI (cfiPicker647) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        CFI EndBlock cfiCond638
        CFI EndBlock cfiCond639
        CFI EndBlock cfiCond640
        CFI EndBlock cfiCond641
        CFI EndBlock cfiCond642
        CFI EndBlock cfiCond643
        CFI EndBlock cfiCond644
        CFI EndBlock cfiCond645
        CFI EndBlock cfiCond646
        CFI EndBlock cfiPicker647
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
        CFI Block cfiCond648 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_238
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond649 Using cfiCommon0
        CFI (cfiCond649) NoFunction
        CFI (cfiCond649) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond649) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond649) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond649) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond649) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond649) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond649) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond649) CFA_SP SP+0
        CFI (cfiCond649) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond650 Using cfiCommon0
        CFI (cfiCond650) NoFunction
        CFI (cfiCond650) Conditional ??CrossCallReturnLabel_240
        CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond650) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond650) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond650) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond650) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond650) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond650) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond650) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond650) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond650) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond650) CFA_SP SP+0
        CFI (cfiCond650) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond651 Using cfiCommon0
        CFI (cfiCond651) NoFunction
        CFI (cfiCond651) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond651) CFA_SP SP+0
        CFI (cfiCond651) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond652 Using cfiCommon0
        CFI (cfiCond652) NoFunction
        CFI (cfiCond652) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond652) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond652) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond652) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond652) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond652) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond652) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond652) CFA_SP SP+0
        CFI (cfiCond652) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond653 Using cfiCommon0
        CFI (cfiCond653) NoFunction
        CFI (cfiCond653) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond653) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond653) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond653) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond653) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond653) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond653) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond653) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond653) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond653) CFA_SP SP+0
        CFI (cfiCond653) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond654 Using cfiCommon0
        CFI (cfiCond654) NoFunction
        CFI (cfiCond654) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond654) CFA_SP SP+0
        CFI (cfiCond654) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond655 Using cfiCommon0
        CFI (cfiCond655) NoFunction
        CFI (cfiCond655) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond655) CFA_SP SP+0
        CFI (cfiCond655) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond656 Using cfiCommon0
        CFI (cfiCond656) NoFunction
        CFI (cfiCond656) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond656) CFA_SP SP+0
        CFI (cfiCond656) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond657 Using cfiCommon0
        CFI (cfiCond657) NoFunction
        CFI (cfiCond657) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond657) CFA_SP SP+0
        CFI (cfiCond657) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond658 Using cfiCommon0
        CFI (cfiCond658) NoFunction
        CFI (cfiCond658) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond658) CFA_SP SP+0
        CFI (cfiCond658) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond659 Using cfiCommon0
        CFI (cfiCond659) NoFunction
        CFI (cfiCond659) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond659) CFA_SP SP+0
        CFI (cfiCond659) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker660 Using cfiCommon1
        CFI (cfiPicker660) NoFunction
        CFI (cfiPicker660) Picker
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_243:
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond648
        CFI EndBlock cfiCond649
        CFI EndBlock cfiCond650
        CFI EndBlock cfiCond651
        CFI EndBlock cfiCond652
        CFI EndBlock cfiCond653
        CFI EndBlock cfiCond654
        CFI EndBlock cfiCond655
        CFI EndBlock cfiCond656
        CFI EndBlock cfiCond657
        CFI EndBlock cfiCond658
        CFI EndBlock cfiCond659
        CFI EndBlock cfiPicker660
// 2268 
// 2269 /**
// 2270  *  @brief      Trigger gyro/accel/compass self-test.
// 2271  *  On success/error, the self-test returns a mask representing the sensor(s)
// 2272  *  that failed. For each bit, a one (1) represents a "pass" case; conversely,
// 2273  *  a zero (0) indicates a failure.
// 2274  *
// 2275  *  \n The mask is defined as follows:
// 2276  *  \n Bit 0:   Gyro.
// 2277  *  \n Bit 1:   Accel.
// 2278  *  \n Bit 2:   Compass.
// 2279  *
// 2280  *  \n Currently, the hardware self-test is unsupported for MPU6500. However,
// 2281  *  this function can still be used to obtain the accel and gyro biases.
// 2282  *
// 2283  *  \n This function must be called with the device either face-up or face-down
// 2284  *  (z-axis is parallel to gravity).
// 2285  *  @param[out] gyro        Gyro biases in q16 format.
// 2286  *  @param[out] accel       Accel biases (if applicable) in q16 format.
// 2287  *  @return     Result mask (see above).
// 2288  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2289 int mpu_run_self_test(long *gyro, long *accel)
mpu_run_self_test:
        CFI Block cfiBlock661 Using cfiCommon0
        CFI Function mpu_run_self_test
        CODE
// 2290 {
        FUNCALL mpu_run_self_test, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_get_fifo_config
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, get_st_biases
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, get_st_biases
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, accel_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, gyro_self_test
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_run_self_test, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 48)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
// 2291 #ifdef MPU6050
// 2292     const unsigned char tries = 2;
// 2293     long gyro_st[3], accel_st[3];
// 2294     unsigned char accel_result, gyro_result;
// 2295 #ifdef AK89xx_SECONDARY
// 2296     unsigned char compass_result;
// 2297 #endif
// 2298     int ii;
// 2299 #endif
// 2300     int result;
// 2301     unsigned char accel_fsr, fifo_sensors, sensors_on;
// 2302     unsigned short gyro_fsr, sample_rate, lpf;
// 2303     unsigned char dmp_was_on;
// 2304 
// 2305     if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_run_self_test_0
// 2306         mpu_set_dmp_state(0);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x0
        LCALL   ??mpu_set_dmp_state?relay
// 2307         dmp_was_on = 1;
        MOV     ?V0 + 0,#0x1
        SJMP    ??mpu_run_self_test_1
// 2308     } else
// 2309         dmp_was_on = 0;
??mpu_run_self_test_0:
        MOV     ?V0 + 0,#0x0
// 2310 
// 2311     /* Get initial settings. */
// 2312     mpu_get_gyro_fsr(&gyro_fsr);
??mpu_run_self_test_1:
        ; Setup parameters for call to function mpu_get_gyro_fsr
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_gyro_fsr?relay
// 2313     mpu_get_accel_fsr(&accel_fsr);
        ; Setup parameters for call to function mpu_get_accel_fsr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_accel_fsr?relay
// 2314     mpu_get_lpf(&lpf);
        ; Setup parameters for call to function mpu_get_lpf
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_lpf?relay
// 2315     mpu_get_sample_rate(&sample_rate);
        ; Setup parameters for call to function mpu_get_sample_rate
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_sample_rate?relay
// 2316     sensors_on = st.chip_cfg.sensors;
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
// 2317     mpu_get_fifo_config(&fifo_sensors);
        ; Setup parameters for call to function mpu_get_fifo_config
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??mpu_get_fifo_config?relay
// 2318 
// 2319     /* For older chips, the self-test will be different. */
// 2320 #if defined MPU6050
// 2321     for (ii = 0; ii < tries; ii++)
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2322         if (!get_st_biases(gyro, accel, 0))
??mpu_run_self_test_2:
        ; Setup parameters for call to function get_st_biases
        MOV     R1,#0x0
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_118:
        JZ      ??mpu_run_self_test_3
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_85:
        JC      ??mpu_run_self_test_2
// 2323             break;
// 2324     if (ii == tries) {
??mpu_run_self_test_3:
        MOV     A,#0x2
        XRL     A,R6
        JNZ     ??mpu_run_self_test_4
        MOV     A,R7
??mpu_run_self_test_4:
        JNZ     ??mpu_run_self_test_5
// 2325         /* If we reach this point, we most likely encountered an I2C error.
// 2326          * We'll just report an error for all three sensors.
// 2327          */
// 2328         result = 0;
??mpu_run_self_test_6:
        MOV     R6,#0x0
// 2329         goto restore;
        SJMP    ??mpu_run_self_test_7
// 2330     }
// 2331     for (ii = 0; ii < tries; ii++)
??mpu_run_self_test_5:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 2332         if (!get_st_biases(gyro_st, accel_st, 1))
??mpu_run_self_test_8:
        ; Setup parameters for call to function get_st_biases
        MOV     R1,#0x1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_119:
        JZ      ??mpu_run_self_test_9
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_86:
        JC      ??mpu_run_self_test_8
// 2333             break;
// 2334     if (ii == tries) {
??mpu_run_self_test_9:
        MOV     A,#0x2
        XRL     A,R6
        JNZ     ??mpu_run_self_test_10
        MOV     A,R7
??mpu_run_self_test_10:
        JZ      ??mpu_run_self_test_6
// 2335         /* Again, probably an I2C error. */
// 2336         result = 0;
// 2337         goto restore;
// 2338     }
// 2339     accel_result = accel_self_test(accel, accel_st);
        ; Setup parameters for call to function accel_self_test
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??accel_self_test?relay
        MOV     A,R2
        MOV     ?V0 + 2,A
// 2340     gyro_result = gyro_self_test(gyro, gyro_st);
        ; Setup parameters for call to function gyro_self_test
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??gyro_self_test?relay
// 2341 
// 2342     result = 0;
        MOV     R6,#0x0
// 2343     if (!gyro_result)
        MOV     A,R2
        JNZ     ??mpu_run_self_test_11
// 2344         result |= 0x01;
        INC     R6
// 2345     if (!accel_result)
??mpu_run_self_test_11:
        MOV     A,?V0 + 2
        JNZ     ??mpu_run_self_test_7
// 2346         result |= 0x02;
        MOV     A,#0x2
        ORL     A,R6
        MOV     R6,A
// 2347 
// 2348 #ifdef AK89xx_SECONDARY
// 2349     compass_result = compass_self_test();
// 2350     if (!compass_result)
// 2351         result |= 0x04;
// 2352 #endif
// 2353 restore:
// 2354 #elif defined MPU6500
// 2355     /* For now, this function will return a "pass" result for all three sensors
// 2356      * for compatibility with current test applications.
// 2357      */
// 2358     get_st_biases(gyro, accel, 0);
// 2359     result = 0x7;
// 2360 #endif
// 2361     /* Set to invalid values to ensure no I2C writes are skipped. */
// 2362     st.chip_cfg.gyro_fsr = 0xFF;
??mpu_run_self_test_7:
        LCALL   ?Subroutine58 & 0xFFFF
// 2363     st.chip_cfg.accel_fsr = 0xFF;
// 2364     st.chip_cfg.lpf = 0xFF;
// 2365     st.chip_cfg.sample_rate = 0xFFFF;
// 2366     st.chip_cfg.sensors = 0xFF;
// 2367     st.chip_cfg.fifo_enable = 0xFF;
// 2368     st.chip_cfg.clk_src = INV_CLK_PLL;
// 2369     mpu_set_gyro_fsr(gyro_fsr);
??CrossCallReturnLabel_92:
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
// 2370     mpu_set_accel_fsr(accel_fsr);
??CrossCallReturnLabel_75:
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_accel_fsr?relay
// 2371     mpu_set_lpf(lpf);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine50 & 0xFFFF
// 2372     mpu_set_sample_rate(sample_rate);
??CrossCallReturnLabel_77:
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine38 & 0xFFFF
// 2373     mpu_set_sensors(sensors_on);
??CrossCallReturnLabel_44:
        ; Setup parameters for call to function mpu_set_sensors
        MOV     R1,?V0 + 1
        LCALL   ??mpu_set_sensors?relay
// 2374     mpu_configure_fifo(fifo_sensors);
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_configure_fifo?relay
// 2375 
// 2376     if (dmp_was_on)
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        JNC     ??mpu_run_self_test_12
// 2377         mpu_set_dmp_state(1);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x1
        LCALL   ??mpu_set_dmp_state?relay
// 2378 
// 2379     return result;
??mpu_run_self_test_12:
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        MOV     A,#0x20
        LJMP    ??Subroutine104_0 & 0xFFFF
        CFI EndBlock cfiBlock661
// 2380 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
        CFI Block cfiCond662 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_118
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond663 Using cfiCommon0
        CFI (cfiCond663) NoFunction
        CFI (cfiCond663) Conditional ??CrossCallReturnLabel_119
        CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond663) CFA_SP SP+0
        CFI (cfiCond663) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker664 Using cfiCommon1
        CFI (cfiPicker664) NoFunction
        CFI (cfiPicker664) Picker
        LCALL   ??get_st_biases?relay
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        RET
        CFI EndBlock cfiCond662
        CFI EndBlock cfiCond663
        CFI EndBlock cfiPicker664

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
        CFI Block cfiCond665 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_85
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond666 Using cfiCommon0
        CFI (cfiCond666) NoFunction
        CFI (cfiCond666) Conditional ??CrossCallReturnLabel_86
        CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond666) CFA_SP SP+0
        CFI (cfiCond666) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker667 Using cfiCommon1
        CFI (cfiPicker667) NoFunction
        CFI (cfiPicker667) Picker
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_150:
        SUBB    A,#0x2
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_246:
        RET
        CFI EndBlock cfiCond665
        CFI EndBlock cfiCond666
        CFI EndBlock cfiPicker667

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
        CFI Block cfiCond668 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond669 Using cfiCommon0
        CFI (cfiCond669) NoFunction
        CFI (cfiCond669) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_84
        CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond669) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond669) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond669) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond669) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond669) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond669) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond669) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond669) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond669) CFA_SP SP+0
        CFI (cfiCond669) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond670 Using cfiCommon0
        CFI (cfiCond670) NoFunction
        CFI (cfiCond670) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_85
        CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond670) CFA_SP SP+0
        CFI (cfiCond670) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond671 Using cfiCommon0
        CFI (cfiCond671) NoFunction
        CFI (cfiCond671) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_86
        CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond671) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond671) CFA_SP SP+0
        CFI (cfiCond671) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker672 Using cfiCommon1
        CFI (cfiPicker672) NoFunction
        CFI (cfiPicker672) Picker
        MOV     A,R6
        ADD     A,#0x1
        INC     R6
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        CLR     C
        MOV     A,R6
        RET
        CFI EndBlock cfiCond668
        CFI EndBlock cfiCond669
        CFI EndBlock cfiCond670
        CFI EndBlock cfiCond671
        CFI EndBlock cfiPicker672

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
        CFI Block cfiCond673 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond674 Using cfiCommon0
        CFI (cfiCond674) NoFunction
        CFI (cfiCond674) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_84
        CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond674) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond674) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond674) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond674) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond674) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond674) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond674) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond674) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond674) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond674) CFA_SP SP+0
        CFI (cfiCond674) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond675 Using cfiCommon0
        CFI (cfiCond675) NoFunction
        CFI (cfiCond675) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_85
        CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond675) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond675) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond675) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond675) CFA_SP SP+0
        CFI (cfiCond675) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond676 Using cfiCommon0
        CFI (cfiCond676) NoFunction
        CFI (cfiCond676) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_86
        CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond676) CFA_SP SP+0
        CFI (cfiCond676) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker677 Using cfiCommon1
        CFI (cfiPicker677) NoFunction
        CFI (cfiPicker677) Picker
        MOV     A,R7
        CFI EndBlock cfiCond673
        CFI EndBlock cfiCond674
        CFI EndBlock cfiCond675
        CFI EndBlock cfiCond676
        CFI EndBlock cfiPicker677
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine128_0:
        CFI Block cfiCond678 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_89
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond679 Using cfiCommon0
        CFI (cfiCond679) NoFunction
        CFI (cfiCond679) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_90
        CFI (cfiCond679) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond679) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond679) CFA_SP SP+-5
        CFI Block cfiCond680 Using cfiCommon0
        CFI (cfiCond680) NoFunction
        CFI (cfiCond680) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_91
        CFI (cfiCond680) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond680) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond680) CFA_SP SP+-5
        CFI Block cfiCond681 Using cfiCommon0
        CFI (cfiCond681) NoFunction
        CFI (cfiCond681) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_83
        CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond681) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond681) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond681) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond681) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond681) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond681) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond681) CFA_SP SP+0
        CFI (cfiCond681) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond682 Using cfiCommon0
        CFI (cfiCond682) NoFunction
        CFI (cfiCond682) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_84
        CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond682) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond682) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond682) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond682) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond682) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond682) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond682) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond682) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond682) CFA_SP SP+0
        CFI (cfiCond682) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond683 Using cfiCommon0
        CFI (cfiCond683) NoFunction
        CFI (cfiCond683) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_85
        CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond683) CFA_SP SP+0
        CFI (cfiCond683) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond684 Using cfiCommon0
        CFI (cfiCond684) NoFunction
        CFI (cfiCond684) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_86
        CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond684) CFA_SP SP+0
        CFI (cfiCond684) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiPicker685 Using cfiCommon1
        CFI (cfiPicker685) NoFunction
        CFI (cfiPicker685) Picker
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond678
        CFI EndBlock cfiCond679
        CFI EndBlock cfiCond680
        CFI EndBlock cfiCond681
        CFI EndBlock cfiCond682
        CFI EndBlock cfiCond683
        CFI EndBlock cfiCond684
        CFI EndBlock cfiPicker685
// 2381 
// 2382 /**
// 2383  *  @brief      Write to the DMP memory.
// 2384  *  This function prevents I2C writes past the bank boundaries. The DMP memory
// 2385  *  is only accessible when the chip is awake.
// 2386  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
// 2387  *  @param[in]  length      Number of bytes to write.
// 2388  *  @param[in]  data        Bytes to write to memory.
// 2389  *  @return     0 if successful.
// 2390  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2391 int mpu_write_mem(unsigned short mem_addr, unsigned short length,
mpu_write_mem:
        CFI Block cfiBlock686 Using cfiCommon0
        CFI Function mpu_write_mem
        CODE
// 2392         unsigned char *data)
// 2393 {
        FUNCALL mpu_write_mem, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_write_mem, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
// 2394     unsigned char tmp[2];
// 2395 
// 2396     if (!data)
??CrossCallReturnLabel_58:
        JNZ     ??mpu_write_mem_0
// 2397         return -1;
??mpu_write_mem_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_write_mem_2
// 2398     if (!st.chip_cfg.sensors)
??mpu_write_mem_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_write_mem_1
// 2399         return -1;
// 2400 
// 2401     tmp[0] = (unsigned char)(mem_addr >> 8);
        MOV     A,R3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2402     tmp[1] = (unsigned char)(mem_addr & 0xFF);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
// 2403 
// 2404     /* Check bank boundaries. */
// 2405     if (tmp[1] + length > st.hw->bank_size)
??CrossCallReturnLabel_29:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R2
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R3
        JC      ??mpu_write_mem_1
// 2406         return -1;
// 2407 
// 2408     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
        ; Setup parameters for call to function I2C_Write
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_9:
        JNZ     ??mpu_write_mem_1
// 2409         return -1;
// 2410     if (i2c_write(st.hw->addr, st.reg->mem_r_w, length, data))
        ; Setup parameters for call to function I2C_Write
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R3,A
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_291:
        JNZ     ??mpu_write_mem_1
// 2411         return -1;
// 2412     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        CFI EndBlock cfiBlock686
??mpu_write_mem_2:
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2413 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiBlock687 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        CFI EndBlock cfiBlock687
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine129_0:
        CFI Block cfiBlock688 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock688
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine130_0:
        CFI Block cfiBlock689 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock689
// 2414 
// 2415 /**
// 2416  *  @brief      Read from the DMP memory.
// 2417  *  This function prevents I2C reads past the bank boundaries. The DMP memory
// 2418  *  is only accessible when the chip is awake.
// 2419  *  @param[in]  mem_addr    Memory location (bank << 8 | start address)
// 2420  *  @param[in]  length      Number of bytes to read.
// 2421  *  @param[out] data        Bytes read from memory.
// 2422  *  @return     0 if successful.
// 2423  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2424 int mpu_read_mem(unsigned short mem_addr, unsigned short length,
mpu_read_mem:
        CFI Block cfiBlock690 Using cfiCommon0
        CFI Function mpu_read_mem
        CODE
// 2425         unsigned char *data)
// 2426 {
        FUNCALL mpu_read_mem, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_read_mem, I2C_Read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
// 2427     unsigned char tmp[2];
// 2428 
// 2429     if (!data)
??CrossCallReturnLabel_59:
        JNZ     ??mpu_read_mem_0
// 2430         return -1;
??mpu_read_mem_1:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_read_mem_2
// 2431     if (!st.chip_cfg.sensors)
??mpu_read_mem_0:
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        JZ      ??mpu_read_mem_1
// 2432         return -1;
// 2433 
// 2434     tmp[0] = (unsigned char)(mem_addr >> 8);
        MOV     A,R3
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 2435     tmp[1] = (unsigned char)(mem_addr & 0xFF);
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
// 2436 
// 2437     /* Check bank boundaries. */
// 2438     if (tmp[1] + length > st.hw->bank_size)
??CrossCallReturnLabel_30:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R2
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R3
        JC      ??mpu_read_mem_1
// 2439         return -1;
// 2440 
// 2441     if (i2c_write(st.hw->addr, st.reg->bank_sel, 2, tmp))
        ; Setup parameters for call to function I2C_Write
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_10:
        JNZ     ??mpu_read_mem_1
// 2442         return -1;
// 2443     if (i2c_read(st.hw->addr, st.reg->mem_r_w, length, data))
        ; Setup parameters for call to function I2C_Read
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R3,A
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x15
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_234:
        JNZ     ??mpu_read_mem_1
// 2444         return -1;
// 2445     return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_read_mem_2:
        SJMP    ?Subroutine5
        CFI EndBlock cfiBlock690
// 2446 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
        CFI Block cfiCond691 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_58
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond692 Using cfiCommon0
        CFI (cfiCond692) NoFunction
        CFI (cfiCond692) Conditional ??CrossCallReturnLabel_59
        CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond692) CFA_SP SP+0
        CFI (cfiCond692) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker693 Using cfiCommon1
        CFI (cfiPicker693) NoFunction
        CFI (cfiPicker693) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond691
        CFI EndBlock cfiCond692
        CFI EndBlock cfiPicker693

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond694 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_29
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond695 Using cfiCommon0
        CFI (cfiCond695) NoFunction
        CFI (cfiCond695) Conditional ??CrossCallReturnLabel_30
        CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond695) CFA_SP SP+0
        CFI (cfiCond695) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker696 Using cfiCommon1
        CFI (cfiPicker696) NoFunction
        CFI (cfiPicker696) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_125:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond694
        CFI EndBlock cfiCond695
        CFI EndBlock cfiPicker696

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
        CFI Block cfiCond697 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_24
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond698 Using cfiCommon0
        CFI (cfiCond698) NoFunction
        CFI (cfiCond698) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_25
        CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond698) CFA_SP SP+0
        CFI (cfiCond698) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond699 Using cfiCommon0
        CFI (cfiCond699) NoFunction
        CFI (cfiCond699) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_29
        CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond699) CFA_SP SP+0
        CFI (cfiCond699) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond700 Using cfiCommon0
        CFI (cfiCond700) NoFunction
        CFI (cfiCond700) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_30
        CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond700) CFA_SP SP+0
        CFI (cfiCond700) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker701 Using cfiCommon1
        CFI (cfiPicker701) NoFunction
        CFI (cfiPicker701) Picker
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_152:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond697
        CFI EndBlock cfiCond698
        CFI EndBlock cfiCond699
        CFI EndBlock cfiCond700
        CFI EndBlock cfiPicker701

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
        CFI Block cfiCond702 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_16
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond703 Using cfiCommon0
        CFI (cfiCond703) NoFunction
        CFI (cfiCond703) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_17
        CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond703) CFA_SP SP+0
        CFI (cfiCond703) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond704 Using cfiCommon0
        CFI (cfiCond704) NoFunction
        CFI (cfiCond704) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_24
        CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond704) CFA_SP SP+0
        CFI (cfiCond704) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond705 Using cfiCommon0
        CFI (cfiCond705) NoFunction
        CFI (cfiCond705) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_25
        CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond705) CFA_SP SP+0
        CFI (cfiCond705) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond706 Using cfiCommon0
        CFI (cfiCond706) NoFunction
        CFI (cfiCond706) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_29
        CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond706) CFA_SP SP+0
        CFI (cfiCond706) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond707 Using cfiCommon0
        CFI (cfiCond707) NoFunction
        CFI (cfiCond707) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_30
        CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond707) CFA_SP SP+0
        CFI (cfiCond707) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker708 Using cfiCommon1
        CFI (cfiPicker708) NoFunction
        CFI (cfiPicker708) Picker
        MOV     DPTR,#st + 2
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        RET
        CFI EndBlock cfiCond702
        CFI EndBlock cfiCond703
        CFI EndBlock cfiCond704
        CFI EndBlock cfiCond705
        CFI EndBlock cfiCond706
        CFI EndBlock cfiCond707
        CFI EndBlock cfiPicker708

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond709 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_9
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond710 Using cfiCommon0
        CFI (cfiCond710) NoFunction
        CFI (cfiCond710) Conditional ??CrossCallReturnLabel_10
        CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond710) CFA_SP SP+0
        CFI (cfiCond710) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker711 Using cfiCommon1
        CFI (cfiPicker711) NoFunction
        CFI (cfiPicker711) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x18
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,?V0 + 2
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL   ??I2C_Write?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond709
        CFI EndBlock cfiCond710
        CFI EndBlock cfiPicker711

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
        CFI Block cfiCond712 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_56
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond713 Using cfiCommon0
        CFI (cfiCond713) NoFunction
        CFI (cfiCond713) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_57
        CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond713) CFA_SP SP+0
        CFI (cfiCond713) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond714 Using cfiCommon0
        CFI (cfiCond714) NoFunction
        CFI (cfiCond714) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_9
        CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond714) CFA_SP SP+0
        CFI (cfiCond714) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond715 Using cfiCommon0
        CFI (cfiCond715) NoFunction
        CFI (cfiCond715) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_10
        CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond715) CFA_SP SP+0
        CFI (cfiCond715) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker716 Using cfiCommon1
        CFI (cfiPicker716) NoFunction
        CFI (cfiPicker716) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond712
        CFI EndBlock cfiCond713
        CFI EndBlock cfiCond714
        CFI EndBlock cfiCond715
        CFI EndBlock cfiPicker716
// 2447 
// 2448 /**
// 2449  *  @brief      Load and verify DMP image.
// 2450  *  @param[in]  length      Length of DMP image.
// 2451  *  @param[in]  firmware    DMP code.
// 2452  *  @param[in]  start_addr  Starting address of DMP code memory.
// 2453  *  @param[in]  sample_rate Fixed sampling rate used when DMP is enabled.
// 2454  *  @return     0 if successful.
// 2455  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2456 int mpu_load_firmware(unsigned short length, const unsigned char *firmware,
mpu_load_firmware:
        CFI Block cfiBlock717 Using cfiCommon0
        CFI Function mpu_load_firmware
        CODE
// 2457     unsigned short start_addr, unsigned short sample_rate)
// 2458 {
        FUNCALL mpu_load_firmware, mpu_write_mem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, mpu_read_mem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_load_firmware, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x28
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_62:
        MOV     A,#0x2a
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
// 2459     unsigned short ii;
// 2460     unsigned short this_write;
// 2461     /* Must divide evenly into st.hw->bank_size to avoid bank crossings. */
// 2462 #define LOAD_CHUNK  (16)
// 2463     unsigned char cur[LOAD_CHUNK], tmp[2];
// 2464 
// 2465     if (st.chip_cfg.dmp_loaded)
        MOV     DPTR,#st + 30
        MOVX    A,@DPTR
        JZ      ??mpu_load_firmware_0
// 2466         /* DMP should only be loaded once. */
// 2467         return -1;
??mpu_load_firmware_1:
        MOV     R2,#-0x1
??mpu_load_firmware_2:
        MOV     R3,#-0x1
        LJMP    ??CrossCallReturnLabel_250 & 0xFFFF
// 2468 
// 2469     if (!firmware)
??mpu_load_firmware_0:
        MOV     A,R4
        ORL     A,?V0 + 5
        JZ      ??mpu_load_firmware_1
// 2470         return -1;
// 2471     for (ii = 0; ii < length; ii += this_write) {
        MOV     R6,#0x0
        MOV     R7,#0x0
        SJMP    ??mpu_load_firmware_3
??mpu_load_firmware_4:
        MOV     A,R6
        ADD     A,?V0 + 10
        MOV     R6,A
        MOV     A,R7
        ADDC    A,?V0 + 11
        MOV     R7,A
??mpu_load_firmware_3:
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 2
        MOV     A,R7
        SUBB    A,?V0 + 3
        JC      $+5
        LJMP    ??mpu_load_firmware_5 & 0xFFFF
// 2472         this_write = min(LOAD_CHUNK, length - ii);
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R6
        MOV     R0,A
        MOV     A,?V0 + 3
        SUBB    A,R7
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x11
        MOV     A,R1
        SUBB    A,#0x0
        JC      ??mpu_load_firmware_6
        MOV     ?V0 + 10,#0x10
        MOV     ?V0 + 11,#0x0
        SJMP    ??mpu_load_firmware_7
??mpu_load_firmware_6:
        MOV     ?V0 + 10,R0
        MOV     ?V0 + 11,R1
// 2473         if (mpu_write_mem(ii, this_write, (unsigned char*)&firmware[ii]))
??mpu_load_firmware_7:
        MOV     A,?V0 + 4
        ADD     A,R6
        MOV     ?V0 + 12,A
        MOV     A,?V0 + 5
        ADDC    A,R7
        MOV     ?V0 + 13,A
        ; Setup parameters for call to function mpu_write_mem
        MOV     R0,#?V0 + 12
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 42)
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??mpu_write_mem?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??mpu_load_firmware_1
// 2474             return -1;
// 2475         if (mpu_read_mem(ii, this_write, cur))
        ; Setup parameters for call to function mpu_read_mem
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 8,DPL
        MOV     ?V0 + 9,DPH
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 42)
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??mpu_read_mem?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JZ      $+5
        LJMP    ??mpu_load_firmware_1 & 0xFFFF
// 2476             return -1;
// 2477         if (memcmp(firmware+ii, cur, this_write))
        ; Setup parameters for call to function memcmp
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 12
        MOV     R3,?V0 + 13
        LCALL   ??memcmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 9,R3
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     $+5
        LJMP    ??mpu_load_firmware_4 & 0xFFFF
// 2478             return -2;
        MOV     R2,#-0x2
        LJMP    ??mpu_load_firmware_2 & 0xFFFF
// 2479     }
// 2480 
// 2481     /* Set program start address. */
// 2482     tmp[0] = start_addr >> 8;
??mpu_load_firmware_5:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
// 2483     tmp[1] = start_addr & 0xFF;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ?Subroutine60 & 0xFFFF
// 2484     if (i2c_write(st.hw->addr, st.reg->prgm_start_h, 2, tmp))
??CrossCallReturnLabel_94:
        MOVX    A,@DPTR
        ADD     A,#0x1a
        LCALL   ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_292:
        JZ      $+5
        LJMP    ??mpu_load_firmware_1 & 0xFFFF
// 2485         return -1;
// 2486 
// 2487     st.chip_cfg.dmp_loaded = 1;
        MOV     DPTR,#st + 30
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2488     st.chip_cfg.dmp_sample_rate = sample_rate;
        INC     DPTR
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 7
        LCALL   ??Subroutine131_0 & 0xFFFF
// 2489     return 0;
??CrossCallReturnLabel_250:
        MOV     A,#0x12
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock717
// 2490 }
// 2491 
// 2492 /**
// 2493  *  @brief      Enable/disable DMP support.
// 2494  *  @param[in]  enable  1 to turn on the DMP.
// 2495  *  @return     0 if successful.
// 2496  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2497 int mpu_set_dmp_state(unsigned char enable)
mpu_set_dmp_state:
        CFI Block cfiBlock718 Using cfiCommon0
        CFI Function mpu_set_dmp_state
        CODE
// 2498 {
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_set_bypass
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_set_dmp_state, mpu_reset_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     R6,A
// 2499     unsigned char tmp;
// 2500     if (st.chip_cfg.dmp_on == enable)
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??mpu_set_dmp_state_0
// 2501         return 0;
??mpu_set_dmp_state_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??mpu_set_dmp_state_2:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        LJMP    ?Subroutine4 & 0xFFFF
        CFI CFA_XSP16 add(XSP16, 10)
// 2502 
// 2503     if (enable) {
??mpu_set_dmp_state_0:
        MOV     A,R6
        JZ      ??mpu_set_dmp_state_3
// 2504         if (!st.chip_cfg.dmp_loaded)
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??mpu_set_dmp_state_4
// 2505             return -1;
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        SJMP    ??mpu_set_dmp_state_2
// 2506         /* Disable data ready interrupt. */
// 2507         set_int_enable(0);
??mpu_set_dmp_state_4:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2508         /* Disable bypass mode. */
// 2509         mpu_set_bypass(0);
        ; Setup parameters for call to function mpu_set_bypass
        MOV     R1,#0x0
        LCALL   ??mpu_set_bypass?relay
// 2510         /* Keep constant sample rate, FIFO rate controlled by DMP. */
// 2511         mpu_set_sample_rate(st.chip_cfg.dmp_sample_rate);
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     DPTR,#st + 31
        LCALL   ?Subroutine38 & 0xFFFF
// 2512         /* Remove FIFO elements. */
// 2513         tmp = 0;
??CrossCallReturnLabel_45:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine29 & 0xFFFF
// 2514         i2c_write(st.hw->addr, 0x23, 1, &tmp);
// 2515         st.chip_cfg.dmp_on = 1;
??CrossCallReturnLabel_33:
        MOV     A,#0x1
        MOVX    @DPTR,A
// 2516         /* Enable DMP interrupt. */
// 2517         set_int_enable(1);
        ; Setup parameters for call to function set_int_enable
        MOV     R1,A
        LCALL   ??set_int_enable?relay
// 2518         mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
??mpu_set_dmp_state_5:
        LCALL   ??mpu_reset_fifo?relay
        SJMP    ??mpu_set_dmp_state_1
// 2519     } else {
// 2520         /* Disable DMP interrupt. */
// 2521         set_int_enable(0);
??mpu_set_dmp_state_3:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2522         /* Restore FIFO settings. */
// 2523         tmp = st.chip_cfg.fifo_enable;
        MOV     DPTR,#st + 11
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL   ?Subroutine29 & 0xFFFF
// 2524         i2c_write(st.hw->addr, 0x23, 1, &tmp);
// 2525         st.chip_cfg.dmp_on = 0;
??CrossCallReturnLabel_34:
        CLR     A
        MOVX    @DPTR,A
// 2526         mpu_reset_fifo();
        ; Setup parameters for call to function mpu_reset_fifo
        SJMP    ??mpu_set_dmp_state_5
        CFI EndBlock cfiBlock718
// 2527     }
// 2528     return 0;
// 2529 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
        CFI Block cfiCond719 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_44
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond720 Using cfiCommon0
        CFI (cfiCond720) NoFunction
        CFI (cfiCond720) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond720) CFA_SP SP+0
        CFI (cfiCond720) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond721 Using cfiCommon0
        CFI (cfiCond721) NoFunction
        CFI (cfiCond721) Conditional ??CrossCallReturnLabel_46
        CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond721) CFA_SP SP+0
        CFI (cfiCond721) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker722 Using cfiCommon1
        CFI (cfiPicker722) NoFunction
        CFI (cfiPicker722) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL   ??mpu_set_sample_rate?relay
        RET
        CFI EndBlock cfiCond719
        CFI EndBlock cfiCond720
        CFI EndBlock cfiCond721
        CFI EndBlock cfiPicker722

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond723 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_33
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond724 Using cfiCommon0
        CFI (cfiCond724) NoFunction
        CFI (cfiCond724) Conditional ??CrossCallReturnLabel_34
        CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond724) CFA_SP SP+0
        CFI (cfiCond724) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker725 Using cfiCommon1
        CFI (cfiPicker725) NoFunction
        CFI (cfiPicker725) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV     R2,#0x23
        LCALL   ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     DPTR,#st + 29
        RET
        CFI EndBlock cfiCond723
        CFI EndBlock cfiCond724
        CFI EndBlock cfiPicker725
// 2530 
// 2531 /**
// 2532  *  @brief      Get DMP state.
// 2533  *  @param[out] enabled 1 if enabled.
// 2534  *  @return     0 if successful.
// 2535  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2536 int mpu_get_dmp_state(unsigned char *enabled)
mpu_get_dmp_state:
        CFI Block cfiBlock726 Using cfiCommon0
        CFI Function mpu_get_dmp_state
        CODE
// 2537 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2538     enabled[0] = st.chip_cfg.dmp_on;
        MOV     DPTR,#st + 29
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock726
// 2539     return 0;
// 2540 }
// 2541 
// 2542 
// 2543 /* This initialization is similar to the one in ak8975.c. */
// 2544 //static int setup_compass(void)
// 2545 //{
// 2546 //#ifdef AK89xx_SECONDARY
// 2547 //    unsigned char data[4], akm_addr;
// 2548 //
// 2549 //    mpu_set_bypass(1);
// 2550 //
// 2551 //    /* Find compass. Possible addresses range from 0x0C to 0x0F. */
// 2552 //    for (akm_addr = 0x0C; akm_addr <= 0x0F; akm_addr++) {
// 2553 //        int result;
// 2554 //        result = i2c_read(akm_addr, AKM_REG_WHOAMI, 1, data);
// 2555 //        if (!result && (data[0] == AKM_WHOAMI))
// 2556 //            break;
// 2557 //    }
// 2558 //
// 2559 //    if (akm_addr > 0x0F) {
// 2560 //        /* TODO: Handle this case in all compass-related functions. */
// 2561 //        log_e("Compass not found.\n");
// 2562 //        return -1;
// 2563 //    }
// 2564 //
// 2565 //    st.chip_cfg.compass_addr = akm_addr;
// 2566 //
// 2567 //    data[0] = AKM_POWER_DOWN;
// 2568 //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2569 //        return -1;
// 2570 //    delay_ms(1);
// 2571 //
// 2572 //    data[0] = AKM_FUSE_ROM_ACCESS;
// 2573 //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2574 //        return -1;
// 2575 //    delay_ms(1);
// 2576 //
// 2577 //    /* Get sensitivity adjustment data from fuse ROM. */
// 2578 //    if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ASAX, 3, data))
// 2579 //        return -1;
// 2580 //    st.chip_cfg.mag_sens_adj[0] = (long)data[0] + 128;
// 2581 //    st.chip_cfg.mag_sens_adj[1] = (long)data[1] + 128;
// 2582 //    st.chip_cfg.mag_sens_adj[2] = (long)data[2] + 128;
// 2583 //
// 2584 //    data[0] = AKM_POWER_DOWN;
// 2585 //    if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, data))
// 2586 //        return -1;
// 2587 //    delay_ms(1);
// 2588 //
// 2589 //    mpu_set_bypass(0);
// 2590 //
// 2591 //    /* Set up master mode, master clock, and ES bit. */
// 2592 //    data[0] = 0x40;
// 2593 //    if (i2c_write(st.hw->addr, st.reg->i2c_mst, 1, data))
// 2594 //        return -1;
// 2595 //
// 2596 //    /* Slave 0 reads from AKM data registers. */
// 2597 //    data[0] = BIT_I2C_READ | st.chip_cfg.compass_addr;
// 2598 //    if (i2c_write(st.hw->addr, st.reg->s0_addr, 1, data))
// 2599 //        return -1;
// 2600 //
// 2601 //    /* Compass reads start at this register. */
// 2602 //    data[0] = AKM_REG_ST1;
// 2603 //    if (i2c_write(st.hw->addr, st.reg->s0_reg, 1, data))
// 2604 //        return -1;
// 2605 //
// 2606 //    /* Enable slave 0, 8-byte reads. */
// 2607 //    data[0] = BIT_SLAVE_EN | 8;
// 2608 //    if (i2c_write(st.hw->addr, st.reg->s0_ctrl, 1, data))
// 2609 //        return -1;
// 2610 //
// 2611 //    /* Slave 1 changes AKM measurement mode. */
// 2612 //    data[0] = st.chip_cfg.compass_addr;
// 2613 //    if (i2c_write(st.hw->addr, st.reg->s1_addr, 1, data))
// 2614 //        return -1;
// 2615 //
// 2616 //    /* AKM measurement mode register. */
// 2617 //    data[0] = AKM_REG_CNTL;
// 2618 //    if (i2c_write(st.hw->addr, st.reg->s1_reg, 1, data))
// 2619 //        return -1;
// 2620 //
// 2621 //    /* Enable slave 1, 1-byte writes. */
// 2622 //    data[0] = BIT_SLAVE_EN | 1;
// 2623 //    if (i2c_write(st.hw->addr, st.reg->s1_ctrl, 1, data))
// 2624 //        return -1;
// 2625 //
// 2626 //    /* Set slave 1 data. */
// 2627 //    data[0] = AKM_SINGLE_MEASUREMENT;
// 2628 //    if (i2c_write(st.hw->addr, st.reg->s1_do, 1, data))
// 2629 //        return -1;
// 2630 //
// 2631 //    /* Trigger slave 0 and slave 1 actions at each sample. */
// 2632 //    data[0] = 0x03;
// 2633 //    if (i2c_write(st.hw->addr, st.reg->i2c_delay_ctrl, 1, data))
// 2634 //        return -1;
// 2635 //
// 2636 //#ifdef MPU9150
// 2637 //    /* For the MPU9150, the auxiliary I2C bus needs to be set to VDD. */
// 2638 //    data[0] = BIT_I2C_MST_VDDIO;
// 2639 //    if (i2c_write(st.hw->addr, st.reg->yg_offs_tc, 1, data))
// 2640 //        return -1;
// 2641 //#endif
// 2642 //
// 2643 //    return 0;
// 2644 //#else
// 2645 //    return -1;
// 2646 //#endif
// 2647 //}
// 2648 
// 2649 /**
// 2650  *  @brief      Read raw compass data.
// 2651  *  @param[out] data        Raw data in hardware units.
// 2652  *  @param[out] timestamp   Timestamp in milliseconds. Null if not needed.
// 2653  *  @return     0 if successful.
// 2654  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2655 int mpu_get_compass_reg(short *data, unsigned long *timestamp)
mpu_get_compass_reg:
        CFI Block cfiBlock727 Using cfiCommon0
        CFI Function mpu_get_compass_reg
        CODE
// 2656 {
        ; Saved register size: 0
        ; Auto size: 0
// 2657 #ifdef AK89xx_SECONDARY
// 2658     unsigned char tmp[9];
// 2659 
// 2660     if (!(st.chip_cfg.sensors & INV_XYZ_COMPASS))
// 2661         return -1;
// 2662 
// 2663 #ifdef AK89xx_BYPASS
// 2664     if (i2c_read(st.chip_cfg.compass_addr, AKM_REG_ST1, 8, tmp))
// 2665         return -1;
// 2666     tmp[8] = AKM_SINGLE_MEASUREMENT;
// 2667     if (i2c_write(st.chip_cfg.compass_addr, AKM_REG_CNTL, 1, tmp+8))
// 2668         return -1;
// 2669 #else
// 2670     if (i2c_read(st.hw->addr, st.reg->raw_compass, 8, tmp))
// 2671         return -1;
// 2672 #endif
// 2673 
// 2674 #if defined AK8975_SECONDARY
// 2675     /* AK8975 doesn't have the overrun error bit. */
// 2676     if (!(tmp[0] & AKM_DATA_READY))
// 2677         return -2;
// 2678     if ((tmp[7] & AKM_OVERFLOW) || (tmp[7] & AKM_DATA_ERROR))
// 2679         return -3;
// 2680 #elif defined AK8963_SECONDARY
// 2681     /* AK8963 doesn't have the data read error bit. */
// 2682     if (!(tmp[0] & AKM_DATA_READY) || (tmp[0] & AKM_DATA_OVERRUN))
// 2683         return -2;
// 2684     if (tmp[7] & AKM_OVERFLOW)
// 2685         return -3;
// 2686 #endif
// 2687     data[0] = (tmp[2] << 8) | tmp[1];
// 2688     data[1] = (tmp[4] << 8) | tmp[3];
// 2689     data[2] = (tmp[6] << 8) | tmp[5];
// 2690 
// 2691     data[0] = ((long)data[0] * st.chip_cfg.mag_sens_adj[0]) >> 8;
// 2692     data[1] = ((long)data[1] * st.chip_cfg.mag_sens_adj[1]) >> 8;
// 2693     data[2] = ((long)data[2] * st.chip_cfg.mag_sens_adj[2]) >> 8;
// 2694 
// 2695     if (timestamp)
// 2696         get_ms(timestamp);
// 2697     return 0;
// 2698 #else
// 2699     return -1;
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock727
// 2700 #endif
// 2701 }
// 2702 
// 2703 /**
// 2704  *  @brief      Get the compass full-scale range.
// 2705  *  @param[out] fsr Current full-scale range.
// 2706  *  @return     0 if successful.
// 2707  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2708 int mpu_get_compass_fsr(unsigned short *fsr)
mpu_get_compass_fsr:
        CFI Block cfiBlock728 Using cfiCommon0
        CFI Function mpu_get_compass_fsr
        CODE
// 2709 {
        ; Saved register size: 0
        ; Auto size: 0
// 2710 #ifdef AK89xx_SECONDARY
// 2711     fsr[0] = st.hw->compass_fsr;
// 2712     return 0;
// 2713 #else
// 2714     return -1;
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock728
// 2715 #endif
// 2716 }
// 2717 
// 2718 /**
// 2719  *  @brief      Enters LP accel motion interrupt mode.
// 2720  *  The behavior of this feature is very different between the MPU6050 and the
// 2721  *  MPU6500. Each chip's version of this feature is explained below.
// 2722  *
// 2723  *  \n MPU6050:
// 2724  *  \n When this mode is first enabled, the hardware captures a single accel
// 2725  *  sample, and subsequent samples are compared with this one to determine if
// 2726  *  the device is in motion. Therefore, whenever this "locked" sample needs to
// 2727  *  be changed, this function must be called again.
// 2728  *
// 2729  *  \n The hardware motion threshold can be between 32mg and 8160mg in 32mg
// 2730  *  increments.
// 2731  *
// 2732  *  \n Low-power accel mode supports the following frequencies:
// 2733  *  \n 1.25Hz, 5Hz, 20Hz, 40Hz
// 2734  *
// 2735  *  \n MPU6500:
// 2736  *  \n Unlike the MPU6050 version, the hardware does not "lock in" a reference
// 2737  *  sample. The hardware monitors the accel data and detects any large change
// 2738  *  over a short period of time.
// 2739  *
// 2740  *  \n The hardware motion threshold can be between 4mg and 1020mg in 4mg
// 2741  *  increments.
// 2742  *
// 2743  *  \n MPU6500 Low-power accel mode supports the following frequencies:
// 2744  *  \n 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz
// 2745  *
// 2746  *  \n\n NOTES:
// 2747  *  \n The driver will round down @e thresh to the nearest supported value if
// 2748  *  an unsupported threshold is selected.
// 2749  *  \n To select a fractional wake-up frequency, round down the value passed to
// 2750  *  @e lpa_freq.
// 2751  *  \n The MPU6500 does not support a delay parameter. If this function is used
// 2752  *  for the MPU6500, the value passed to @e time will be ignored.
// 2753  *  \n To disable this mode, set @e lpa_freq to zero. The driver will restore
// 2754  *  the previous configuration.
// 2755  *
// 2756  *  @param[in]  thresh      Motion threshold in mg.
// 2757  *  @param[in]  time        Duration in milliseconds that the accel data must
// 2758  *                          exceed @e thresh before motion is reported.
// 2759  *  @param[in]  lpa_freq    Minimum sampling rate, or zero to disable.
// 2760  *  @return     0 if successful.
// 2761  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2762 int mpu_lp_motion_interrupt(unsigned short thresh, unsigned char time,
mpu_lp_motion_interrupt:
        CFI Block cfiBlock729 Using cfiCommon0
        CFI Function mpu_lp_motion_interrupt
        CODE
// 2763     unsigned char lpa_freq)
// 2764 {
        FUNCALL mpu_lp_motion_interrupt, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_get_fifo_config
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, set_int_enable
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_lp_accel_mode
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, I2C_Write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_sensors
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_gyro_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_accel_fsr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_lpf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_sample_rate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_configure_fifo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mpu_lp_motion_interrupt, mpu_set_dmp_state
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,R1
        MOV     R7,A
        MOV     A,R4
        MOV     R6,A
// 2765     unsigned char data[3];
// 2766 
// 2767     if (lpa_freq) {
        JNZ     $+5
        LJMP    ??mpu_lp_motion_interrupt_0 & 0xFFFF
// 2768         unsigned char thresh_hw;
// 2769 
// 2770 #if defined MPU6050
// 2771         /* TODO: Make these const/#defines. */
// 2772         /* 1LSb = 32mg. */
// 2773         if (thresh > 8160)
        CLR     C
        MOV     A,R2
        SUBB    A,#-0x1f
        MOV     A,R3
        SUBB    A,#0x1f
        JC      ??mpu_lp_motion_interrupt_1
// 2774             thresh_hw = 255;
        MOV     ?V0 + 0,#-0x1
        SJMP    ??mpu_lp_motion_interrupt_2
// 2775         else if (thresh < 32)
??mpu_lp_motion_interrupt_1:
        CLR     C
        MOV     A,R2
        SUBB    A,#0x20
        MOV     A,R3
        SUBB    A,#0x0
        JNC     ??mpu_lp_motion_interrupt_3
// 2776             thresh_hw = 1;
        MOV     ?V0 + 0,#0x1
        SJMP    ??mpu_lp_motion_interrupt_2
// 2777         else
// 2778             thresh_hw = thresh >> 5;
??mpu_lp_motion_interrupt_3:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x5
        MOV     R0,#?V0 + 0
        LCALL   ?US_SHR
// 2779 #elif defined MPU6500
// 2780         /* 1LSb = 4mg. */
// 2781         if (thresh > 1020)
// 2782             thresh_hw = 255;
// 2783         else if (thresh < 4)
// 2784             thresh_hw = 1;
// 2785         else
// 2786             thresh_hw = thresh >> 2;
// 2787 #endif
// 2788 
// 2789         if (!time)
??mpu_lp_motion_interrupt_2:
        MOV     A,R7
        JNZ     ??mpu_lp_motion_interrupt_4
// 2790             /* Minimum duration must be 1ms. */
// 2791             time = 1;
        MOV     R7,#0x1
// 2792 
// 2793 #if defined MPU6050
// 2794         if (lpa_freq > 40)
??mpu_lp_motion_interrupt_4:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x29
        JC      ??mpu_lp_motion_interrupt_5
// 2795 #elif defined MPU6500
// 2796         if (lpa_freq > 640)
// 2797 #endif
// 2798             /* At this point, the chip has not been re-configured, so the
// 2799              * function can safely exit.
// 2800              */
// 2801             return -1;
??mpu_lp_motion_interrupt_6:
        MOV     R2,#-0x1
        MOV     R3,#-0x1
        LJMP    ??mpu_lp_motion_interrupt_7 & 0xFFFF
// 2802 
// 2803         if (!st.chip_cfg.int_motion_only) {
??mpu_lp_motion_interrupt_5:
        MOV     DPTR,#st + 16
        MOVX    A,@DPTR
        JNZ     ??mpu_lp_motion_interrupt_8
// 2804             /* Store current settings for later. */
// 2805             if (st.chip_cfg.dmp_on) {
        MOV     DPTR,#st + 29
        MOVX    A,@DPTR
        JZ      ??mpu_lp_motion_interrupt_9
// 2806                 mpu_set_dmp_state(0);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x0
        LCALL   ??mpu_set_dmp_state?relay
// 2807                 st.chip_cfg.cache.dmp_on = 1;
        MOV     DPTR,#st + 26
        MOV     A,#0x1
        SJMP    ??mpu_lp_motion_interrupt_10
// 2808             } else
// 2809                 st.chip_cfg.cache.dmp_on = 0;
??mpu_lp_motion_interrupt_9:
        MOV     DPTR,#st + 26
        CLR     A
??mpu_lp_motion_interrupt_10:
        MOVX    @DPTR,A
// 2810             mpu_get_gyro_fsr(&st.chip_cfg.cache.gyro_fsr);
        ; Setup parameters for call to function mpu_get_gyro_fsr
        MOV     R2,#(st + 17) & 0xff
        MOV     R3,#((st + 17) >> 8) & 0xff
        LCALL   ??mpu_get_gyro_fsr?relay
// 2811             mpu_get_accel_fsr(&st.chip_cfg.cache.accel_fsr);
        ; Setup parameters for call to function mpu_get_accel_fsr
        MOV     R2,#(st + 19) & 0xff
        MOV     R3,#((st + 19) >> 8) & 0xff
        LCALL   ??mpu_get_accel_fsr?relay
// 2812             mpu_get_lpf(&st.chip_cfg.cache.lpf);
        ; Setup parameters for call to function mpu_get_lpf
        MOV     R2,#(st + 20) & 0xff
        MOV     R3,#((st + 20) >> 8) & 0xff
        LCALL   ??mpu_get_lpf?relay
// 2813             mpu_get_sample_rate(&st.chip_cfg.cache.sample_rate);
        ; Setup parameters for call to function mpu_get_sample_rate
        MOV     R2,#(st + 22) & 0xff
        MOV     R3,#((st + 22) >> 8) & 0xff
        LCALL   ??mpu_get_sample_rate?relay
// 2814             st.chip_cfg.cache.sensors_on = st.chip_cfg.sensors;
        MOV     DPTR,#st + 6
        MOVX    A,@DPTR
        MOV     DPTR,#st + 24
        MOVX    @DPTR,A
// 2815             mpu_get_fifo_config(&st.chip_cfg.cache.fifo_sensors);
        ; Setup parameters for call to function mpu_get_fifo_config
        MOV     R2,#(st + 25) & 0xff
        MOV     R3,#((st + 25) >> 8) & 0xff
        LCALL   ??mpu_get_fifo_config?relay
// 2816         }
// 2817 
// 2818 #ifdef MPU6050
// 2819         /* Disable hardware interrupts for now. */
// 2820         set_int_enable(0);
??mpu_lp_motion_interrupt_8:
        ; Setup parameters for call to function set_int_enable
        MOV     R1,#0x0
        LCALL   ??set_int_enable?relay
// 2821 
// 2822         /* Enter full-power accel-only mode. */
// 2823         mpu_lp_accel_mode(0);
        ; Setup parameters for call to function mpu_lp_accel_mode
        MOV     R1,#0x0
        LCALL   ??mpu_lp_accel_mode?relay
// 2824 
// 2825         /* Override current LPF (and HPF) settings to obtain a valid accel
// 2826          * reading.
// 2827          */
// 2828         data[0] = INV_FILTER_256HZ_NOLPF2;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine35 & 0xFFFF
// 2829         if (i2c_write(st.hw->addr, st.reg->lpf, 1, data))
??CrossCallReturnLabel_201:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_14:
        JNZ     ??mpu_lp_motion_interrupt_6
// 2830             return -1;
// 2831 
// 2832         /* NOTE: Digital high pass filter should be configured here. Since this
// 2833          * driver doesn't modify those bits anywhere, they should already be
// 2834          * cleared by default.
// 2835          */
// 2836 
// 2837         /* Configure the device to send motion interrupts. */
// 2838         /* Enable motion interrupt. */
// 2839         data[0] = BIT_MOT_INT_EN;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x40
        LCALL   ??Subroutine132_0 & 0xFFFF
// 2840         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
??CrossCallReturnLabel_258:
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_82:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_15:
        JZ      $+5
        LJMP    ??mpu_lp_motion_interrupt_11 & 0xFFFF
// 2841             goto lp_int_restore;
// 2842 
// 2843         /* Set motion interrupt parameters. */
// 2844         data[0] = thresh_hw;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 2845         data[1] = time;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        LCALL   ?Subroutine60 & 0xFFFF
// 2846         if (i2c_write(st.hw->addr, st.reg->motion_thr, 2, data))
??CrossCallReturnLabel_95:
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_215:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_317:
        JZ      $+5
        LJMP    ??mpu_lp_motion_interrupt_11 & 0xFFFF
// 2847             goto lp_int_restore;
// 2848 
// 2849         /* Force hardware to "lock" current accel sample. */
// 2850         delay_ms(5);
        ; Setup parameters for call to function delay_ms
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??delay_ms?relay
// 2851         data[0] = (st.chip_cfg.accel_fsr << 3) | BITS_HPF;
        MOV     DPTR,#st + 5
        MOVX    A,@DPTR
        RLC     A
        RLC     A
        RLC     A
        ANL     A,#0xf8
        ORL     A,#0x7
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine23 & 0xFFFF
// 2852         if (i2c_write(st.hw->addr, st.reg->accel_cfg, 1, data))
??CrossCallReturnLabel_213:
        LCALL   ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_318:
        JNZ     ??mpu_lp_motion_interrupt_11
// 2853             goto lp_int_restore;
// 2854 
// 2855         /* Set up LP accel mode. */
// 2856         data[0] = BIT_LPA_CYCLE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x20
        MOVX    @DPTR,A
// 2857         if (lpa_freq == 1)
        MOV     A,#0x1
        XRL     A,R6
        JNZ     ??mpu_lp_motion_interrupt_12
// 2858             data[1] = INV_LPA_1_25HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        SJMP    ??mpu_lp_motion_interrupt_13
// 2859         else if (lpa_freq <= 5)
??mpu_lp_motion_interrupt_12:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x6
        JNC     ??mpu_lp_motion_interrupt_14
// 2860             data[1] = INV_LPA_5HZ;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        SJMP    ??mpu_lp_motion_interrupt_13
// 2861         else if (lpa_freq <= 20)
??mpu_lp_motion_interrupt_14:
        MOV     A,R6
        CLR     C
        SUBB    A,#0x15
        MOV     A,#0x1
        JNC     ??mpu_lp_motion_interrupt_15
// 2862             data[1] = INV_LPA_20HZ;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        SJMP    ??mpu_lp_motion_interrupt_13
// 2863         else
// 2864             data[1] = INV_LPA_40HZ;
??mpu_lp_motion_interrupt_15:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
??mpu_lp_motion_interrupt_13:
        MOVX    @DPTR,A
// 2865         data[1] = (data[1] << 6) | BIT_STBY_XYZG;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine10 & 0xFFFF
// 2866         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 2, data))
??CrossCallReturnLabel_273:
        JNZ     ??mpu_lp_motion_interrupt_11
// 2867             goto lp_int_restore;
// 2868 
// 2869         st.chip_cfg.int_motion_only = 1;
        MOV     DPTR,#st + 16
        MOV     A,#0x1
        LCALL   ??Subroutine131_0 & 0xFFFF
// 2870         return 0;
// 2871 #elif defined MPU6500
// 2872         /* Disable hardware interrupts. */
// 2873         set_int_enable(0);
// 2874 
// 2875         /* Enter full-power accel-only mode, no FIFO/DMP. */
// 2876         data[0] = 0;
// 2877         data[1] = 0;
// 2878         data[2] = BIT_STBY_XYZG;
// 2879         if (i2c_write(st.hw->addr, st.reg->user_ctrl, 3, data))
// 2880             goto lp_int_restore;
// 2881 
// 2882         /* Set motion threshold. */
// 2883         data[0] = thresh_hw;
// 2884         if (i2c_write(st.hw->addr, st.reg->motion_thr, 1, data))
// 2885             goto lp_int_restore;
// 2886 
// 2887         /* Set wake frequency. */
// 2888         if (lpa_freq == 1)
// 2889             data[0] = INV_LPA_1_25HZ;
// 2890         else if (lpa_freq == 2)
// 2891             data[0] = INV_LPA_2_5HZ;
// 2892         else if (lpa_freq <= 5)
// 2893             data[0] = INV_LPA_5HZ;
// 2894         else if (lpa_freq <= 10)
// 2895             data[0] = INV_LPA_10HZ;
// 2896         else if (lpa_freq <= 20)
// 2897             data[0] = INV_LPA_20HZ;
// 2898         else if (lpa_freq <= 40)
// 2899             data[0] = INV_LPA_40HZ;
// 2900         else if (lpa_freq <= 80)
// 2901             data[0] = INV_LPA_80HZ;
// 2902         else if (lpa_freq <= 160)
// 2903             data[0] = INV_LPA_160HZ;
// 2904         else if (lpa_freq <= 320)
// 2905             data[0] = INV_LPA_320HZ;
// 2906         else
// 2907             data[0] = INV_LPA_640HZ;
// 2908         if (i2c_write(st.hw->addr, st.reg->lp_accel_odr, 1, data))
// 2909             goto lp_int_restore;
// 2910 
// 2911         /* Enable motion interrupt (MPU6500 version). */
// 2912         data[0] = BITS_WOM_EN;
// 2913         if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
// 2914             goto lp_int_restore;
// 2915 
// 2916         /* Enable cycle mode. */
// 2917         data[0] = BIT_LPA_CYCLE;
// 2918         if (i2c_write(st.hw->addr, st.reg->pwr_mgmt_1, 1, data))
// 2919             goto lp_int_restore;
// 2920 
// 2921         /* Enable interrupt. */
// 2922         data[0] = BIT_MOT_INT_EN;
// 2923         if (i2c_write(st.hw->addr, st.reg->int_enable, 1, data))
// 2924             goto lp_int_restore;
// 2925 
// 2926         st.chip_cfg.int_motion_only = 1;
// 2927         return 0;
// 2928 #endif
// 2929     } else {
??CrossCallReturnLabel_251:
        SJMP    ??mpu_lp_motion_interrupt_7
// 2930         /* Don't "restore" the previous state if no state has been saved. */
// 2931         int ii;
// 2932         char *cache_ptr = (char*)&st.chip_cfg.cache;
// 2933         for (ii = 0; ii < sizeof(st.chip_cfg.cache); ii++) {
??mpu_lp_motion_interrupt_0:
        MOV     R0,#0x0
        MOV     R1,#0x0
// 2934             if (cache_ptr[ii] != 0)
??mpu_lp_motion_interrupt_16:
        MOV     A,#(st + 17) & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#((st + 17) >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??mpu_lp_motion_interrupt_11
// 2935                 goto lp_int_restore;
// 2936         }
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0xa
        MOV     A,R1
        SUBB    A,#0x0
        JC      $+5
        LJMP    ??mpu_lp_motion_interrupt_6 & 0xFFFF
        SJMP    ??mpu_lp_motion_interrupt_16
// 2937         /* If we reach this point, motion interrupt mode hasn't been used yet. */
// 2938         return -1;
// 2939     }
// 2940 lp_int_restore:
// 2941     /* Set to invalid values to ensure no I2C writes are skipped. */
// 2942     st.chip_cfg.gyro_fsr = 0xFF;
??mpu_lp_motion_interrupt_11:
        LCALL   ?Subroutine58 & 0xFFFF
// 2943     st.chip_cfg.accel_fsr = 0xFF;
// 2944     st.chip_cfg.lpf = 0xFF;
// 2945     st.chip_cfg.sample_rate = 0xFFFF;
// 2946     st.chip_cfg.sensors = 0xFF;
// 2947     st.chip_cfg.fifo_enable = 0xFF;
// 2948     st.chip_cfg.clk_src = INV_CLK_PLL;
// 2949     mpu_set_sensors(st.chip_cfg.cache.sensors_on);
??CrossCallReturnLabel_93:
        ; Setup parameters for call to function mpu_set_sensors
        MOV     DPTR,#st + 24
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_sensors?relay
// 2950     mpu_set_gyro_fsr(st.chip_cfg.cache.gyro_fsr);
        ; Setup parameters for call to function mpu_set_gyro_fsr
        MOV     DPTR,#st + 17
        LCALL   ?Subroutine49 & 0xFFFF
// 2951     mpu_set_accel_fsr(st.chip_cfg.cache.accel_fsr);
??CrossCallReturnLabel_76:
        ; Setup parameters for call to function mpu_set_accel_fsr
        MOV     DPTR,#st + 19
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_set_accel_fsr?relay
// 2952     mpu_set_lpf(st.chip_cfg.cache.lpf);
        ; Setup parameters for call to function mpu_set_lpf
        MOV     DPTR,#st + 20
        LCALL   ?Subroutine50 & 0xFFFF
// 2953     mpu_set_sample_rate(st.chip_cfg.cache.sample_rate);
??CrossCallReturnLabel_78:
        ; Setup parameters for call to function mpu_set_sample_rate
        MOV     DPTR,#st + 22
        LCALL   ?Subroutine38 & 0xFFFF
// 2954     mpu_configure_fifo(st.chip_cfg.cache.fifo_sensors);
??CrossCallReturnLabel_46:
        ; Setup parameters for call to function mpu_configure_fifo
        MOV     DPTR,#st + 25
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??mpu_configure_fifo?relay
// 2955 
// 2956     if (st.chip_cfg.cache.dmp_on)
        MOV     DPTR,#st + 26
        MOVX    A,@DPTR
        JZ      ??mpu_lp_motion_interrupt_17
// 2957         mpu_set_dmp_state(1);
        ; Setup parameters for call to function mpu_set_dmp_state
        MOV     R1,#0x1
        LCALL   ??mpu_set_dmp_state?relay
// 2958 
// 2959 #ifdef MPU6500
// 2960     /* Disable motion interrupt (MPU6500 version). */
// 2961     data[0] = 0;
// 2962     if (i2c_write(st.hw->addr, st.reg->accel_intel, 1, data))
// 2963         goto lp_int_restore;
// 2964 #endif
// 2965 
// 2966     st.chip_cfg.int_motion_only = 0;
??mpu_lp_motion_interrupt_17:
        MOV     DPTR,#st + 16
        CLR     A
        MOVX    @DPTR,A
// 2967     return 0;
        MOV     R2,A
        MOV     R3,A
??mpu_lp_motion_interrupt_7:
        MOV     A,#0x3
        LJMP    ??Subroutine129_0 & 0xFFFF
        CFI EndBlock cfiBlock729
// 2968 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
        CFI Block cfiCond730 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_247
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond731 Using cfiCommon0
        CFI (cfiCond731) NoFunction
        CFI (cfiCond731) Conditional ??CrossCallReturnLabel_248
        CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond731) CFA_SP SP+0
        CFI (cfiCond731) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker732 Using cfiCommon1
        CFI (cfiPicker732) NoFunction
        CFI (cfiPicker732) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        CFI EndBlock cfiCond730
        CFI EndBlock cfiCond731
        CFI EndBlock cfiPicker732
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine131_0:
        CFI Block cfiCond733 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_249
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond734 Using cfiCommon0
        CFI (cfiCond734) NoFunction
        CFI (cfiCond734) Conditional ??CrossCallReturnLabel_250
        CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond734) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond734) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond734) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond734) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond734) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond734) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond734) CFA_SP SP+0
        CFI (cfiCond734) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond735 Using cfiCommon0
        CFI (cfiCond735) NoFunction
        CFI (cfiCond735) Conditional ??CrossCallReturnLabel_251
        CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond735) CFA_SP SP+0
        CFI (cfiCond735) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond736 Using cfiCommon0
        CFI (cfiCond736) NoFunction
        CFI (cfiCond736) Conditional ??CrossCallReturnLabel_247
        CFI (cfiCond736) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond736) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond736) CFA_SP SP+-5
        CFI Block cfiCond737 Using cfiCommon0
        CFI (cfiCond737) NoFunction
        CFI (cfiCond737) Conditional ??CrossCallReturnLabel_248
        CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond737) CFA_SP SP+0
        CFI (cfiCond737) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker738 Using cfiCommon1
        CFI (cfiPicker738) NoFunction
        CFI (cfiPicker738) Picker
        MOVX    @DPTR,A
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond733
        CFI EndBlock cfiCond734
        CFI EndBlock cfiCond735
        CFI EndBlock cfiCond736
        CFI EndBlock cfiCond737
        CFI EndBlock cfiPicker738

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
        CFI Block cfiCond739 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_94
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond740 Using cfiCommon0
        CFI (cfiCond740) NoFunction
        CFI (cfiCond740) Conditional ??CrossCallReturnLabel_95
        CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond740) CFA_SP SP+0
        CFI (cfiCond740) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker741 Using cfiCommon1
        CFI (cfiPicker741) NoFunction
        CFI (cfiPicker741) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_148:
        MOV     R3,#0x2
        MOV     DPTR,#st
        RET
        CFI EndBlock cfiCond739
        CFI EndBlock cfiCond740
        CFI EndBlock cfiPicker741

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
        CFI Block cfiCond742 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_96
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond743 Using cfiCommon0
        CFI (cfiCond743) NoFunction
        CFI (cfiCond743) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_97
        CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond743) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond743) CFA_SP SP+0
        CFI (cfiCond743) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond744 Using cfiCommon0
        CFI (cfiCond744) NoFunction
        CFI (cfiCond744) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_94
        CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond744) CFA_SP SP+0
        CFI (cfiCond744) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond745 Using cfiCommon0
        CFI (cfiCond745) NoFunction
        CFI (cfiCond745) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_95
        CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond745) CFA_SP SP+0
        CFI (cfiCond745) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker746 Using cfiCommon1
        CFI (cfiPicker746) NoFunction
        CFI (cfiPicker746) Picker
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_265:
        MOV     R4,DPL
        MOV     R5,DPH
        RET
        CFI EndBlock cfiCond742
        CFI EndBlock cfiCond743
        CFI EndBlock cfiCond744
        CFI EndBlock cfiCond745
        CFI EndBlock cfiPicker746

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
        CFI Block cfiCond747 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_264
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond748 Using cfiCommon0
        CFI (cfiCond748) NoFunction
        CFI (cfiCond748) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_96
        CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond748) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond748) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond748) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond748) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond748) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond748) CFA_SP SP+0
        CFI (cfiCond748) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond749 Using cfiCommon0
        CFI (cfiCond749) NoFunction
        CFI (cfiCond749) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_97
        CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond749) CFA_SP SP+0
        CFI (cfiCond749) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond750 Using cfiCommon0
        CFI (cfiCond750) NoFunction
        CFI (cfiCond750) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_94
        CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond750) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond750) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond750) CFA_SP SP+0
        CFI (cfiCond750) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond751 Using cfiCommon0
        CFI (cfiCond751) NoFunction
        CFI (cfiCond751) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_95
        CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond751) CFA_SP SP+0
        CFI (cfiCond751) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond752 Using cfiCommon0
        CFI (cfiCond752) NoFunction
        CFI (cfiCond752) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_272
        CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond752) CFA_SP SP+0
        CFI (cfiCond752) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond753 Using cfiCommon0
        CFI (cfiCond753) NoFunction
        CFI (cfiCond753) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_273
        CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond753) CFA_SP SP+0
        CFI (cfiCond753) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond754 Using cfiCommon0
        CFI (cfiCond754) NoFunction
        CFI (cfiCond754) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_274
        CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond754) CFA_SP SP+0
        CFI (cfiCond754) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker755 Using cfiCommon1
        CFI (cfiPicker755) NoFunction
        CFI (cfiPicker755) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function I2C_Read
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        ; Setup parameters for call to function I2C_Write
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond747
        CFI EndBlock cfiCond748
        CFI EndBlock cfiCond749
        CFI EndBlock cfiCond750
        CFI EndBlock cfiCond751
        CFI EndBlock cfiCond752
        CFI EndBlock cfiCond753
        CFI EndBlock cfiCond754
        CFI EndBlock cfiPicker755

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
        CFI Block cfiCond756 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_92
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond757 Using cfiCommon0
        CFI (cfiCond757) NoFunction
        CFI (cfiCond757) Conditional ??CrossCallReturnLabel_93
        CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond757) CFA_SP SP+0
        CFI (cfiCond757) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker758 Using cfiCommon1
        CFI (cfiPicker758) NoFunction
        CFI (cfiPicker758) Picker
        MOV     DPTR,#st + 4
        MOV     A,#-0x1
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     DPTR,#st + 6
        MOVX    @DPTR,A
        MOV     DPTR,#st + 11
        MOVX    @DPTR,A
        MOV     DPTR,#st + 8
        MOV     A,#0x1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond756
        CFI EndBlock cfiCond757
        CFI EndBlock cfiPicker758

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
        CFI Block cfiCond759 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_145
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond760 Using cfiCommon0
        CFI (cfiCond760) NoFunction
        CFI (cfiCond760) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_92
        CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond760) CFA_SP SP+0
        CFI (cfiCond760) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond761 Using cfiCommon0
        CFI (cfiCond761) NoFunction
        CFI (cfiCond761) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_93
        CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond761) CFA_SP SP+0
        CFI (cfiCond761) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker762 Using cfiCommon1
        CFI (cfiPicker762) NoFunction
        CFI (cfiPicker762) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPTR,#st + 7
        MOVX    @DPTR,A
        MOV     DPTR,#st + 9
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond759
        CFI EndBlock cfiCond760
        CFI EndBlock cfiCond761
        CFI EndBlock cfiPicker762

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
        CFI Block cfiCond763 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_252
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond764 Using cfiCommon0
        CFI (cfiCond764) NoFunction
        CFI (cfiCond764) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond764) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond764) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond764) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond764) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond764) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond764) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond764) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond764) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond764) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond764) CFA_SP SP+0
        CFI (cfiCond764) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker765 Using cfiCommon1
        CFI (cfiPicker765) NoFunction
        CFI (cfiPicker765) Picker
        CLR     A
        CFI EndBlock cfiCond763
        CFI EndBlock cfiCond764
        CFI EndBlock cfiPicker765
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine132_0:
        CFI Block cfiCond766 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_254
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond767 Using cfiCommon0
        CFI (cfiCond767) NoFunction
        CFI (cfiCond767) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond767) CFA_SP SP+0
        CFI (cfiCond767) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond768 Using cfiCommon0
        CFI (cfiCond768) NoFunction
        CFI (cfiCond768) Conditional ??CrossCallReturnLabel_256
        CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond768) CFA_SP SP+0
        CFI (cfiCond768) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond769 Using cfiCommon0
        CFI (cfiCond769) NoFunction
        CFI (cfiCond769) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond769) CFA_SP SP+0
        CFI (cfiCond769) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond770 Using cfiCommon0
        CFI (cfiCond770) NoFunction
        CFI (cfiCond770) Conditional ??CrossCallReturnLabel_258
        CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond770) CFA_SP SP+0
        CFI (cfiCond770) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond771 Using cfiCommon0
        CFI (cfiCond771) NoFunction
        CFI (cfiCond771) Conditional ??CrossCallReturnLabel_252
        CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond771) CFA_SP SP+0
        CFI (cfiCond771) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond772 Using cfiCommon0
        CFI (cfiCond772) NoFunction
        CFI (cfiCond772) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond772) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond772) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond772) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond772) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond772) CFA_SP SP+0
        CFI (cfiCond772) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiPicker773 Using cfiCommon1
        CFI (cfiPicker773) NoFunction
        CFI (cfiPicker773) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_260:
        MOVX    A,@DPTR
        ADD     A,#0xf
        RET
        CFI EndBlock cfiCond766
        CFI EndBlock cfiCond767
        CFI EndBlock cfiCond768
        CFI EndBlock cfiCond769
        CFI EndBlock cfiCond770
        CFI EndBlock cfiCond771
        CFI EndBlock cfiCond772
        CFI EndBlock cfiPicker773

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
        CFI Block cfiCond774 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond775 Using cfiCommon0
        CFI (cfiCond775) NoFunction
        CFI (cfiCond775) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_194
        CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond775) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond775) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond775) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond775) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond775) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond775) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond775) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond775) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond775) CFA_SP SP+0
        CFI (cfiCond775) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond776 Using cfiCommon0
        CFI (cfiCond776) NoFunction
        CFI (cfiCond776) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_252
        CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond776) CFA_SP SP+0
        CFI (cfiCond776) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond777 Using cfiCommon0
        CFI (cfiCond777) NoFunction
        CFI (cfiCond777) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_253
        CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond777) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond777) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond777) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond777) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond777) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond777) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond777) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond777) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond777) CFA_SP SP+0
        CFI (cfiCond777) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond778 Using cfiCommon0
        CFI (cfiCond778) NoFunction
        CFI (cfiCond778) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254
        CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond778) CFA_SP SP+0
        CFI (cfiCond778) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond779 Using cfiCommon0
        CFI (cfiCond779) NoFunction
        CFI (cfiCond779) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_255
        CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond779) CFA_SP SP+0
        CFI (cfiCond779) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond780 Using cfiCommon0
        CFI (cfiCond780) NoFunction
        CFI (cfiCond780) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_256
        CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond780) CFA_SP SP+0
        CFI (cfiCond780) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond781 Using cfiCommon0
        CFI (cfiCond781) NoFunction
        CFI (cfiCond781) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_257
        CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond781) CFA_SP SP+0
        CFI (cfiCond781) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond782 Using cfiCommon0
        CFI (cfiCond782) NoFunction
        CFI (cfiCond782) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_258
        CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond782) CFA_SP SP+0
        CFI (cfiCond782) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker783 Using cfiCommon1
        CFI (cfiPicker783) NoFunction
        CFI (cfiPicker783) Picker
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_263:
        MOV     DPTR,#st
        RET
        CFI EndBlock cfiCond774
        CFI EndBlock cfiCond775
        CFI EndBlock cfiCond776
        CFI EndBlock cfiCond777
        CFI EndBlock cfiCond778
        CFI EndBlock cfiCond779
        CFI EndBlock cfiCond780
        CFI EndBlock cfiCond781
        CFI EndBlock cfiCond782
        CFI EndBlock cfiPicker783

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
        CFI Block cfiCond784 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_81
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond785 Using cfiCommon0
        CFI (cfiCond785) NoFunction
        CFI (cfiCond785) Conditional ??CrossCallReturnLabel_82
        CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond785) CFA_SP SP+0
        CFI (cfiCond785) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker786 Using cfiCommon1
        CFI (cfiPicker786) NoFunction
        CFI (cfiPicker786) Picker
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_268:
        RET
        CFI EndBlock cfiCond784
        CFI EndBlock cfiCond785
        CFI EndBlock cfiPicker786

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
        CFI Block cfiCond787 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_229
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond788 Using cfiCommon0
        CFI (cfiCond788) NoFunction
        CFI (cfiCond788) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_230
        CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond788) CFA_SP SP+0
        CFI (cfiCond788) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond789 Using cfiCommon0
        CFI (cfiCond789) NoFunction
        CFI (cfiCond789) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_231
        CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond789) CFA_SP SP+0
        CFI (cfiCond789) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond790 Using cfiCommon0
        CFI (cfiCond790) NoFunction
        CFI (cfiCond790) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_232
        CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond790) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond790) CFA_SP SP+0
        CFI (cfiCond790) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond791 Using cfiCommon0
        CFI (cfiCond791) NoFunction
        CFI (cfiCond791) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_233
        CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond791) CFA_SP SP+0
        CFI (cfiCond791) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond792 Using cfiCommon0
        CFI (cfiCond792) NoFunction
        CFI (cfiCond792) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_234
        CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond792) CFA_SP SP+0
        CFI (cfiCond792) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond793 Using cfiCommon0
        CFI (cfiCond793) NoFunction
        CFI (cfiCond793) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_81
        CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond793) CFA_SP SP+0
        CFI (cfiCond793) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond794 Using cfiCommon0
        CFI (cfiCond794) NoFunction
        CFI (cfiCond794) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_82
        CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond794) CFA_SP SP+0
        CFI (cfiCond794) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond795 Using cfiCommon0
        CFI (cfiCond795) NoFunction
        CFI (cfiCond795) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_272
        CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond795) CFA_SP SP+0
        CFI (cfiCond795) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond796 Using cfiCommon0
        CFI (cfiCond796) NoFunction
        CFI (cfiCond796) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_273
        CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond796) CFA_SP SP+0
        CFI (cfiCond796) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond797 Using cfiCommon0
        CFI (cfiCond797) NoFunction
        CFI (cfiCond797) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_274
        CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond797) CFA_SP SP+0
        CFI (cfiCond797) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond798 Using cfiCommon0
        CFI (cfiCond798) NoFunction
        CFI (cfiCond798) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_275
        CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond798) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond798) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond798) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond798) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond798) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond798) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond798) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond798) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond798) CFA_SP SP+0
        CFI (cfiCond798) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond799 Using cfiCommon0
        CFI (cfiCond799) NoFunction
        CFI (cfiCond799) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_276
        CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond799) CFA_SP SP+0
        CFI (cfiCond799) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond800 Using cfiCommon0
        CFI (cfiCond800) NoFunction
        CFI (cfiCond800) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_277
        CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond800) CFA_SP SP+0
        CFI (cfiCond800) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond801 Using cfiCommon0
        CFI (cfiCond801) NoFunction
        CFI (cfiCond801) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_278
        CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond801) CFA_SP SP+0
        CFI (cfiCond801) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond802 Using cfiCommon0
        CFI (cfiCond802) NoFunction
        CFI (cfiCond802) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_279
        CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond802) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond802) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond802) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond802) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond802) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond802) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond802) CFA_SP SP+0
        CFI (cfiCond802) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond803 Using cfiCommon0
        CFI (cfiCond803) NoFunction
        CFI (cfiCond803) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_280
        CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond803) CFA_SP SP+0
        CFI (cfiCond803) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond804 Using cfiCommon0
        CFI (cfiCond804) NoFunction
        CFI (cfiCond804) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_281
        CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond804) CFA_SP SP+0
        CFI (cfiCond804) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond805 Using cfiCommon0
        CFI (cfiCond805) NoFunction
        CFI (cfiCond805) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_282
        CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond805) CFA_SP SP+0
        CFI (cfiCond805) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond806 Using cfiCommon0
        CFI (cfiCond806) NoFunction
        CFI (cfiCond806) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_283
        CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond806) CFA_SP SP+0
        CFI (cfiCond806) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond807 Using cfiCommon0
        CFI (cfiCond807) NoFunction
        CFI (cfiCond807) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_284
        CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond807) CFA_SP SP+0
        CFI (cfiCond807) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond808 Using cfiCommon0
        CFI (cfiCond808) NoFunction
        CFI (cfiCond808) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_285
        CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond808) CFA_SP SP+0
        CFI (cfiCond808) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond809 Using cfiCommon0
        CFI (cfiCond809) NoFunction
        CFI (cfiCond809) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_286
        CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond809) CFA_SP SP+0
        CFI (cfiCond809) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond810 Using cfiCommon0
        CFI (cfiCond810) NoFunction
        CFI (cfiCond810) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_287
        CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond810) CFA_SP SP+0
        CFI (cfiCond810) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond811 Using cfiCommon0
        CFI (cfiCond811) NoFunction
        CFI (cfiCond811) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_288
        CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond811) CFA_SP SP+0
        CFI (cfiCond811) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond812 Using cfiCommon0
        CFI (cfiCond812) NoFunction
        CFI (cfiCond812) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_289
        CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond812) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond812) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond812) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond812) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond812) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond812) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond812) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond812) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond812) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond812) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond812) CFA_SP SP+0
        CFI (cfiCond812) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond813 Using cfiCommon0
        CFI (cfiCond813) NoFunction
        CFI (cfiCond813) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_290
        CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond813) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond813) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond813) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond813) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond813) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond813) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond813) CFA_SP SP+0
        CFI (cfiCond813) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond814 Using cfiCommon0
        CFI (cfiCond814) NoFunction
        CFI (cfiCond814) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_291
        CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond814) CFA_SP SP+0
        CFI (cfiCond814) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond815 Using cfiCommon0
        CFI (cfiCond815) NoFunction
        CFI (cfiCond815) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_292
        CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond815) CFA_SP SP+0
        CFI (cfiCond815) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker816 Using cfiCommon1
        CFI (cfiPicker816) NoFunction
        CFI (cfiPicker816) Picker
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_271:
        RET
        CFI EndBlock cfiCond787
        CFI EndBlock cfiCond788
        CFI EndBlock cfiCond789
        CFI EndBlock cfiCond790
        CFI EndBlock cfiCond791
        CFI EndBlock cfiCond792
        CFI EndBlock cfiCond793
        CFI EndBlock cfiCond794
        CFI EndBlock cfiCond795
        CFI EndBlock cfiCond796
        CFI EndBlock cfiCond797
        CFI EndBlock cfiCond798
        CFI EndBlock cfiCond799
        CFI EndBlock cfiCond800
        CFI EndBlock cfiCond801
        CFI EndBlock cfiCond802
        CFI EndBlock cfiCond803
        CFI EndBlock cfiCond804
        CFI EndBlock cfiCond805
        CFI EndBlock cfiCond806
        CFI EndBlock cfiCond807
        CFI EndBlock cfiCond808
        CFI EndBlock cfiCond809
        CFI EndBlock cfiCond810
        CFI EndBlock cfiCond811
        CFI EndBlock cfiCond812
        CFI EndBlock cfiCond813
        CFI EndBlock cfiCond814
        CFI EndBlock cfiCond815
        CFI EndBlock cfiPicker816

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
        CFI Block cfiCond817 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond818 Using cfiCommon0
        CFI (cfiCond818) NoFunction
        CFI (cfiCond818) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_1
        CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond818) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond818) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond818) CFA_SP SP+0
        CFI (cfiCond818) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond819 Using cfiCommon0
        CFI (cfiCond819) NoFunction
        CFI (cfiCond819) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_2
        CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond819) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond819) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond819) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond819) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond819) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond819) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond819) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond819) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond819) CFA_SP SP+0
        CFI (cfiCond819) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond820 Using cfiCommon0
        CFI (cfiCond820) NoFunction
        CFI (cfiCond820) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_38
        CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond820) CFA_SP SP+0
        CFI (cfiCond820) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond821 Using cfiCommon0
        CFI (cfiCond821) NoFunction
        CFI (cfiCond821) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_39
        CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond821) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond821) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond821) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond821) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond821) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond821) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond821) CFA_SP SP+0
        CFI (cfiCond821) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond822 Using cfiCommon0
        CFI (cfiCond822) NoFunction
        CFI (cfiCond822) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_229
        CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond822) CFA_SP SP+0
        CFI (cfiCond822) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond823 Using cfiCommon0
        CFI (cfiCond823) NoFunction
        CFI (cfiCond823) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_230
        CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond823) CFA_SP SP+0
        CFI (cfiCond823) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond824 Using cfiCommon0
        CFI (cfiCond824) NoFunction
        CFI (cfiCond824) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_231
        CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond824) CFA_SP SP+0
        CFI (cfiCond824) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond825 Using cfiCommon0
        CFI (cfiCond825) NoFunction
        CFI (cfiCond825) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_232
        CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond825) CFA_SP SP+0
        CFI (cfiCond825) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond826 Using cfiCommon0
        CFI (cfiCond826) NoFunction
        CFI (cfiCond826) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_233
        CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond826) CFA_SP SP+0
        CFI (cfiCond826) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond827 Using cfiCommon0
        CFI (cfiCond827) NoFunction
        CFI (cfiCond827) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_234
        CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond827) CFA_SP SP+0
        CFI (cfiCond827) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond828 Using cfiCommon0
        CFI (cfiCond828) NoFunction
        CFI (cfiCond828) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_81
        CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond828) CFA_SP SP+0
        CFI (cfiCond828) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond829 Using cfiCommon0
        CFI (cfiCond829) NoFunction
        CFI (cfiCond829) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_82
        CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond829) CFA_SP SP+0
        CFI (cfiCond829) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond830 Using cfiCommon0
        CFI (cfiCond830) NoFunction
        CFI (cfiCond830) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_272
        CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond830) CFA_SP SP+0
        CFI (cfiCond830) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond831 Using cfiCommon0
        CFI (cfiCond831) NoFunction
        CFI (cfiCond831) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_273
        CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond831) CFA_SP SP+0
        CFI (cfiCond831) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond832 Using cfiCommon0
        CFI (cfiCond832) NoFunction
        CFI (cfiCond832) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_274
        CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond832) CFA_SP SP+0
        CFI (cfiCond832) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond833 Using cfiCommon0
        CFI (cfiCond833) NoFunction
        CFI (cfiCond833) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_275
        CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond833) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond833) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond833) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond833) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond833) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond833) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond833) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond833) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond833) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond833) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond833) CFA_SP SP+0
        CFI (cfiCond833) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond834 Using cfiCommon0
        CFI (cfiCond834) NoFunction
        CFI (cfiCond834) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_276
        CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond834) CFA_SP SP+0
        CFI (cfiCond834) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond835 Using cfiCommon0
        CFI (cfiCond835) NoFunction
        CFI (cfiCond835) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_277
        CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond835) CFA_SP SP+0
        CFI (cfiCond835) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond836 Using cfiCommon0
        CFI (cfiCond836) NoFunction
        CFI (cfiCond836) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_278
        CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond836) CFA_SP SP+0
        CFI (cfiCond836) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond837 Using cfiCommon0
        CFI (cfiCond837) NoFunction
        CFI (cfiCond837) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_279
        CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond837) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond837) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond837) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond837) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond837) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond837) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond837) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond837) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond837) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond837) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond837) CFA_SP SP+0
        CFI (cfiCond837) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond838 Using cfiCommon0
        CFI (cfiCond838) NoFunction
        CFI (cfiCond838) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_280
        CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond838) CFA_SP SP+0
        CFI (cfiCond838) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond839 Using cfiCommon0
        CFI (cfiCond839) NoFunction
        CFI (cfiCond839) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_281
        CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond839) CFA_SP SP+0
        CFI (cfiCond839) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond840 Using cfiCommon0
        CFI (cfiCond840) NoFunction
        CFI (cfiCond840) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_282
        CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond840) CFA_SP SP+0
        CFI (cfiCond840) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond841 Using cfiCommon0
        CFI (cfiCond841) NoFunction
        CFI (cfiCond841) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_283
        CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond841) CFA_SP SP+0
        CFI (cfiCond841) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond842 Using cfiCommon0
        CFI (cfiCond842) NoFunction
        CFI (cfiCond842) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_284
        CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond842) CFA_SP SP+0
        CFI (cfiCond842) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond843 Using cfiCommon0
        CFI (cfiCond843) NoFunction
        CFI (cfiCond843) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_285
        CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond843) CFA_SP SP+0
        CFI (cfiCond843) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond844 Using cfiCommon0
        CFI (cfiCond844) NoFunction
        CFI (cfiCond844) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_286
        CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond844) CFA_SP SP+0
        CFI (cfiCond844) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond845 Using cfiCommon0
        CFI (cfiCond845) NoFunction
        CFI (cfiCond845) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_287
        CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond845) CFA_SP SP+0
        CFI (cfiCond845) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond846 Using cfiCommon0
        CFI (cfiCond846) NoFunction
        CFI (cfiCond846) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_288
        CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond846) CFA_SP SP+0
        CFI (cfiCond846) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond847 Using cfiCommon0
        CFI (cfiCond847) NoFunction
        CFI (cfiCond847) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_289
        CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond847) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond847) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond847) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond847) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond847) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond847) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond847) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond847) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond847) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond847) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond847) CFA_SP SP+0
        CFI (cfiCond847) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond848 Using cfiCommon0
        CFI (cfiCond848) NoFunction
        CFI (cfiCond848) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_290
        CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond848) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond848) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond848) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond848) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond848) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond848) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond848) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond848) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond848) CFA_SP SP+0
        CFI (cfiCond848) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond849 Using cfiCommon0
        CFI (cfiCond849) NoFunction
        CFI (cfiCond849) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_291
        CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond849) CFA_SP SP+0
        CFI (cfiCond849) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond850 Using cfiCommon0
        CFI (cfiCond850) NoFunction
        CFI (cfiCond850) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_292
        CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond850) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond850) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond850) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond850) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond850) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond850) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond850) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond850) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond850) CFA_SP SP+0
        CFI (cfiCond850) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiPicker851 Using cfiCommon1
        CFI (cfiPicker851) NoFunction
        CFI (cfiPicker851) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond817
        CFI EndBlock cfiCond818
        CFI EndBlock cfiCond819
        CFI EndBlock cfiCond820
        CFI EndBlock cfiCond821
        CFI EndBlock cfiCond822
        CFI EndBlock cfiCond823
        CFI EndBlock cfiCond824
        CFI EndBlock cfiCond825
        CFI EndBlock cfiCond826
        CFI EndBlock cfiCond827
        CFI EndBlock cfiCond828
        CFI EndBlock cfiCond829
        CFI EndBlock cfiCond830
        CFI EndBlock cfiCond831
        CFI EndBlock cfiCond832
        CFI EndBlock cfiCond833
        CFI EndBlock cfiCond834
        CFI EndBlock cfiCond835
        CFI EndBlock cfiCond836
        CFI EndBlock cfiCond837
        CFI EndBlock cfiCond838
        CFI EndBlock cfiCond839
        CFI EndBlock cfiCond840
        CFI EndBlock cfiCond841
        CFI EndBlock cfiCond842
        CFI EndBlock cfiCond843
        CFI EndBlock cfiCond844
        CFI EndBlock cfiCond845
        CFI EndBlock cfiCond846
        CFI EndBlock cfiCond847
        CFI EndBlock cfiCond848
        CFI EndBlock cfiCond849
        CFI EndBlock cfiCond850
        CFI EndBlock cfiPicker851

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
        CFI Block cfiCond852 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_77
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond853 Using cfiCommon0
        CFI (cfiCond853) NoFunction
        CFI (cfiCond853) Conditional ??CrossCallReturnLabel_78
        CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond853) CFA_SP SP+0
        CFI (cfiCond853) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker854 Using cfiCommon1
        CFI (cfiPicker854) NoFunction
        CFI (cfiPicker854) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_136:
        LCALL   ??mpu_set_lpf?relay
        RET
        CFI EndBlock cfiCond852
        CFI EndBlock cfiCond853
        CFI EndBlock cfiPicker854

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
        CFI Block cfiCond855 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond856 Using cfiCommon0
        CFI (cfiCond856) NoFunction
        CFI (cfiCond856) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_53
        CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond856) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond856) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond856) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond856) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond856) CFA_SP SP+0
        CFI (cfiCond856) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond857 Using cfiCommon0
        CFI (cfiCond857) NoFunction
        CFI (cfiCond857) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_44
        CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond857) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond857) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond857) CFA_SP SP+0
        CFI (cfiCond857) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond858 Using cfiCommon0
        CFI (cfiCond858) NoFunction
        CFI (cfiCond858) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_45
        CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond858) CFA_SP SP+0
        CFI (cfiCond858) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond859 Using cfiCommon0
        CFI (cfiCond859) NoFunction
        CFI (cfiCond859) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_46
        CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond859) CFA_SP SP+0
        CFI (cfiCond859) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond860 Using cfiCommon0
        CFI (cfiCond860) NoFunction
        CFI (cfiCond860) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_77
        CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond860) CFA_SP SP+0
        CFI (cfiCond860) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond861 Using cfiCommon0
        CFI (cfiCond861) NoFunction
        CFI (cfiCond861) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_78
        CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond861) CFA_SP SP+0
        CFI (cfiCond861) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond862 Using cfiCommon0
        CFI (cfiCond862) NoFunction
        CFI (cfiCond862) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_75
        CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond862) CFA_SP SP+0
        CFI (cfiCond862) CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond863 Using cfiCommon0
        CFI (cfiCond863) NoFunction
        CFI (cfiCond863) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_76
        CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond863) CFA_SP SP+0
        CFI (cfiCond863) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker864 Using cfiCommon1
        CFI (cfiPicker864) NoFunction
        CFI (cfiPicker864) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond855
        CFI EndBlock cfiCond856
        CFI EndBlock cfiCond857
        CFI EndBlock cfiCond858
        CFI EndBlock cfiCond859
        CFI EndBlock cfiCond860
        CFI EndBlock cfiCond861
        CFI EndBlock cfiCond862
        CFI EndBlock cfiCond863
        CFI EndBlock cfiPicker864

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
        CFI Block cfiCond865 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_75
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 48)
        CFI Block cfiCond866 Using cfiCommon0
        CFI (cfiCond866) NoFunction
        CFI (cfiCond866) Conditional ??CrossCallReturnLabel_76
        CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond866) CFA_SP SP+0
        CFI (cfiCond866) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker867 Using cfiCommon1
        CFI (cfiPicker867) NoFunction
        CFI (cfiPicker867) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL   ??mpu_set_gyro_fsr?relay
        RET
        CFI EndBlock cfiCond865
        CFI EndBlock cfiCond866
        CFI EndBlock cfiPicker867

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond868 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_14
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond869 Using cfiCommon0
        CFI (cfiCond869) NoFunction
        CFI (cfiCond869) Conditional ??CrossCallReturnLabel_15
        CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond869) CFA_SP SP+0
        CFI (cfiCond869) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker870 Using cfiCommon1
        CFI (cfiPicker870) NoFunction
        CFI (cfiPicker870) Picker
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond868
        CFI EndBlock cfiCond869
        CFI EndBlock cfiPicker870

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
        CFI Block cfiCond871 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_14
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond872 Using cfiCommon0
        CFI (cfiCond872) NoFunction
        CFI (cfiCond872) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_15
        CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond872) CFA_SP SP+0
        CFI (cfiCond872) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond873 Using cfiCommon0
        CFI (cfiCond873) NoFunction
        CFI (cfiCond873) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_272
        CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond873) CFA_SP SP+0
        CFI (cfiCond873) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond874 Using cfiCommon0
        CFI (cfiCond874) NoFunction
        CFI (cfiCond874) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_273
        CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond874) CFA_SP SP+0
        CFI (cfiCond874) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond875 Using cfiCommon0
        CFI (cfiCond875) NoFunction
        CFI (cfiCond875) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_274
        CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond875) CFA_SP SP+0
        CFI (cfiCond875) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond876 Using cfiCommon0
        CFI (cfiCond876) NoFunction
        CFI (cfiCond876) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_275
        CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond876) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond876) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond876) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond876) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond876) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond876) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond876) CFA_SP SP+0
        CFI (cfiCond876) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond877 Using cfiCommon0
        CFI (cfiCond877) NoFunction
        CFI (cfiCond877) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_276
        CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond877) CFA_SP SP+0
        CFI (cfiCond877) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond878 Using cfiCommon0
        CFI (cfiCond878) NoFunction
        CFI (cfiCond878) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_277
        CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond878) CFA_SP SP+0
        CFI (cfiCond878) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond879 Using cfiCommon0
        CFI (cfiCond879) NoFunction
        CFI (cfiCond879) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_278
        CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond879) CFA_SP SP+0
        CFI (cfiCond879) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond880 Using cfiCommon0
        CFI (cfiCond880) NoFunction
        CFI (cfiCond880) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_279
        CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond880) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond880) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond880) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond880) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond880) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond880) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond880) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond880) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond880) CFA_SP SP+0
        CFI (cfiCond880) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond881 Using cfiCommon0
        CFI (cfiCond881) NoFunction
        CFI (cfiCond881) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_280
        CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond881) CFA_SP SP+0
        CFI (cfiCond881) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond882 Using cfiCommon0
        CFI (cfiCond882) NoFunction
        CFI (cfiCond882) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_281
        CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond882) CFA_SP SP+0
        CFI (cfiCond882) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond883 Using cfiCommon0
        CFI (cfiCond883) NoFunction
        CFI (cfiCond883) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_282
        CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond883) CFA_SP SP+0
        CFI (cfiCond883) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond884 Using cfiCommon0
        CFI (cfiCond884) NoFunction
        CFI (cfiCond884) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_283
        CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond884) CFA_SP SP+0
        CFI (cfiCond884) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond885 Using cfiCommon0
        CFI (cfiCond885) NoFunction
        CFI (cfiCond885) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_284
        CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond885) CFA_SP SP+0
        CFI (cfiCond885) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond886 Using cfiCommon0
        CFI (cfiCond886) NoFunction
        CFI (cfiCond886) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_285
        CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond886) CFA_SP SP+0
        CFI (cfiCond886) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond887 Using cfiCommon0
        CFI (cfiCond887) NoFunction
        CFI (cfiCond887) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_286
        CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond887) CFA_SP SP+0
        CFI (cfiCond887) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond888 Using cfiCommon0
        CFI (cfiCond888) NoFunction
        CFI (cfiCond888) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_287
        CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond888) CFA_SP SP+0
        CFI (cfiCond888) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond889 Using cfiCommon0
        CFI (cfiCond889) NoFunction
        CFI (cfiCond889) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_288
        CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond889) CFA_SP SP+0
        CFI (cfiCond889) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond890 Using cfiCommon0
        CFI (cfiCond890) NoFunction
        CFI (cfiCond890) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_289
        CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond890) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond890) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond890) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond890) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond890) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond890) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond890) CFA_SP SP+0
        CFI (cfiCond890) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond891 Using cfiCommon0
        CFI (cfiCond891) NoFunction
        CFI (cfiCond891) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_290
        CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond891) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond891) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond891) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond891) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond891) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond891) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond891) CFA_SP SP+0
        CFI (cfiCond891) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond892 Using cfiCommon0
        CFI (cfiCond892) NoFunction
        CFI (cfiCond892) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291
        CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond892) CFA_SP SP+0
        CFI (cfiCond892) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond893 Using cfiCommon0
        CFI (cfiCond893) NoFunction
        CFI (cfiCond893) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292
        CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond893) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond893) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond893) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond893) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond893) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond893) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond893) CFA_SP SP+0
        CFI (cfiCond893) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond894 Using cfiCommon0
        CFI (cfiCond894) NoFunction
        CFI (cfiCond894) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_293
        CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond894) CFA_SP SP+0
        CFI (cfiCond894) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond895 Using cfiCommon0
        CFI (cfiCond895) NoFunction
        CFI (cfiCond895) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_294
        CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond895) CFA_SP SP+0
        CFI (cfiCond895) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond896 Using cfiCommon0
        CFI (cfiCond896) NoFunction
        CFI (cfiCond896) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_295
        CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond896) CFA_SP SP+0
        CFI (cfiCond896) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond897 Using cfiCommon0
        CFI (cfiCond897) NoFunction
        CFI (cfiCond897) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_296
        CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond897) CFA_SP SP+0
        CFI (cfiCond897) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond898 Using cfiCommon0
        CFI (cfiCond898) NoFunction
        CFI (cfiCond898) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_297
        CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond898) CFA_SP SP+0
        CFI (cfiCond898) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond899 Using cfiCommon0
        CFI (cfiCond899) NoFunction
        CFI (cfiCond899) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298
        CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond899) CFA_SP SP+0
        CFI (cfiCond899) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond900 Using cfiCommon0
        CFI (cfiCond900) NoFunction
        CFI (cfiCond900) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299
        CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond900) CFA_SP SP+0
        CFI (cfiCond900) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond901 Using cfiCommon0
        CFI (cfiCond901) NoFunction
        CFI (cfiCond901) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_300
        CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond901) CFA_SP SP+0
        CFI (cfiCond901) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond902 Using cfiCommon0
        CFI (cfiCond902) NoFunction
        CFI (cfiCond902) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_301
        CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond902) CFA_SP SP+0
        CFI (cfiCond902) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond903 Using cfiCommon0
        CFI (cfiCond903) NoFunction
        CFI (cfiCond903) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_302
        CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond903) CFA_SP SP+0
        CFI (cfiCond903) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond904 Using cfiCommon0
        CFI (cfiCond904) NoFunction
        CFI (cfiCond904) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_303
        CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond904) CFA_SP SP+0
        CFI (cfiCond904) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond905 Using cfiCommon0
        CFI (cfiCond905) NoFunction
        CFI (cfiCond905) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_304
        CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond905) CFA_SP SP+0
        CFI (cfiCond905) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond906 Using cfiCommon0
        CFI (cfiCond906) NoFunction
        CFI (cfiCond906) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_305
        CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond906) CFA_SP SP+0
        CFI (cfiCond906) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond907 Using cfiCommon0
        CFI (cfiCond907) NoFunction
        CFI (cfiCond907) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_306
        CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond907) CFA_SP SP+0
        CFI (cfiCond907) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond908 Using cfiCommon0
        CFI (cfiCond908) NoFunction
        CFI (cfiCond908) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_307
        CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond908) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond908) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond908) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond908) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond908) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond908) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond908) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond908) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond908) CFA_SP SP+0
        CFI (cfiCond908) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond909 Using cfiCommon0
        CFI (cfiCond909) NoFunction
        CFI (cfiCond909) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_308
        CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond909) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond909) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond909) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond909) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond909) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond909) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond909) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond909) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond909) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond909) CFA_SP SP+0
        CFI (cfiCond909) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond910 Using cfiCommon0
        CFI (cfiCond910) NoFunction
        CFI (cfiCond910) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_309
        CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond910) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond910) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond910) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond910) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond910) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond910) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond910) CFA_SP SP+0
        CFI (cfiCond910) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond911 Using cfiCommon0
        CFI (cfiCond911) NoFunction
        CFI (cfiCond911) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_310
        CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond911) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond911) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond911) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond911) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond911) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond911) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond911) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond911) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond911) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond911) CFA_SP SP+0
        CFI (cfiCond911) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond912 Using cfiCommon0
        CFI (cfiCond912) NoFunction
        CFI (cfiCond912) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_311
        CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond912) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond912) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond912) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond912) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond912) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond912) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond912) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond912) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond912) CFA_SP SP+0
        CFI (cfiCond912) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond913 Using cfiCommon0
        CFI (cfiCond913) NoFunction
        CFI (cfiCond913) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_312
        CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond913) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond913) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond913) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond913) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond913) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond913) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond913) CFA_SP SP+0
        CFI (cfiCond913) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond914 Using cfiCommon0
        CFI (cfiCond914) NoFunction
        CFI (cfiCond914) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_313
        CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond914) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond914) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond914) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond914) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond914) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond914) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond914) CFA_SP SP+0
        CFI (cfiCond914) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond915 Using cfiCommon0
        CFI (cfiCond915) NoFunction
        CFI (cfiCond915) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_314
        CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond915) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond915) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond915) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond915) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond915) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond915) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond915) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond915) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond915) CFA_SP SP+0
        CFI (cfiCond915) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond916 Using cfiCommon0
        CFI (cfiCond916) NoFunction
        CFI (cfiCond916) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_315
        CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond916) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond916) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond916) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond916) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond916) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond916) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond916) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond916) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond916) CFA_SP SP+0
        CFI (cfiCond916) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond917 Using cfiCommon0
        CFI (cfiCond917) NoFunction
        CFI (cfiCond917) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_316
        CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond917) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond917) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond917) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond917) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond917) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond917) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond917) CFA_SP SP+0
        CFI (cfiCond917) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond918 Using cfiCommon0
        CFI (cfiCond918) NoFunction
        CFI (cfiCond918) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_317
        CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond918) CFA_SP SP+0
        CFI (cfiCond918) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond919 Using cfiCommon0
        CFI (cfiCond919) NoFunction
        CFI (cfiCond919) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_318
        CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond919) CFA_SP SP+0
        CFI (cfiCond919) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker920 Using cfiCommon1
        CFI (cfiPicker920) NoFunction
        CFI (cfiPicker920) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        CFI EndBlock cfiCond871
        CFI EndBlock cfiCond872
        CFI EndBlock cfiCond873
        CFI EndBlock cfiCond874
        CFI EndBlock cfiCond875
        CFI EndBlock cfiCond876
        CFI EndBlock cfiCond877
        CFI EndBlock cfiCond878
        CFI EndBlock cfiCond879
        CFI EndBlock cfiCond880
        CFI EndBlock cfiCond881
        CFI EndBlock cfiCond882
        CFI EndBlock cfiCond883
        CFI EndBlock cfiCond884
        CFI EndBlock cfiCond885
        CFI EndBlock cfiCond886
        CFI EndBlock cfiCond887
        CFI EndBlock cfiCond888
        CFI EndBlock cfiCond889
        CFI EndBlock cfiCond890
        CFI EndBlock cfiCond891
        CFI EndBlock cfiCond892
        CFI EndBlock cfiCond893
        CFI EndBlock cfiCond894
        CFI EndBlock cfiCond895
        CFI EndBlock cfiCond896
        CFI EndBlock cfiCond897
        CFI EndBlock cfiCond898
        CFI EndBlock cfiCond899
        CFI EndBlock cfiCond900
        CFI EndBlock cfiCond901
        CFI EndBlock cfiCond902
        CFI EndBlock cfiCond903
        CFI EndBlock cfiCond904
        CFI EndBlock cfiCond905
        CFI EndBlock cfiCond906
        CFI EndBlock cfiCond907
        CFI EndBlock cfiCond908
        CFI EndBlock cfiCond909
        CFI EndBlock cfiCond910
        CFI EndBlock cfiCond911
        CFI EndBlock cfiCond912
        CFI EndBlock cfiCond913
        CFI EndBlock cfiCond914
        CFI EndBlock cfiCond915
        CFI EndBlock cfiCond916
        CFI EndBlock cfiCond917
        CFI EndBlock cfiCond918
        CFI EndBlock cfiCond919
        CFI EndBlock cfiPicker920
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine133_0:
        CFI Block cfiCond921 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_33
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond922 Using cfiCommon0
        CFI (cfiCond922) NoFunction
        CFI (cfiCond922) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_34
        CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond922) CFA_SP SP+0
        CFI (cfiCond922) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond923 Using cfiCommon0
        CFI (cfiCond923) NoFunction
        CFI (cfiCond923) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_14
        CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond923) CFA_SP SP+0
        CFI (cfiCond923) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond924 Using cfiCommon0
        CFI (cfiCond924) NoFunction
        CFI (cfiCond924) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_15
        CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond924) CFA_SP SP+0
        CFI (cfiCond924) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond925 Using cfiCommon0
        CFI (cfiCond925) NoFunction
        CFI (cfiCond925) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_272
        CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond925) CFA_SP SP+0
        CFI (cfiCond925) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond926 Using cfiCommon0
        CFI (cfiCond926) NoFunction
        CFI (cfiCond926) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_273
        CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond926) CFA_SP SP+0
        CFI (cfiCond926) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond927 Using cfiCommon0
        CFI (cfiCond927) NoFunction
        CFI (cfiCond927) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_274
        CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond927) CFA_SP SP+0
        CFI (cfiCond927) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond928 Using cfiCommon0
        CFI (cfiCond928) NoFunction
        CFI (cfiCond928) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_275
        CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond928) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond928) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond928) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond928) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond928) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond928) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond928) CFA_SP SP+0
        CFI (cfiCond928) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond929 Using cfiCommon0
        CFI (cfiCond929) NoFunction
        CFI (cfiCond929) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_276
        CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond929) CFA_SP SP+0
        CFI (cfiCond929) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond930 Using cfiCommon0
        CFI (cfiCond930) NoFunction
        CFI (cfiCond930) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_277
        CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond930) CFA_SP SP+0
        CFI (cfiCond930) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond931 Using cfiCommon0
        CFI (cfiCond931) NoFunction
        CFI (cfiCond931) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_278
        CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond931) CFA_SP SP+0
        CFI (cfiCond931) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond932 Using cfiCommon0
        CFI (cfiCond932) NoFunction
        CFI (cfiCond932) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_279
        CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond932) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond932) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond932) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond932) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond932) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond932) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond932) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond932) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond932) CFA_SP SP+0
        CFI (cfiCond932) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond933 Using cfiCommon0
        CFI (cfiCond933) NoFunction
        CFI (cfiCond933) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_280
        CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond933) CFA_SP SP+0
        CFI (cfiCond933) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond934 Using cfiCommon0
        CFI (cfiCond934) NoFunction
        CFI (cfiCond934) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_281
        CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond934) CFA_SP SP+0
        CFI (cfiCond934) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond935 Using cfiCommon0
        CFI (cfiCond935) NoFunction
        CFI (cfiCond935) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_282
        CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond935) CFA_SP SP+0
        CFI (cfiCond935) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond936 Using cfiCommon0
        CFI (cfiCond936) NoFunction
        CFI (cfiCond936) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_283
        CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond936) CFA_SP SP+0
        CFI (cfiCond936) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond937 Using cfiCommon0
        CFI (cfiCond937) NoFunction
        CFI (cfiCond937) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_284
        CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond937) CFA_SP SP+0
        CFI (cfiCond937) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond938 Using cfiCommon0
        CFI (cfiCond938) NoFunction
        CFI (cfiCond938) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_285
        CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond938) CFA_SP SP+0
        CFI (cfiCond938) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond939 Using cfiCommon0
        CFI (cfiCond939) NoFunction
        CFI (cfiCond939) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_286
        CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond939) CFA_SP SP+0
        CFI (cfiCond939) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond940 Using cfiCommon0
        CFI (cfiCond940) NoFunction
        CFI (cfiCond940) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_287
        CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond940) CFA_SP SP+0
        CFI (cfiCond940) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond941 Using cfiCommon0
        CFI (cfiCond941) NoFunction
        CFI (cfiCond941) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_288
        CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond941) CFA_SP SP+0
        CFI (cfiCond941) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond942 Using cfiCommon0
        CFI (cfiCond942) NoFunction
        CFI (cfiCond942) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_289
        CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond942) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond942) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond942) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond942) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond942) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond942) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond942) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond942) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond942) CFA_SP SP+0
        CFI (cfiCond942) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond943 Using cfiCommon0
        CFI (cfiCond943) NoFunction
        CFI (cfiCond943) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_290
        CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond943) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond943) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond943) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond943) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond943) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond943) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond943) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond943) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond943) CFA_SP SP+0
        CFI (cfiCond943) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond944 Using cfiCommon0
        CFI (cfiCond944) NoFunction
        CFI (cfiCond944) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291
        CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond944) CFA_SP SP+0
        CFI (cfiCond944) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond945 Using cfiCommon0
        CFI (cfiCond945) NoFunction
        CFI (cfiCond945) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292
        CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond945) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond945) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond945) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond945) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond945) CFA_SP SP+0
        CFI (cfiCond945) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond946 Using cfiCommon0
        CFI (cfiCond946) NoFunction
        CFI (cfiCond946) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_293
        CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond946) CFA_SP SP+0
        CFI (cfiCond946) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond947 Using cfiCommon0
        CFI (cfiCond947) NoFunction
        CFI (cfiCond947) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_294
        CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond947) CFA_SP SP+0
        CFI (cfiCond947) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond948 Using cfiCommon0
        CFI (cfiCond948) NoFunction
        CFI (cfiCond948) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_295
        CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond948) CFA_SP SP+0
        CFI (cfiCond948) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond949 Using cfiCommon0
        CFI (cfiCond949) NoFunction
        CFI (cfiCond949) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_296
        CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond949) CFA_SP SP+0
        CFI (cfiCond949) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond950 Using cfiCommon0
        CFI (cfiCond950) NoFunction
        CFI (cfiCond950) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_297
        CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond950) CFA_SP SP+0
        CFI (cfiCond950) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond951 Using cfiCommon0
        CFI (cfiCond951) NoFunction
        CFI (cfiCond951) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298
        CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond951) CFA_SP SP+0
        CFI (cfiCond951) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond952 Using cfiCommon0
        CFI (cfiCond952) NoFunction
        CFI (cfiCond952) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299
        CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond952) CFA_SP SP+0
        CFI (cfiCond952) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond953 Using cfiCommon0
        CFI (cfiCond953) NoFunction
        CFI (cfiCond953) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_300
        CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond953) CFA_SP SP+0
        CFI (cfiCond953) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond954 Using cfiCommon0
        CFI (cfiCond954) NoFunction
        CFI (cfiCond954) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_301
        CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond954) CFA_SP SP+0
        CFI (cfiCond954) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond955 Using cfiCommon0
        CFI (cfiCond955) NoFunction
        CFI (cfiCond955) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_302
        CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond955) CFA_SP SP+0
        CFI (cfiCond955) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond956 Using cfiCommon0
        CFI (cfiCond956) NoFunction
        CFI (cfiCond956) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_303
        CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond956) CFA_SP SP+0
        CFI (cfiCond956) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond957 Using cfiCommon0
        CFI (cfiCond957) NoFunction
        CFI (cfiCond957) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_304
        CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond957) CFA_SP SP+0
        CFI (cfiCond957) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond958 Using cfiCommon0
        CFI (cfiCond958) NoFunction
        CFI (cfiCond958) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_305
        CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond958) CFA_SP SP+0
        CFI (cfiCond958) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond959 Using cfiCommon0
        CFI (cfiCond959) NoFunction
        CFI (cfiCond959) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_306
        CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond959) CFA_SP SP+0
        CFI (cfiCond959) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond960 Using cfiCommon0
        CFI (cfiCond960) NoFunction
        CFI (cfiCond960) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_307
        CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond960) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond960) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond960) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond960) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond960) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond960) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond960) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond960) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond960) CFA_SP SP+0
        CFI (cfiCond960) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond961 Using cfiCommon0
        CFI (cfiCond961) NoFunction
        CFI (cfiCond961) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_308
        CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond961) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond961) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond961) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond961) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond961) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond961) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond961) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond961) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond961) CFA_SP SP+0
        CFI (cfiCond961) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond962 Using cfiCommon0
        CFI (cfiCond962) NoFunction
        CFI (cfiCond962) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_309
        CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond962) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond962) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond962) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond962) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond962) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond962) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond962) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond962) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond962) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond962) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond962) CFA_SP SP+0
        CFI (cfiCond962) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond963 Using cfiCommon0
        CFI (cfiCond963) NoFunction
        CFI (cfiCond963) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_310
        CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond963) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond963) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond963) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond963) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond963) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond963) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond963) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond963) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond963) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond963) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond963) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond963) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond963) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond963) CFA_SP SP+0
        CFI (cfiCond963) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond964 Using cfiCommon0
        CFI (cfiCond964) NoFunction
        CFI (cfiCond964) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_311
        CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond964) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond964) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond964) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond964) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond964) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond964) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond964) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond964) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond964) CFA_SP SP+0
        CFI (cfiCond964) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond965 Using cfiCommon0
        CFI (cfiCond965) NoFunction
        CFI (cfiCond965) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_312
        CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond965) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond965) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond965) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond965) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond965) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond965) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond965) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond965) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond965) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond965) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond965) CFA_SP SP+0
        CFI (cfiCond965) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond966 Using cfiCommon0
        CFI (cfiCond966) NoFunction
        CFI (cfiCond966) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_313
        CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond966) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond966) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond966) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond966) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond966) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond966) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond966) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond966) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond966) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond966) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond966) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond966) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond966) CFA_SP SP+0
        CFI (cfiCond966) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond967 Using cfiCommon0
        CFI (cfiCond967) NoFunction
        CFI (cfiCond967) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_314
        CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond967) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond967) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond967) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond967) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond967) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond967) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond967) CFA_SP SP+0
        CFI (cfiCond967) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond968 Using cfiCommon0
        CFI (cfiCond968) NoFunction
        CFI (cfiCond968) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_315
        CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond968) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond968) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond968) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond968) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond968) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond968) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond968) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond968) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond968) CFA_SP SP+0
        CFI (cfiCond968) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond969 Using cfiCommon0
        CFI (cfiCond969) NoFunction
        CFI (cfiCond969) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_316
        CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond969) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond969) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond969) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond969) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond969) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond969) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond969) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond969) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond969) CFA_SP SP+0
        CFI (cfiCond969) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond970 Using cfiCommon0
        CFI (cfiCond970) NoFunction
        CFI (cfiCond970) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_317
        CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond970) CFA_SP SP+0
        CFI (cfiCond970) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond971 Using cfiCommon0
        CFI (cfiCond971) NoFunction
        CFI (cfiCond971) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_318
        CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond971) CFA_SP SP+0
        CFI (cfiCond971) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker972 Using cfiCommon1
        CFI (cfiPicker972) NoFunction
        CFI (cfiPicker972) Picker
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL   ??I2C_Write?relay
        RET
        CFI EndBlock cfiCond921
        CFI EndBlock cfiCond922
        CFI EndBlock cfiCond923
        CFI EndBlock cfiCond924
        CFI EndBlock cfiCond925
        CFI EndBlock cfiCond926
        CFI EndBlock cfiCond927
        CFI EndBlock cfiCond928
        CFI EndBlock cfiCond929
        CFI EndBlock cfiCond930
        CFI EndBlock cfiCond931
        CFI EndBlock cfiCond932
        CFI EndBlock cfiCond933
        CFI EndBlock cfiCond934
        CFI EndBlock cfiCond935
        CFI EndBlock cfiCond936
        CFI EndBlock cfiCond937
        CFI EndBlock cfiCond938
        CFI EndBlock cfiCond939
        CFI EndBlock cfiCond940
        CFI EndBlock cfiCond941
        CFI EndBlock cfiCond942
        CFI EndBlock cfiCond943
        CFI EndBlock cfiCond944
        CFI EndBlock cfiCond945
        CFI EndBlock cfiCond946
        CFI EndBlock cfiCond947
        CFI EndBlock cfiCond948
        CFI EndBlock cfiCond949
        CFI EndBlock cfiCond950
        CFI EndBlock cfiCond951
        CFI EndBlock cfiCond952
        CFI EndBlock cfiCond953
        CFI EndBlock cfiCond954
        CFI EndBlock cfiCond955
        CFI EndBlock cfiCond956
        CFI EndBlock cfiCond957
        CFI EndBlock cfiCond958
        CFI EndBlock cfiCond959
        CFI EndBlock cfiCond960
        CFI EndBlock cfiCond961
        CFI EndBlock cfiCond962
        CFI EndBlock cfiCond963
        CFI EndBlock cfiCond964
        CFI EndBlock cfiCond965
        CFI EndBlock cfiCond966
        CFI EndBlock cfiCond967
        CFI EndBlock cfiCond968
        CFI EndBlock cfiCond969
        CFI EndBlock cfiCond970
        CFI EndBlock cfiCond971
        CFI EndBlock cfiPicker972

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
        CFI Block cfiCond973 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_42
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond974 Using cfiCommon0
        CFI (cfiCond974) NoFunction
        CFI (cfiCond974) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_43
        CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond974) CFA_SP SP+0
        CFI (cfiCond974) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond975 Using cfiCommon0
        CFI (cfiCond975) NoFunction
        CFI (cfiCond975) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_0
        CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond975) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond975) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond975) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond975) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond975) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond975) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond975) CFA_SP SP+0
        CFI (cfiCond975) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond976 Using cfiCommon0
        CFI (cfiCond976) NoFunction
        CFI (cfiCond976) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_1
        CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond976) CFA_SP SP+0
        CFI (cfiCond976) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond977 Using cfiCommon0
        CFI (cfiCond977) NoFunction
        CFI (cfiCond977) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_2
        CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond977) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond977) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond977) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond977) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond977) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond977) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond977) CFA_SP SP+0
        CFI (cfiCond977) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond978 Using cfiCommon0
        CFI (cfiCond978) NoFunction
        CFI (cfiCond978) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_229
        CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond978) CFA_SP SP+0
        CFI (cfiCond978) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond979 Using cfiCommon0
        CFI (cfiCond979) NoFunction
        CFI (cfiCond979) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_230
        CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond979) CFA_SP SP+0
        CFI (cfiCond979) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond980 Using cfiCommon0
        CFI (cfiCond980) NoFunction
        CFI (cfiCond980) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_231
        CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond980) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond980) CFA_SP SP+0
        CFI (cfiCond980) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond981 Using cfiCommon0
        CFI (cfiCond981) NoFunction
        CFI (cfiCond981) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_232
        CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond981) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond981) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond981) CFA_SP SP+0
        CFI (cfiCond981) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond982 Using cfiCommon0
        CFI (cfiCond982) NoFunction
        CFI (cfiCond982) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_233
        CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond982) CFA_SP SP+0
        CFI (cfiCond982) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond983 Using cfiCommon0
        CFI (cfiCond983) NoFunction
        CFI (cfiCond983) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_234
        CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond983) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond983) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond983) CFA_SP SP+0
        CFI (cfiCond983) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond984 Using cfiCommon0
        CFI (cfiCond984) NoFunction
        CFI (cfiCond984) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_235
        CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond984) CFA_SP SP+0
        CFI (cfiCond984) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond985 Using cfiCommon0
        CFI (cfiCond985) NoFunction
        CFI (cfiCond985) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_236
        CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond985) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond985) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond985) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond985) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond985) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond985) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond985) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond985) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond985) CFA_SP SP+0
        CFI (cfiCond985) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond986 Using cfiCommon0
        CFI (cfiCond986) NoFunction
        CFI (cfiCond986) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_237
        CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond986) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond986) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond986) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond986) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond986) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond986) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond986) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond986) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond986) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond986) CFA_SP SP+0
        CFI (cfiCond986) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond987 Using cfiCommon0
        CFI (cfiCond987) NoFunction
        CFI (cfiCond987) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
        CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond987) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond987) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond987) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond987) CFA_SP SP+0
        CFI (cfiCond987) CFA_XSP16 add(XSP16, 44)
        CFI Block cfiCond988 Using cfiCommon0
        CFI (cfiCond988) NoFunction
        CFI (cfiCond988) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
        CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond988) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond988) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond988) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond988) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond988) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond988) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond988) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond988) CFA_SP SP+0
        CFI (cfiCond988) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond989 Using cfiCommon0
        CFI (cfiCond989) NoFunction
        CFI (cfiCond989) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_240
        CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond989) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond989) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond989) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond989) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond989) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond989) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond989) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond989) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond989) CFA_SP SP+0
        CFI (cfiCond989) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond990 Using cfiCommon0
        CFI (cfiCond990) NoFunction
        CFI (cfiCond990) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_14
        CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond990) CFA_SP SP+0
        CFI (cfiCond990) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond991 Using cfiCommon0
        CFI (cfiCond991) NoFunction
        CFI (cfiCond991) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_15
        CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond991) CFA_SP SP+0
        CFI (cfiCond991) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond992 Using cfiCommon0
        CFI (cfiCond992) NoFunction
        CFI (cfiCond992) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_272
        CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond992) CFA_SP SP+0
        CFI (cfiCond992) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond993 Using cfiCommon0
        CFI (cfiCond993) NoFunction
        CFI (cfiCond993) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_273
        CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond993) CFA_SP SP+0
        CFI (cfiCond993) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond994 Using cfiCommon0
        CFI (cfiCond994) NoFunction
        CFI (cfiCond994) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_274
        CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond994) CFA_SP SP+0
        CFI (cfiCond994) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond995 Using cfiCommon0
        CFI (cfiCond995) NoFunction
        CFI (cfiCond995) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_275
        CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond995) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond995) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond995) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond995) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond995) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond995) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond995) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond995) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond995) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond995) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond995) CFA_SP SP+0
        CFI (cfiCond995) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond996 Using cfiCommon0
        CFI (cfiCond996) NoFunction
        CFI (cfiCond996) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_276
        CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond996) CFA_SP SP+0
        CFI (cfiCond996) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond997 Using cfiCommon0
        CFI (cfiCond997) NoFunction
        CFI (cfiCond997) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_277
        CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond997) CFA_SP SP+0
        CFI (cfiCond997) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond998 Using cfiCommon0
        CFI (cfiCond998) NoFunction
        CFI (cfiCond998) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_278
        CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond998) CFA_SP SP+0
        CFI (cfiCond998) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond999 Using cfiCommon0
        CFI (cfiCond999) NoFunction
        CFI (cfiCond999) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_279
        CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond999) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond999) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond999) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond999) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond999) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond999) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond999) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond999) CFA_SP SP+0
        CFI (cfiCond999) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1000 Using cfiCommon0
        CFI (cfiCond1000) NoFunction
        CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_280
        CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1000) CFA_SP SP+0
        CFI (cfiCond1000) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1001 Using cfiCommon0
        CFI (cfiCond1001) NoFunction
        CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_281
        CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1001) CFA_SP SP+0
        CFI (cfiCond1001) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1002 Using cfiCommon0
        CFI (cfiCond1002) NoFunction
        CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_282
        CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1002) CFA_SP SP+0
        CFI (cfiCond1002) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1003 Using cfiCommon0
        CFI (cfiCond1003) NoFunction
        CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_283
        CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1003) CFA_SP SP+0
        CFI (cfiCond1003) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1004 Using cfiCommon0
        CFI (cfiCond1004) NoFunction
        CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_284
        CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1004) CFA_SP SP+0
        CFI (cfiCond1004) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1005 Using cfiCommon0
        CFI (cfiCond1005) NoFunction
        CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_285
        CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1005) CFA_SP SP+0
        CFI (cfiCond1005) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1006 Using cfiCommon0
        CFI (cfiCond1006) NoFunction
        CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_286
        CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1006) CFA_SP SP+0
        CFI (cfiCond1006) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1007 Using cfiCommon0
        CFI (cfiCond1007) NoFunction
        CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_287
        CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1007) CFA_SP SP+0
        CFI (cfiCond1007) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1008 Using cfiCommon0
        CFI (cfiCond1008) NoFunction
        CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_288
        CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1008) CFA_SP SP+0
        CFI (cfiCond1008) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1009 Using cfiCommon0
        CFI (cfiCond1009) NoFunction
        CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_289
        CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1009) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1009) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1009) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1009) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1009) CFA_SP SP+0
        CFI (cfiCond1009) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1010 Using cfiCommon0
        CFI (cfiCond1010) NoFunction
        CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_290
        CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1010) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1010) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1010) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1010) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1010) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1010) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1010) CFA_SP SP+0
        CFI (cfiCond1010) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1011 Using cfiCommon0
        CFI (cfiCond1011) NoFunction
        CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291
        CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1011) CFA_SP SP+0
        CFI (cfiCond1011) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1012 Using cfiCommon0
        CFI (cfiCond1012) NoFunction
        CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292
        CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1012) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1012) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1012) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1012) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1012) CFA_SP SP+0
        CFI (cfiCond1012) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1013 Using cfiCommon0
        CFI (cfiCond1013) NoFunction
        CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_293
        CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1013) CFA_SP SP+0
        CFI (cfiCond1013) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1014 Using cfiCommon0
        CFI (cfiCond1014) NoFunction
        CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_294
        CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1014) CFA_SP SP+0
        CFI (cfiCond1014) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1015 Using cfiCommon0
        CFI (cfiCond1015) NoFunction
        CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_295
        CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1015) CFA_SP SP+0
        CFI (cfiCond1015) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1016 Using cfiCommon0
        CFI (cfiCond1016) NoFunction
        CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_296
        CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1016) CFA_SP SP+0
        CFI (cfiCond1016) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1017 Using cfiCommon0
        CFI (cfiCond1017) NoFunction
        CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_297
        CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1017) CFA_SP SP+0
        CFI (cfiCond1017) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1018 Using cfiCommon0
        CFI (cfiCond1018) NoFunction
        CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298
        CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1018) CFA_SP SP+0
        CFI (cfiCond1018) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1019 Using cfiCommon0
        CFI (cfiCond1019) NoFunction
        CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299
        CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1019) CFA_SP SP+0
        CFI (cfiCond1019) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1020 Using cfiCommon0
        CFI (cfiCond1020) NoFunction
        CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_300
        CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1020) CFA_SP SP+0
        CFI (cfiCond1020) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1021 Using cfiCommon0
        CFI (cfiCond1021) NoFunction
        CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_301
        CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1021) CFA_SP SP+0
        CFI (cfiCond1021) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1022 Using cfiCommon0
        CFI (cfiCond1022) NoFunction
        CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_302
        CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1022) CFA_SP SP+0
        CFI (cfiCond1022) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1023 Using cfiCommon0
        CFI (cfiCond1023) NoFunction
        CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_303
        CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1023) CFA_SP SP+0
        CFI (cfiCond1023) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1024 Using cfiCommon0
        CFI (cfiCond1024) NoFunction
        CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_304
        CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1024) CFA_SP SP+0
        CFI (cfiCond1024) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1025 Using cfiCommon0
        CFI (cfiCond1025) NoFunction
        CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_305
        CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1025) CFA_SP SP+0
        CFI (cfiCond1025) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1026 Using cfiCommon0
        CFI (cfiCond1026) NoFunction
        CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_306
        CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1026) CFA_SP SP+0
        CFI (cfiCond1026) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1027 Using cfiCommon0
        CFI (cfiCond1027) NoFunction
        CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_307
        CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1027) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1027) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1027) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1027) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1027) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1027) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1027) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1027) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1027) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1027) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1027) CFA_SP SP+0
        CFI (cfiCond1027) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1028 Using cfiCommon0
        CFI (cfiCond1028) NoFunction
        CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_308
        CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1028) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1028) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1028) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1028) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1028) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1028) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1028) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1028) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1028) CFA_SP SP+0
        CFI (cfiCond1028) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1029 Using cfiCommon0
        CFI (cfiCond1029) NoFunction
        CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_309
        CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1029) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1029) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1029) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1029) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1029) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1029) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1029) CFA_SP SP+0
        CFI (cfiCond1029) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1030 Using cfiCommon0
        CFI (cfiCond1030) NoFunction
        CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_310
        CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1030) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1030) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1030) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1030) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1030) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1030) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1030) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1030) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1030) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1030) CFA_SP SP+0
        CFI (cfiCond1030) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1031 Using cfiCommon0
        CFI (cfiCond1031) NoFunction
        CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_311
        CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1031) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1031) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1031) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1031) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1031) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1031) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1031) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1031) CFA_SP SP+0
        CFI (cfiCond1031) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1032 Using cfiCommon0
        CFI (cfiCond1032) NoFunction
        CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_312
        CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1032) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1032) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1032) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1032) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1032) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1032) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1032) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1032) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1032) CFA_SP SP+0
        CFI (cfiCond1032) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1033 Using cfiCommon0
        CFI (cfiCond1033) NoFunction
        CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_313
        CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1033) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1033) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1033) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1033) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1033) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1033) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1033) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1033) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1033) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1033) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1033) CFA_SP SP+0
        CFI (cfiCond1033) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1034 Using cfiCommon0
        CFI (cfiCond1034) NoFunction
        CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_314
        CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1034) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1034) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1034) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1034) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1034) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1034) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1034) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1034) CFA_SP SP+0
        CFI (cfiCond1034) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1035 Using cfiCommon0
        CFI (cfiCond1035) NoFunction
        CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_315
        CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1035) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1035) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1035) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1035) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1035) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1035) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1035) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1035) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1035) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1035) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1035) CFA_SP SP+0
        CFI (cfiCond1035) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1036 Using cfiCommon0
        CFI (cfiCond1036) NoFunction
        CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_316
        CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1036) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1036) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1036) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1036) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1036) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1036) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1036) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1036) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1036) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1036) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1036) CFA_SP SP+0
        CFI (cfiCond1036) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1037 Using cfiCommon0
        CFI (cfiCond1037) NoFunction
        CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_317
        CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1037) CFA_SP SP+0
        CFI (cfiCond1037) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1038 Using cfiCommon0
        CFI (cfiCond1038) NoFunction
        CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_318
        CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1038) CFA_SP SP+0
        CFI (cfiCond1038) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1039 Using cfiCommon0
        CFI (cfiCond1039) NoFunction
        CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_33
        CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1039) CFA_SP SP+0
        CFI (cfiCond1039) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1040 Using cfiCommon0
        CFI (cfiCond1040) NoFunction
        CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_34
        CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1040) CFA_SP SP+0
        CFI (cfiCond1040) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1041 Using cfiCommon1
        CFI (cfiPicker1041) NoFunction
        CFI (cfiPicker1041) Picker
        MOV     DPTR,#st + 2
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_326:
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond973
        CFI EndBlock cfiCond974
        CFI EndBlock cfiCond975
        CFI EndBlock cfiCond976
        CFI EndBlock cfiCond977
        CFI EndBlock cfiCond978
        CFI EndBlock cfiCond979
        CFI EndBlock cfiCond980
        CFI EndBlock cfiCond981
        CFI EndBlock cfiCond982
        CFI EndBlock cfiCond983
        CFI EndBlock cfiCond984
        CFI EndBlock cfiCond985
        CFI EndBlock cfiCond986
        CFI EndBlock cfiCond987
        CFI EndBlock cfiCond988
        CFI EndBlock cfiCond989
        CFI EndBlock cfiCond990
        CFI EndBlock cfiCond991
        CFI EndBlock cfiCond992
        CFI EndBlock cfiCond993
        CFI EndBlock cfiCond994
        CFI EndBlock cfiCond995
        CFI EndBlock cfiCond996
        CFI EndBlock cfiCond997
        CFI EndBlock cfiCond998
        CFI EndBlock cfiCond999
        CFI EndBlock cfiCond1000
        CFI EndBlock cfiCond1001
        CFI EndBlock cfiCond1002
        CFI EndBlock cfiCond1003
        CFI EndBlock cfiCond1004
        CFI EndBlock cfiCond1005
        CFI EndBlock cfiCond1006
        CFI EndBlock cfiCond1007
        CFI EndBlock cfiCond1008
        CFI EndBlock cfiCond1009
        CFI EndBlock cfiCond1010
        CFI EndBlock cfiCond1011
        CFI EndBlock cfiCond1012
        CFI EndBlock cfiCond1013
        CFI EndBlock cfiCond1014
        CFI EndBlock cfiCond1015
        CFI EndBlock cfiCond1016
        CFI EndBlock cfiCond1017
        CFI EndBlock cfiCond1018
        CFI EndBlock cfiCond1019
        CFI EndBlock cfiCond1020
        CFI EndBlock cfiCond1021
        CFI EndBlock cfiCond1022
        CFI EndBlock cfiCond1023
        CFI EndBlock cfiCond1024
        CFI EndBlock cfiCond1025
        CFI EndBlock cfiCond1026
        CFI EndBlock cfiCond1027
        CFI EndBlock cfiCond1028
        CFI EndBlock cfiCond1029
        CFI EndBlock cfiCond1030
        CFI EndBlock cfiCond1031
        CFI EndBlock cfiCond1032
        CFI EndBlock cfiCond1033
        CFI EndBlock cfiCond1034
        CFI EndBlock cfiCond1035
        CFI EndBlock cfiCond1036
        CFI EndBlock cfiCond1037
        CFI EndBlock cfiCond1038
        CFI EndBlock cfiCond1039
        CFI EndBlock cfiCond1040
        CFI EndBlock cfiPicker1041

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiCond1042 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_272
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1043 Using cfiCommon0
        CFI (cfiCond1043) NoFunction
        CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1043) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1043) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1043) CFA_SP SP+0
        CFI (cfiCond1043) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1044 Using cfiCommon1
        CFI (cfiPicker1044) NoFunction
        CFI (cfiPicker1044) Picker
        MOVX    A,@DPTR
        SWAP    A
        RLC     A
        RLC     A
        ANL     A,#0xc0
        ORL     A,#0x7
        CFI EndBlock cfiCond1042
        CFI EndBlock cfiCond1043
        CFI EndBlock cfiPicker1044
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine134_0:
        CFI Block cfiCond1045 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_274
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1046 Using cfiCommon0
        CFI (cfiCond1046) NoFunction
        CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1046) CFA_SP SP+0
        CFI (cfiCond1046) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1047 Using cfiCommon0
        CFI (cfiCond1047) NoFunction
        CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1047) CFA_SP SP+0
        CFI (cfiCond1047) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1048 Using cfiCommon1
        CFI (cfiPicker1048) NoFunction
        CFI (cfiPicker1048) Picker
        LCALL   ?Subroutine101 & 0xFFFF
        CFI EndBlock cfiCond1045
        CFI EndBlock cfiCond1046
        CFI EndBlock cfiCond1047
        CFI EndBlock cfiPicker1048
??CrossCallReturnLabel_266:
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine135_0:
        CFI Block cfiCond1049 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_275
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1050 Using cfiCommon0
        CFI (cfiCond1050) NoFunction
        CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1050) CFA_SP SP+0
        CFI (cfiCond1050) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1051 Using cfiCommon0
        CFI (cfiCond1051) NoFunction
        CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1051) CFA_SP SP+0
        CFI (cfiCond1051) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1052 Using cfiCommon0
        CFI (cfiCond1052) NoFunction
        CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1052) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1052) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1052) CFA_SP SP+0
        CFI (cfiCond1052) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1053 Using cfiCommon1
        CFI (cfiPicker1053) NoFunction
        CFI (cfiPicker1053) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R3,#0x2
        CFI EndBlock cfiCond1049
        CFI EndBlock cfiCond1050
        CFI EndBlock cfiCond1051
        CFI EndBlock cfiCond1052
        CFI EndBlock cfiPicker1053
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine136_0:
        CFI Block cfiCond1054 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_276
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1055 Using cfiCommon0
        CFI (cfiCond1055) NoFunction
        CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1055) CFA_SP SP+0
        CFI (cfiCond1055) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1056 Using cfiCommon0
        CFI (cfiCond1056) NoFunction
        CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1056) CFA_SP SP+0
        CFI (cfiCond1056) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1057 Using cfiCommon0
        CFI (cfiCond1057) NoFunction
        CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_279
        CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1057) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1057) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1057) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1057) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1057) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1057) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1057) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1057) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1057) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1057) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1057) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1057) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1057) CFA_SP SP+0
        CFI (cfiCond1057) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1058 Using cfiCommon0
        CFI (cfiCond1058) NoFunction
        CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1058) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1058) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1058) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1058) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1058) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1058) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1058) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1058) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1058) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1058) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1058) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1058) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1058) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1058) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1058) CFA_SP SP+0
        CFI (cfiCond1058) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1059 Using cfiCommon0
        CFI (cfiCond1059) NoFunction
        CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1059) CFA_SP SP+0
        CFI (cfiCond1059) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1060 Using cfiCommon0
        CFI (cfiCond1060) NoFunction
        CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1060) CFA_SP SP+0
        CFI (cfiCond1060) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1061 Using cfiCommon0
        CFI (cfiCond1061) NoFunction
        CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1061) CFA_SP SP+0
        CFI (cfiCond1061) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1062 Using cfiCommon1
        CFI (cfiPicker1062) NoFunction
        CFI (cfiPicker1062) Picker
        MOV     DPTR,#st
        MOVX    A,@DPTR
        ADD     A,#0x12
        CFI EndBlock cfiCond1054
        CFI EndBlock cfiCond1055
        CFI EndBlock cfiCond1056
        CFI EndBlock cfiCond1057
        CFI EndBlock cfiCond1058
        CFI EndBlock cfiCond1059
        CFI EndBlock cfiCond1060
        CFI EndBlock cfiCond1061
        CFI EndBlock cfiPicker1062
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine137_0:
        CFI Block cfiCond1063 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_280
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1064 Using cfiCommon0
        CFI (cfiCond1064) NoFunction
        CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_281
        CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1064) CFA_SP SP+0
        CFI (cfiCond1064) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1065 Using cfiCommon0
        CFI (cfiCond1065) NoFunction
        CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1065) CFA_SP SP+0
        CFI (cfiCond1065) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1066 Using cfiCommon0
        CFI (cfiCond1066) NoFunction
        CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_283
        CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1066) CFA_SP SP+0
        CFI (cfiCond1066) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1067 Using cfiCommon0
        CFI (cfiCond1067) NoFunction
        CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_284
        CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1067) CFA_SP SP+0
        CFI (cfiCond1067) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1068 Using cfiCommon0
        CFI (cfiCond1068) NoFunction
        CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1068) CFA_SP SP+0
        CFI (cfiCond1068) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1069 Using cfiCommon0
        CFI (cfiCond1069) NoFunction
        CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_286
        CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1069) CFA_SP SP+0
        CFI (cfiCond1069) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1070 Using cfiCommon0
        CFI (cfiCond1070) NoFunction
        CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_287
        CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1070) CFA_SP SP+0
        CFI (cfiCond1070) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1071 Using cfiCommon0
        CFI (cfiCond1071) NoFunction
        CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1071) CFA_SP SP+0
        CFI (cfiCond1071) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1072 Using cfiCommon0
        CFI (cfiCond1072) NoFunction
        CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1072) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1072) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1072) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1072) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1072) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1072) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1072) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1072) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1072) CFA_SP SP+0
        CFI (cfiCond1072) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1073 Using cfiCommon0
        CFI (cfiCond1073) NoFunction
        CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1073) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1073) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1073) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1073) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1073) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1073) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1073) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1073) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1073) CFA_SP SP+0
        CFI (cfiCond1073) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1074 Using cfiCommon0
        CFI (cfiCond1074) NoFunction
        CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_291
        CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1074) CFA_SP SP+0
        CFI (cfiCond1074) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1075 Using cfiCommon0
        CFI (cfiCond1075) NoFunction
        CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_292
        CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1075) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1075) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1075) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1075) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1075) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1075) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1075) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1075) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1075) CFA_SP SP+0
        CFI (cfiCond1075) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1076 Using cfiCommon0
        CFI (cfiCond1076) NoFunction
        CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1076) CFA_SP SP+0
        CFI (cfiCond1076) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1077 Using cfiCommon0
        CFI (cfiCond1077) NoFunction
        CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1077) CFA_SP SP+0
        CFI (cfiCond1077) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1078 Using cfiCommon0
        CFI (cfiCond1078) NoFunction
        CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1078) CFA_SP SP+0
        CFI (cfiCond1078) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1079 Using cfiCommon0
        CFI (cfiCond1079) NoFunction
        CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_279
        CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1079) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1079) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1079) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1079) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1079) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1079) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1079) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1079) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1079) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1079) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1079) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1079) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1079) CFA_SP SP+0
        CFI (cfiCond1079) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1080 Using cfiCommon0
        CFI (cfiCond1080) NoFunction
        CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1080) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1080) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1080) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1080) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1080) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1080) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1080) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1080) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1080) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1080) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1080) CFA_SP SP+0
        CFI (cfiCond1080) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1081 Using cfiCommon0
        CFI (cfiCond1081) NoFunction
        CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1081) CFA_SP SP+0
        CFI (cfiCond1081) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1082 Using cfiCommon0
        CFI (cfiCond1082) NoFunction
        CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1082) CFA_SP SP+0
        CFI (cfiCond1082) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1083 Using cfiCommon0
        CFI (cfiCond1083) NoFunction
        CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1083) CFA_SP SP+0
        CFI (cfiCond1083) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1084 Using cfiCommon1
        CFI (cfiPicker1084) NoFunction
        CFI (cfiPicker1084) Picker
        LCALL   ?Subroutine76 & 0xFFFF
        CFI EndBlock cfiCond1063
        CFI EndBlock cfiCond1064
        CFI EndBlock cfiCond1065
        CFI EndBlock cfiCond1066
        CFI EndBlock cfiCond1067
        CFI EndBlock cfiCond1068
        CFI EndBlock cfiCond1069
        CFI EndBlock cfiCond1070
        CFI EndBlock cfiCond1071
        CFI EndBlock cfiCond1072
        CFI EndBlock cfiCond1073
        CFI EndBlock cfiCond1074
        CFI EndBlock cfiCond1075
        CFI EndBlock cfiCond1076
        CFI EndBlock cfiCond1077
        CFI EndBlock cfiCond1078
        CFI EndBlock cfiCond1079
        CFI EndBlock cfiCond1080
        CFI EndBlock cfiCond1081
        CFI EndBlock cfiCond1082
        CFI EndBlock cfiCond1083
        CFI EndBlock cfiPicker1084
??CrossCallReturnLabel_269:
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine138_0:
        CFI Block cfiCond1085 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_293
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1086 Using cfiCommon0
        CFI (cfiCond1086) NoFunction
        CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_294
        CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1086) CFA_SP SP+0
        CFI (cfiCond1086) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1087 Using cfiCommon0
        CFI (cfiCond1087) NoFunction
        CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1087) CFA_SP SP+0
        CFI (cfiCond1087) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1088 Using cfiCommon0
        CFI (cfiCond1088) NoFunction
        CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1088) CFA_SP SP+0
        CFI (cfiCond1088) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1089 Using cfiCommon0
        CFI (cfiCond1089) NoFunction
        CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1089) CFA_SP SP+0
        CFI (cfiCond1089) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1090 Using cfiCommon0
        CFI (cfiCond1090) NoFunction
        CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_298
        CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1090) CFA_SP SP+0
        CFI (cfiCond1090) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1091 Using cfiCommon0
        CFI (cfiCond1091) NoFunction
        CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_299
        CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1091) CFA_SP SP+0
        CFI (cfiCond1091) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1092 Using cfiCommon0
        CFI (cfiCond1092) NoFunction
        CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1092) CFA_SP SP+0
        CFI (cfiCond1092) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1093 Using cfiCommon0
        CFI (cfiCond1093) NoFunction
        CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1093) CFA_SP SP+0
        CFI (cfiCond1093) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1094 Using cfiCommon0
        CFI (cfiCond1094) NoFunction
        CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1094) CFA_SP SP+0
        CFI (cfiCond1094) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1095 Using cfiCommon0
        CFI (cfiCond1095) NoFunction
        CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_303
        CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1095) CFA_SP SP+0
        CFI (cfiCond1095) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1096 Using cfiCommon0
        CFI (cfiCond1096) NoFunction
        CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_304
        CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1096) CFA_SP SP+0
        CFI (cfiCond1096) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1097 Using cfiCommon0
        CFI (cfiCond1097) NoFunction
        CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_305
        CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1097) CFA_SP SP+0
        CFI (cfiCond1097) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1098 Using cfiCommon0
        CFI (cfiCond1098) NoFunction
        CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1098) CFA_SP SP+0
        CFI (cfiCond1098) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1099 Using cfiCommon0
        CFI (cfiCond1099) NoFunction
        CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_307
        CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1099) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1099) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1099) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1099) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1099) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1099) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1099) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1099) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1099) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1099) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1099) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1099) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1099) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1099) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1099) CFA_SP SP+0
        CFI (cfiCond1099) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1100 Using cfiCommon0
        CFI (cfiCond1100) NoFunction
        CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_308
        CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1100) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1100) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1100) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1100) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1100) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1100) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1100) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1100) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1100) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1100) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1100) CFA_SP SP+0
        CFI (cfiCond1100) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1101 Using cfiCommon0
        CFI (cfiCond1101) NoFunction
        CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_309
        CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1101) CFA_SP SP+0
        CFI (cfiCond1101) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1102 Using cfiCommon0
        CFI (cfiCond1102) NoFunction
        CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_310
        CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1102) CFA_SP SP+0
        CFI (cfiCond1102) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1103 Using cfiCommon0
        CFI (cfiCond1103) NoFunction
        CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_311
        CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1103) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1103) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1103) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1103) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1103) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1103) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1103) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1103) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1103) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1103) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1103) CFA_SP SP+0
        CFI (cfiCond1103) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1104 Using cfiCommon0
        CFI (cfiCond1104) NoFunction
        CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_312
        CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1104) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1104) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1104) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1104) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1104) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1104) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1104) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1104) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1104) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1104) CFA_SP SP+0
        CFI (cfiCond1104) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1105 Using cfiCommon0
        CFI (cfiCond1105) NoFunction
        CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_313
        CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1105) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1105) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1105) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1105) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1105) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1105) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1105) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1105) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1105) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1105) CFA_SP SP+0
        CFI (cfiCond1105) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1106 Using cfiCommon0
        CFI (cfiCond1106) NoFunction
        CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_314
        CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1106) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1106) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1106) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1106) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1106) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1106) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1106) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1106) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1106) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1106) CFA_SP SP+0
        CFI (cfiCond1106) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1107 Using cfiCommon0
        CFI (cfiCond1107) NoFunction
        CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_315
        CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1107) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1107) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1107) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1107) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1107) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1107) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1107) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1107) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1107) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1107) CFA_SP SP+0
        CFI (cfiCond1107) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1108 Using cfiCommon0
        CFI (cfiCond1108) NoFunction
        CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_316
        CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1108) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1108) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1108) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1108) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1108) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1108) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1108) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1108) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1108) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1108) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1108) CFA_SP SP+0
        CFI (cfiCond1108) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1109 Using cfiCommon0
        CFI (cfiCond1109) NoFunction
        CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_317
        CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1109) CFA_SP SP+0
        CFI (cfiCond1109) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1110 Using cfiCommon0
        CFI (cfiCond1110) NoFunction
        CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_318
        CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1110) CFA_SP SP+0
        CFI (cfiCond1110) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond1111 Using cfiCommon0
        CFI (cfiCond1111) NoFunction
        CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_280
        CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1111) CFA_SP SP+0
        CFI (cfiCond1111) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1112 Using cfiCommon0
        CFI (cfiCond1112) NoFunction
        CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_281
        CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1112) CFA_SP SP+0
        CFI (cfiCond1112) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1113 Using cfiCommon0
        CFI (cfiCond1113) NoFunction
        CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1113) CFA_SP SP+0
        CFI (cfiCond1113) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1114 Using cfiCommon0
        CFI (cfiCond1114) NoFunction
        CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_283
        CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1114) CFA_SP SP+0
        CFI (cfiCond1114) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1115 Using cfiCommon0
        CFI (cfiCond1115) NoFunction
        CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_284
        CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1115) CFA_SP SP+0
        CFI (cfiCond1115) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1116 Using cfiCommon0
        CFI (cfiCond1116) NoFunction
        CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1116) CFA_SP SP+0
        CFI (cfiCond1116) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1117 Using cfiCommon0
        CFI (cfiCond1117) NoFunction
        CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_286
        CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1117) CFA_SP SP+0
        CFI (cfiCond1117) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1118 Using cfiCommon0
        CFI (cfiCond1118) NoFunction
        CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_287
        CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1118) CFA_SP SP+0
        CFI (cfiCond1118) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1119 Using cfiCommon0
        CFI (cfiCond1119) NoFunction
        CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1119) CFA_SP SP+0
        CFI (cfiCond1119) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1120 Using cfiCommon0
        CFI (cfiCond1120) NoFunction
        CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1120) CFA_SP SP+0
        CFI (cfiCond1120) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1121 Using cfiCommon0
        CFI (cfiCond1121) NoFunction
        CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1121) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1121) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1121) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1121) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1121) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1121) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1121) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1121) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1121) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1121) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1121) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1121) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1121) CFA_SP SP+0
        CFI (cfiCond1121) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1122 Using cfiCommon0
        CFI (cfiCond1122) NoFunction
        CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_291
        CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1122) CFA_SP SP+0
        CFI (cfiCond1122) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1123 Using cfiCommon0
        CFI (cfiCond1123) NoFunction
        CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_292
        CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1123) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1123) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1123) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1123) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1123) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1123) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1123) CFA_SP SP+0
        CFI (cfiCond1123) CFA_XSP16 add(XSP16, 40)
        CFI Block cfiCond1124 Using cfiCommon0
        CFI (cfiCond1124) NoFunction
        CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1124) CFA_SP SP+0
        CFI (cfiCond1124) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1125 Using cfiCommon0
        CFI (cfiCond1125) NoFunction
        CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1125) CFA_SP SP+0
        CFI (cfiCond1125) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1126 Using cfiCommon0
        CFI (cfiCond1126) NoFunction
        CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1126) CFA_SP SP+0
        CFI (cfiCond1126) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1127 Using cfiCommon0
        CFI (cfiCond1127) NoFunction
        CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_279
        CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1127) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1127) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1127) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1127) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1127) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1127) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1127) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1127) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1127) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1127) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1127) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1127) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1127) CFA_SP SP+0
        CFI (cfiCond1127) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1128 Using cfiCommon0
        CFI (cfiCond1128) NoFunction
        CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1128) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1128) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1128) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1128) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1128) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1128) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1128) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1128) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1128) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1128) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1128) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1128) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1128) CFA_SP SP+0
        CFI (cfiCond1128) CFA_XSP16 add(XSP16, 55)
        CFI Block cfiCond1129 Using cfiCommon0
        CFI (cfiCond1129) NoFunction
        CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1129) CFA_SP SP+0
        CFI (cfiCond1129) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1130 Using cfiCommon0
        CFI (cfiCond1130) NoFunction
        CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1130) CFA_SP SP+0
        CFI (cfiCond1130) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1131 Using cfiCommon0
        CFI (cfiCond1131) NoFunction
        CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1131) CFA_SP SP+0
        CFI (cfiCond1131) CFA_XSP16 add(XSP16, 15)
        CFI Block cfiPicker1132 Using cfiCommon1
        CFI (cfiPicker1132) NoFunction
        CFI (cfiPicker1132) Picker
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond1085
        CFI EndBlock cfiCond1086
        CFI EndBlock cfiCond1087
        CFI EndBlock cfiCond1088
        CFI EndBlock cfiCond1089
        CFI EndBlock cfiCond1090
        CFI EndBlock cfiCond1091
        CFI EndBlock cfiCond1092
        CFI EndBlock cfiCond1093
        CFI EndBlock cfiCond1094
        CFI EndBlock cfiCond1095
        CFI EndBlock cfiCond1096
        CFI EndBlock cfiCond1097
        CFI EndBlock cfiCond1098
        CFI EndBlock cfiCond1099
        CFI EndBlock cfiCond1100
        CFI EndBlock cfiCond1101
        CFI EndBlock cfiCond1102
        CFI EndBlock cfiCond1103
        CFI EndBlock cfiCond1104
        CFI EndBlock cfiCond1105
        CFI EndBlock cfiCond1106
        CFI EndBlock cfiCond1107
        CFI EndBlock cfiCond1108
        CFI EndBlock cfiCond1109
        CFI EndBlock cfiCond1110
        CFI EndBlock cfiCond1111
        CFI EndBlock cfiCond1112
        CFI EndBlock cfiCond1113
        CFI EndBlock cfiCond1114
        CFI EndBlock cfiCond1115
        CFI EndBlock cfiCond1116
        CFI EndBlock cfiCond1117
        CFI EndBlock cfiCond1118
        CFI EndBlock cfiCond1119
        CFI EndBlock cfiCond1120
        CFI EndBlock cfiCond1121
        CFI EndBlock cfiCond1122
        CFI EndBlock cfiCond1123
        CFI EndBlock cfiCond1124
        CFI EndBlock cfiCond1125
        CFI EndBlock cfiCond1126
        CFI EndBlock cfiCond1127
        CFI EndBlock cfiCond1128
        CFI EndBlock cfiCond1129
        CFI EndBlock cfiCond1130
        CFI EndBlock cfiCond1131
        CFI EndBlock cfiPicker1132

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for st>`:
        DATA16
        DW reg
        DW hw
        DATA8
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0
        DATA16
        DW test

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_420c0000:
        DD 420C0000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_47800000:
        DD 47800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_43030000:
        DD 43030000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42830000:
        DD 42830000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42033333:
        DD 42033333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41833333:
        DD 41833333H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3eae147b:
        DD 3EAE147BH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f845a1d:
        DD 3F845A1DH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_37800000:
        DD 37800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_bf800000:
        DD 0BF800000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e0f5c2a:
        DD 3E0F5C2AH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e99999a:
        DD 3E99999AH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f733334:
        DD 3F733334H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41c80000:
        DD 41C80000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f85e354:
        DD 3F85E354H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41200000:
        DD 41200000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42d20001:
        DD 42D20001H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_45000000:
        DD 45000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_ffff0000:
        DD -65536

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??run_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    run_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??inv_orientation_matrix_to_scalar?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    inv_orientation_matrix_to_scalar

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??inv_row_2_scale?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    inv_row_2_scale

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_ms?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_ms

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??set_int_enable?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    set_int_enable

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_reg_dump?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_reg_dump

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_lp_accel_mode?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_lp_accel_mode

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_temperature?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_temperature

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_accel_bias?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_accel_bias

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_reset_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_reset_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_gyro_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_gyro_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_accel_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_accel_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_lpf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_lpf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_lpf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_lpf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_compass_sample_rate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_compass_sample_rate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_gyro_sens?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_gyro_sens

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_accel_sens?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_accel_sens

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_fifo_config?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_fifo_config

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_configure_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_configure_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_power_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_power_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_sensors?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_sensors

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_int_status?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_int_status

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_fifo?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_fifo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_fifo_stream?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_fifo_stream

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_bypass?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_bypass

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_int_level?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_int_level

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_int_latched?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_int_latched

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_accel_prod_shift?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_accel_prod_shift

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??accel_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    accel_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??gyro_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    gyro_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_st_biases?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_st_biases

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_run_self_test?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_run_self_test

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_write_mem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_write_mem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_read_mem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_read_mem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_load_firmware?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_load_firmware

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_set_dmp_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_set_dmp_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_dmp_state?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_dmp_state

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_reg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_reg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_get_compass_fsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_get_compass_fsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mpu_lp_motion_interrupt?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mpu_lp_motion_interrupt

        END
// 2969 
// 2970 /**
// 2971  *  @}
// 2972  */
// 2973 
// 
// 9 574 bytes in segment BANKED_CODE
//   294 bytes in segment BANK_RELAYS
//    35 bytes in segment XDATA_I
//    35 bytes in segment XDATA_ID
//   160 bytes in segment XDATA_ROM_C
// 
// 9 903 bytes of CODE  memory
//    76 bytes of CONST memory (+ 84 bytes shared)
//    35 bytes of XDATA memory
//
//Errors: none
//Warnings: none
